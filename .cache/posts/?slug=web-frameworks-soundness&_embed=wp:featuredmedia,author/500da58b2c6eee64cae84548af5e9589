{"value":{"body":"[{\"id\":15382,\"date\":\"2017-10-03T09:37:32\",\"date_gmt\":\"2017-10-03T16:37:32\",\"guid\":{\"rendered\":\"https://www.sitepen.com/blog/?p=15382\"},\"modified\":\"2020-03-30T06:30:56\",\"modified_gmt\":\"2020-03-30T13:30:56\",\"slug\":\"web-frameworks-soundness\",\"status\":\"publish\",\"type\":\"post\",\"link\":\"https://wp.sitepen.com/blog/web-frameworks-soundness/\",\"title\":{\"rendered\":\"Web Frameworks: Soundness\"},\"content\":{\"rendered\":\"<!-- Added by Post/Page specific custom CSS plugin, thank you for using! -->\\n<style type=\\\"text/css\\\">.title span {\\r\\ndisplay:block;\\r\\nfont-weight:inherit !important;\\r\\n}\\r\\nli {\\r\\nmargin-bottom:.5em !important;\\r\\n}\\r\\nblockquote {\\r\\nmargin-top:-5px;\\r\\nfloat:right;\\r\\nmargin-right:-10%;\\r\\nmax-width:450px;\\r\\nmargin-left:20px;\\r\\nmargin-bottom:20px;\\r\\nbackground:#f4f7f9;\\r\\npadding:20px;\\r\\nborder-left:5px solid #dfe6ea;\\r\\n}\\r\\nblockquote p {\\r\\nline-height:1.3em;\\r\\nmargin-top:0;\\r\\nmargin-bottom:0;\\r\\n}\\r\\n.rule {\\r\\nheight:1px;\\r\\nwidth:100%;\\r\\ndisplay:block;\\r\\nclear:both;\\r\\nmargin-bottom:40px;\\r\\nmargin-top:40px;\\r\\nbackground:#EAEAEA;\\r\\n}\\r\\n.feature-icon {\\r\\ndisplay: block;\\r\\nmargin-left:auto;\\r\\nmargin-right:auto;\\r\\nwidth:130px;\\r\\nmargin-bottom:10px;\\r\\n}\\r\\n.feature-item {\\r\\ntext-align:center;\\r\\nmargin-top: 10px !important;\\r\\nmargin-bottom:30px !important;\\r\\n}\\r\\n.pull-right {\\r\\nmax-width:600px;\\r\\nfloat:right;\\r\\nmargin-right:-100px;\\r\\nmargin-left:20px;\\r\\nmargin-bottom:20px;\\r\\n}\\r\\n.jump-to {\\r\\nmargin:0 !important;\\r\\ntext-align:center;\\r\\n}\\r\\n.jump-to li {\\r\\nmargin:0 !important;\\r\\nwidth:15%;\\r\\ndisplay:inline-block;\\r\\npadding:5px;\\r\\n}\\r\\n.jump-nav {\\r\\nposition:fixed;\\r\\nbottom:0px;\\r\\nleft:0px;\\r\\nwidth:100%;\\r\\n}\\r\\n@media screen and (max-width: 1150px) {\\r\\n.pull-right {\\r\\nmax-width:400px;\\r\\nmargin-right:0;\\r\\n}\\r\\nblockquote {\\r\\nmargin-right:0;\\r\\nmargin-top:1.5rem;\\r\\n}\\r\\n}\\r\\n@media screen and (max-width: 768px) {\\r\\n.pull-right {\\r\\nmax-width:inherit;\\r\\nfloat:none;\\r\\nmargin-bottom:0;\\r\\nmargin-left:0;\\r\\n}\\r\\nblockquote {\\r\\nfloat:none;\\r\\ndisplay:block;\\r\\nmargin-left:auto;\\r\\nmargin-right:auto;\\r\\nborder-left:none;\\r\\nmax-width:85%;\\r\\ntext-align:center;\\r\\n}\\r\\n}</style>\\n<p>For a web framework to be effective, it should offer you more than just functionality. It doesn&#8217;t matter how much hard work you put into your application if it breaks when people use it. Beyond testing, let&#8217;s explore how frameworks can help us build better code before we test it.</p>\\n<p><!--more--></p>\\n<p>While we have been comparing web frameworks to music, soundness in this context isn&#8217;t how good the framework sounds on a turntable. It is the concept of our code being in a good condition and robust. While we should and can test for this, helping us in other ways should be one of the main benefits of using a framework.</p>\\n<p>This is part of a series on web frameworks. If youâ€™ve missed our previous posts, you may want to start with <a href=\\\"https://www.sitepen.com/blog/2017/06/13/if-we-chose-our-javascript-framework-like-we-chose-our-music/\\\">If we chose our JavaScript framework like we choose our music&#8230;</a></p>\\n<h2 id=\\\"overview\\\">Overview</h2>\\n<p>It is unlikely that you would ever get anyone who was involved in the early days of JavaScript to admit the language was created to be the ubiquitous language of applications. It was initially built in 10 days as a scripting language to make websites a little bit more interactive. Now, JavaScript has exploded, but its very nature makes it very flexible at run-time. This allows what is syntactically correct JavaScript to potentially be hugely unpredictable.</p>\\n<p>Also, unlike many other application development solutions, it isn&#8217;t just one <em>language</em> we have to use. Outside of JavaScript, most applications have to deal with some level of HTML and CSS. Also, most applications have to deal with external resources as well, from images to serialized metadata and fonts.</p>\\n<blockquote><p>\\nTo get our application to perform properly, the server environment that it runs in can have a dramatic impact on our application\\n</p></blockquote>\\n<p>To get our application to perform properly, the server environment that it runs in can have a dramatic impact on our application. Furthermore, we still must contend with running our application in different contexts, from older browsers to low powered mobile devices.</p>\\n<p>We will look at how each framework approaches these challenge of helping an end developer better <em>know</em> that the code they author will operate as they intend.</p>\\n<p>There are generally three areas where a framework can help us, and we will look at each framework from those stages. First, we have development time. What sort of information can we get during development time that helps us know if we are authoring our code properly? Second, when we go to <em>build</em> our applications, before we deploy them, is there any <em>secret sauce</em> that helps ensure that our application will work? Third, once we have our application loaded on the server, is there anything that helps us ensure that the application runs properly?</p>\\n<h4 style=\\\"text-align: center;\\\">Jump to:</h4>\\n<ul class=\\\"jump-to\\\">\\n<li><a href=\\\"#angular\\\"><img src=\\\"https://wp.sitepen.com/wp-content/uploads/2017/06/angular-logo.png\\\" alt=\\\"logo\\\" /></a></li>\\n<li><a href=\\\"#react\\\"><img src=\\\"https://wp.sitepen.com/wp-content/uploads/2017/06/react-logo.png\\\" alt=\\\"logo\\\" /></a></li>\\n<li><a href=\\\"#vue\\\"><img src=\\\"https://wp.sitepen.com/wp-content/uploads/2017/06/vue-logo.png\\\" alt=\\\"logo\\\" /></a></li>\\n<li><a href=\\\"#dojo\\\"><img src=\\\"https://wp.sitepen.com/wp-content/uploads/2017/06/dojo-logo.png\\\" alt=\\\"logo\\\" /></a></li>\\n<li><a href=\\\"#ember\\\"><img src=\\\"https://wp.sitepen.com/wp-content/uploads/2017/06/ember-logo.png\\\" alt=\\\"logo\\\" /></a></li>\\n<li><a href=\\\"#aurelia\\\"><img src=\\\"https://wp.sitepen.com/wp-content/uploads/2017/06/aurelia-logo.png\\\" alt=\\\"logo\\\" /></a></li>\\n</ul>\\n<div id=\\\"angular\\\" class=\\\"rule\\\"></div>\\n<div class=\\\"feature-icon\\\"><img class=\\\"alignnone size-full wp-image-14439\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2017/06/angular-logo.png\\\" alt=\\\"\\\" /></div>\\n<h2 class=\\\"feature-item\\\">Angular 2+</h2>\\n<h3 id=\\\"overall-approach\\\">Overall approach</h3>\\n<p>Angular 2+ is authored in TypeScript, which provides internal soundness to the Angular code base. TypeScript can also provide a level of downstream type soundness when authoring code with Angular 2+ in TypeScript. The Angular 2+ CLI includes a linting command, which will help ensure that code styling and conventions are enforced.</p>\\n<h3 id=\\\"development-time\\\">Development time</h3>\\n<p>At development time, when authoring in TypeScript there is support leveraging the libraries in a sound way, with code completion and static detection of some logic errors. Because Angular 2+ relies heavily on ES.Next Decorators, which change the run-time behavior of components, as well as a specialized template language, it is difficult to fully ensure that run-time behavior is ensured at development time.</p>\\n<p>For Visual Studio Code, there is an <a href=\\\"https://marketplace.visualstudio.com/items?itemName=Angular.ng-template\\\">Angular template language service available</a>, which provides IntelliSense for Angular 2+ templates, which helps improve the support for detecting template syntactic errors at design time.</p>\\n<h3 id=\\\"build-time\\\">Build time</h3>\\n<p>At build time, the TypeScript compiler can help ensure sound behavior, again with the limitations of being able to statically analyze the behavior added via decorators. For templates, Angular offers ahead of time (AOT) compilation. If used, static syntactical issues with templates will be identified at build time. If not used, the just in time (JIT) template compiler is used within the browser at run-time.</p>\\n<p>Both testing and linting are not part of the out of the box Angular build process. They are standalone commands when using the CLI build command, which the developer would need to be aware of to ensure they have a robust build process. Of course, these can easily be integrated into a CI process.</p>\\n<h3 id=\\\"run-time\\\">Runtime</h3>\\n<p>When using the JIT template compiler, template errors are identified in the browser. In addition, there is <a href=\\\"https://augury.angular.io/\\\">Augury</a>, a Chrome Dev Tools extension for debugging Angular 2+ applications.</p>\\n<div id=\\\"react\\\" class=\\\"rule\\\"></div>\\n<div class=\\\"feature-icon\\\"><img class=\\\"alignnone size-full wp-image-14439\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2017/06/react-logo.png\\\" alt=\\\"\\\" /></div>\\n<h2 class=\\\"feature-item\\\">React + Redux</h2>\\n<h3 id=\\\"overall-approach-1\\\">Overall approach</h3>\\n<p>Another Facebook project, <a href=\\\"https://flow.org/\\\">Flow</a>, provides static type checking for projects like React. Redux is built without any strong type checking. Both React and Redux offer official TypeScript typings that are bundled with the distribution packages. In addition, there are guides to using <a href=\\\"https://flow.org/en/docs/react/\\\">React and Redux with Flow</a>.</p>\\n<p>One of the more challenging aspects of sound development with React + Redux is that Redux action types are strings. As a result, it can be quite easy at design time to utilize actions improperly, making it impossible to statically identify incorrect actions at design time.</p>\\n<p>React and Redux both promote writing code that is separable and fully testable. In particular, Redux promotes the use of <em>pure</em> functions for reducers, which, when followed, ensures that a reducer is fully testable without a need for injecting state into the reducer. The belief of this architecture is that it promotes patterns that reduce cross dependencies between units of code, which could make an entire system fragile.</p>\\n<h3 id=\\\"development-time-1\\\">Development time</h3>\\n<p>There are generally two approaches to providing soundness at development time with React + Redux. First, most IDEs have support for Flow or the support is added via an extension. WebStorm (and IntelliJ) support Flow out of the box, Visual Studio Code and Atom are supported through plugins. This support allows static issues to be identified within the source code using the Flow type system.</p>\\n<p>Also, it has become somewhat common to develop React + Redux applications in TypeScript. Since both packages provide their TypeScript typings integrated with the package, it is possible to author downstream applications that are sound, based on the provided typings. This includes that ability to author JSX in a sound fashion using the builtin JSX support of TypeScript, also known as TSX.</p>\\n<h3 id=\\\"build-time-1\\\">Build time</h3>\\n<p>Since both React and Redux are standalone libraries, they do not presume a specific build process. Both Flow and TypeScript can be enforced at build time, as well as JSX syntax.</p>\\n<h3 id=\\\"run-time-1\\\">Runtime</h3>\\n<p>Another Facebook project, <a href=\\\"https://facebook.github.io/immutable-js/\\\">Immutable.js</a> is often used with React + Redux applications. It provides <em>immutable</em> data structures that are designed provide run-time enforcement of unintentional mutations of data structures in an application.</p>\\n<p>React provides a <a href=\\\"https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi\\\">React Developer Tools</a> extension for Chrome. There is also a special <em>debug</em> mode for React which provides additional run-time metadata which can be used to help debug an application.</p>\\n<div id=\\\"vue\\\" class=\\\"rule\\\"></div>\\n<div class=\\\"feature-icon\\\"><img class=\\\"alignnone size-full wp-image-14439\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2017/06/vue-logo.png\\\" alt=\\\"\\\" /></div>\\n<h2 class=\\\"feature-item\\\">Vue.js</h2>\\n<h3 id=\\\"overall-approach-2\\\">Overall approach</h3>\\n<p>Vue uses Flow internally for typing, and it provides TypeScript definitions for external use for core Vue, vue-router, and Vuex. They provide the <a href=\\\"https://github.com/vuejs/vue-class-component\\\">view-class-component</a> library to simplify the process of using types when creating components.</p>\\n<p>The Vue documentation encourages unit testing of Vue components, although the Vue project does not recommend any particular unit testing framework.</p>\\n<h3 id=\\\"development-time-2\\\">Development time</h3>\\n<p>Vue has an official CLI app, <a href=\\\"https://github.com/vuejs/vue-cli\\\">vue-cli</a>. This app has several built-in templates that provide an initial structure to a Vue app.</p>\\n<h3 id=\\\"build-time-2\\\">Build time</h3>\\n<p>The Vue docs encourage unit testing of components. The vue-loader docs specifically address unit testing Vue single-file components, including test running with Karma and mocking dependencies.</p>\\n<h3 id=\\\"run-time-2\\\">Runtime</h3>\\n<p>Vue components can include property validators. These specify requirements for received property values, and Vue will emit warnings if these requirements are met when a property value is set.</p>\\n<p>An application can register a global error handler through <code>Vue.config.errorHandler</code>. All render errors will be passed to this handler.</p>\\n<div id=\\\"dojo\\\" class=\\\"rule\\\"></div>\\n<div class=\\\"feature-icon\\\"><img class=\\\"alignnone size-full wp-image-14439\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2017/06/dojo-logo.png\\\" alt=\\\"\\\" /></div>\\n<h2 class=\\\"feature-item\\\">Dojo 2</h2>\\n<h3 id=\\\"overall-approach-3\\\">Overall approach</h3>\\n<p>Dojo 2 is authored in TypeScript and is distributed with its TypeScript typings. It is intended that downstream code is also authored in TypeScript. The framework is made up of modular packages that can be used together or independently.</p>\\n<p>The Dojo 2 CLI is designed to make it easier for developers to ensure that their applications are structured appropriately, testable, and built in an efficient way.</p>\\n<h3 id=\\\"development-time-3\\\">Development time</h3>\\n<p>One of the main design goals of Dojo 2 is that the use of TypeScript should promote sound code development for the end user. The framework is authored to help ensure that types are fully leveraged to provide as much information to the developer at development time. This includes the use of CSS Modules for the theming system to provide IntelliSense and code completion for CSS at design time and ensuring that CSS is tightly coupled with the modules that use that CSS.</p>\\n<h3 id=\\\"build-time-3\\\">Build time</h3>\\n<p>The out of the box CLI build process ensures sound development via TypeScript and that CSS dependencies are bundled with the build. In addition, if a <code>tslint.json</code> file is present, the CLI will automatically lint the project as part of the build process.</p>\\n<h3 id=\\\"run-time-3\\\">Runtime</h3>\\n<p>Currently, outside of a few warnings, there is no additional tooling beyond standard browser developer tools to assist the developer in debugging an application. Further run-time tooling is on the Dojo roadmap.</p>\\n<div id=\\\"ember\\\" class=\\\"rule\\\"></div>\\n<div class=\\\"feature-icon\\\"><img class=\\\"alignnone size-full wp-image-14439\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2017/06/ember-logo.png\\\" alt=\\\"\\\" /></div>\\n<h2 class=\\\"feature-item\\\">Ember</h2>\\n<h3 id=\\\"overall-approach-4\\\">Overall approach</h3>\\n<p>Traditionally, Ember.js has focused heavily on convention to encourage the developer to build sound applications. Now that there is fundamental tooling that allows a better approach, Ember.js has started to adopt this. Glimmer is authored in TypeScript and Ember has introduced TypeScript typings for downstream code authoring in TypeScript. In addition, Ember has had a long-term vocal presence in the standards committee for ECMAScript, advocating for solutions to common problems and issues that developers experience when authoring applications.</p>\\n<h3 id=\\\"development-time-4\\\">Development time</h3>\\n<p>Ember.js has a feature-rich CLI which provides significant development time structure to applications. Again, Ember.js provides many conventions to help ensure that applications behave as designed.</p>\\n<p>There are third-party plugins for WebStorm (IntelliJ), Visual Studio Code, and Atom which can help provide IntelliSense when developing an Ember.js based application.</p>\\n<h3 id=\\\"build-time-4\\\">Build time</h3>\\n<p>At build time, Ember.js provides an out of the box build solution with their CLI tool. The Ember.js CLI is designed to be extensible and the build command can incorporate other functionality like linting. Ember.js tends to utilize templates, authored in Handlebars.js, and the validation of those templates occurs at build time.</p>\\n<h3 id=\\\"run-time-4\\\">Runtime</h3>\\n<p>Ember.js provides <a href=\\\"https://guides.emberjs.com/v2.14.0/configuring-ember/debugging/\\\">Ember debug options</a> which will provide enhanced diagnostics to make it easier to identify issues in an application at runtime. In addition, the <a href=\\\"https://chrome.google.com/webstore/detail/ember-inspector/bmdblncegkenkacieihfhpjfppoconhi?hl=en\\\">Ember Inspector</a> is a Chrome Dev Tool plugin that provides additional tools to facilitate debugging of Ember.js applications.</p>\\n<div id=\\\"aurelia\\\" class=\\\"rule\\\"></div>\\n<div class=\\\"feature-icon\\\"><img class=\\\"alignnone size-full wp-image-14439\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2017/06/aurelia-logo.png\\\" alt=\\\"\\\" /></div>\\n<h2 class=\\\"feature-item\\\">Aurelia</h2>\\n<h3 id=\\\"overall-approach-5\\\">Overall approach</h3>\\n<p>Some of Aurelia is authored in TypeScript, and all of the modules provide their TypeScript typings to make downstream authoring in TypeScript a possibility. The main focus of Aurelia is to try to keep the entire framework modular to promote a decoupled architecture and testability.</p>\\n<h3 id=\\\"development-time-5\\\">Development time</h3>\\n<p>When authoring downstream applications in TypeScript it is possible to harness the typings for Aurelia to author sound downstream code.</p>\\n<p>Aurelia, like other frameworks, does rely on templates for creating components. There is a <a href=\\\"http://blog.aurelia.io/2016/10/11/introducing-the-aurelia-vs-code-plugin/\\\">Visual Studio Code</a> extension which gives some code completion and IntelliSense for the template language. The last commit to this project was over 4 months ago, so it is difficult to determine if this extension is actively developed and maintained.</p>\\n<h3 id=\\\"build-time-5\\\">Build time</h3>\\n<p>When scaffolding applications, Aurelia&#8217;s CLI will encourage linting and promote patterns around testing. The biggest way in which Aurelia ensures soundness at build time is by encouraging the development of applications in TypeScript.</p>\\n<h3 id=\\\"run-time-5\\\">Run time</h3>\\n<p>Aurelia encourages patterns around providing informative error messages but does not have any formal structures for providing instrumentation or debugging information for an application.</p>\\n<h2 id=\\\"summary\\\">Summary</h2>\\n<h3 id=\\\"angular-2-1\\\">Angular 2+</h3>\\n<p>Angular 2+ using a strongly typed language like TypeScript certainly improves the soundness of the project. The end developer experience is not quite as sound and straightforward due to the heavy reliance on templates, which tend to contain application logic, and the use of decorators to achieve run-time behavior.</p>\\n<p>There is a decent amount of tooling to make an entire Angular application <em>hang together</em> and good tooling to provide run-time insight and debugging to an application.</p>\\n<h3 id=\\\"react-redux-1\\\">React + Redux</h3>\\n<p>React + Redux provide typing information to make it easy to author downstream applications in Flow or TypeScript. They also promote patterns that make source code more separable and testable. Like many things with React and Redux, it is up to the end development team to ensure that these practices and conventions are followed. For teams that know what they are doing, these libraries and other associated libraries are great tools.</p>\\n<h3 id=\\\"vue.js-1\\\">Vue.js</h3>\\n<p>Vue.js makes developing code in a sound and structured fashion straightforward. There is a good set of tooling to help ensure that applications behave as expected. Vue.js provides good information about how to go about testing code based on its framework. There are run-time capabilities which help ensure that data running through the application at run-time is valid.</p>\\n<h3 id=\\\"dojo-2-1\\\">Dojo 2</h3>\\n<p>Dojo 2 is built with TypeScript with a specific focus to provide a sound framework for developers to create applications. Dojo 2 has a good set of tooling ensuring that a built application behaves properly at run-time. It also promotes patterns of modular separable code that can be fully tested.</p>\\n<h3 id=\\\"ember.js-1\\\">Ember.js</h3>\\n<p>Ember.js mostly relies upon strong structural conventions to ensure that applications behave properly at run-time. Ember continues to be receptive to new technologies, like TypeScript, which can promote more sound coding. Ember provides an extensive set of tooling which is highly extendable by third-party plugins to provide a robust pipeline and offers run-time instrumentation and debugging tools.</p>\\n<h3 id=\\\"aurelia-1\\\">Aurelia</h3>\\n<p>Aurelia&#8217;s encouragement of downstream development in TypeScript is the biggest benefit it has for creating sound applications. While Aurelia relies upon templates like some other frameworks, they rely less on <em>magic</em> being injected into components. Like many things though with Aurelia, it feels like they have a robust approach and direction, but have had some difficulty in materializing a full solution.</p>\\n<h2 id=\\\"up-next\\\">Up next</h2>\\n<p>Up to this point, we have looked at what each of the frameworks has to offer you, mostly from a technical perspective. One of the challenges of modern web application development though is that it is not just source code, it is about the wider community of people and how each of the frameworks governs itself. Invariably you will need help with adopting a framework and having an understanding of the larger community can impact your decisions. In the next in the series, we will explore the community aspect of each framework.</p>\\n\",\"protected\":false},\"excerpt\":{\"rendered\":\"<p>For a web framework to be effective, it should offer you more than just functionality. It doesn&#8217;t matter how much hard work you put into your application if it breaks when people use it. Beyond testing, let&#8217;s explore how frameworks can help us build better code before we test it.</p>\\n\",\"protected\":false},\"author\":67,\"featured_media\":22176,\"comment_status\":\"closed\",\"ping_status\":\"closed\",\"sticky\":false,\"template\":\"\",\"format\":\"standard\",\"meta\":{\"spay_email\":\"\"},\"categories\":[444,445,214,448,2,215,3,29,11,234],\"tags\":[],\"series\":[447],\"jetpack_featured_media_url\":\"https://wp.sitepen.com/wp-content/uploads/2017/10/Web-Frameworks-Soundness.jpg\",\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.4.1 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Web Frameworks: Soundness | SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"index, follow\\\" />\\n<meta name=\\\"googlebot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<meta name=\\\"bingbot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<link rel=\\\"canonical\\\" href=\\\"https://www.sitepen.com/blog/web-frameworks-soundness/\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Web Frameworks: Soundness | SitePen\\\" />\\n<meta property=\\\"og:description\\\" content=\\\"For a web framework to be effective, it should offer you more than just functionality. It doesn&#8217;t matter how much hard work you put into your application if it breaks when people use it. Beyond testing, let&#8217;s explore how frameworks can help us build better code before we test it.\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/web-frameworks-soundness/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:published_time\\\" content=\\\"2017-10-03T16:37:32+00:00\\\" />\\n<meta property=\\\"article:modified_time\\\" content=\\\"2020-03-30T13:30:56+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2017/10/Web-Frameworks-Soundness.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1200\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"630\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/web-frameworks-soundness/#primaryimage\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2017/10/Web-Frameworks-Soundness.jpg\\\",\\\"width\\\":1200,\\\"height\\\":630,\\\"caption\\\":\\\"Web Frameworks: Soundness\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/web-frameworks-soundness/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/web-frameworks-soundness/\\\",\\\"name\\\":\\\"Web Frameworks: Soundness | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"primaryImageOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/web-frameworks-soundness/#primaryimage\\\"},\\\"datePublished\\\":\\\"2017-10-03T16:37:32+00:00\\\",\\\"dateModified\\\":\\\"2020-03-30T13:30:56+00:00\\\",\\\"author\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/13093841ff1b780913b10a245cc737ee\\\"},\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://www.sitepen.com/blog/web-frameworks-soundness/\\\"]}]},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/13093841ff1b780913b10a245cc737ee\\\",\\\"name\\\":\\\"Kit Kelly\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Kit Kelly\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/15382\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/post\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/67\"}],\"replies\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/comments?post=15382\"}],\"version-history\":[{\"count\":1,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/15382/revisions\"}],\"predecessor-version\":[{\"id\":22177,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/15382/revisions/22177\"}],\"wp:featuredmedia\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/22176\"}],\"wp:attachment\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media?parent=15382\"}],\"wp:term\":[{\"taxonomy\":\"category\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/categories?post=15382\"},{\"taxonomy\":\"post_tag\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/tags?post=15382\"},{\"taxonomy\":\"series\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/series?post=15382\"}],\"curies\":[{\"name\":\"wp\",\"href\":\"https://api.w.org/{rel}\",\"templated\":true}]},\"_embedded\":{\"author\":[{\"id\":67,\"name\":\"Kit Kelly\",\"url\":\"\",\"description\":\"\",\"link\":\"https://wp.sitepen.com/blog/author/kkelly/\",\"slug\":\"kkelly\",\"avatar_urls\":{\"24\":\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=24&d=mm&r=g\",\"48\":\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=48&d=mm&r=g\",\"96\":\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=96&d=mm&r=g\"},\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.4.1 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Kit Kelly, Author at SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"profile\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Kit Kelly, Author at SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/author/kkelly/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=500&#038;d=mm&#038;r=g\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ProfilePage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/kkelly/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/author/kkelly/\\\",\\\"name\\\":\\\"Kit Kelly, Author at SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/13093841ff1b780913b10a245cc737ee\\\",\\\"name\\\":\\\"Kit Kelly\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Kit Kelly\\\"},\\\"mainEntityOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/kkelly/#webpage\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/67\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users\"}]}}],\"wp:featuredmedia\":[{\"id\":22176,\"date\":\"2020-01-28T09:11:24\",\"slug\":\"web-frameworks-soundness-2\",\"type\":\"attachment\",\"link\":\"https://wp.sitepen.com/blog/web-frameworks-soundness/web-frameworks-soundness-2/\",\"title\":{\"rendered\":\"Web Frameworks- Soundness\"},\"author\":5,\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.4.1 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Web Frameworks- Soundness | SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Web Frameworks- Soundness | SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2017/10/Web-Frameworks-Soundness.jpg\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:modified_time\\\" content=\\\"2020-01-28T17:11:28+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2017/10/Web-Frameworks-Soundness.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1200\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"630\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2017/10/Web-Frameworks-Soundness.jpg#webpage\\\",\\\"url\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2017/10/Web-Frameworks-Soundness.jpg\\\",\\\"name\\\":\\\"Web Frameworks- Soundness | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"datePublished\\\":\\\"2020-01-28T17:11:24+00:00\\\",\\\"dateModified\\\":\\\"2020-01-28T17:11:28+00:00\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://wp.sitepen.com/wp-content/uploads/2017/10/Web-Frameworks-Soundness.jpg\\\"]}]}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"caption\":{\"rendered\":\"\"},\"alt_text\":\"Web Frameworks: Soundness\",\"media_type\":\"image\",\"mime_type\":\"image/jpeg\",\"media_details\":{\"width\":1200,\"height\":630,\"file\":\"2017/10/Web-Frameworks-Soundness.jpg\",\"sizes\":{\"medium\":{\"file\":\"Web-Frameworks-Soundness-300x158.jpg\",\"width\":300,\"height\":158,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2017/10/Web-Frameworks-Soundness-300x158.jpg\"},\"large\":{\"file\":\"Web-Frameworks-Soundness-1024x538.jpg\",\"width\":1024,\"height\":538,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2017/10/Web-Frameworks-Soundness-1024x538.jpg\"},\"thumbnail\":{\"file\":\"Web-Frameworks-Soundness-150x150.jpg\",\"width\":150,\"height\":150,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2017/10/Web-Frameworks-Soundness-150x150.jpg\"},\"medium_large\":{\"file\":\"Web-Frameworks-Soundness-768x403.jpg\",\"width\":768,\"height\":403,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2017/10/Web-Frameworks-Soundness-768x403.jpg\"},\"full\":{\"file\":\"Web-Frameworks-Soundness.jpg\",\"width\":1200,\"height\":630,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2017/10/Web-Frameworks-Soundness.jpg\"}},\"image_meta\":{\"aperture\":\"0\",\"credit\":\"\",\"camera\":\"\",\"caption\":\"\",\"created_timestamp\":\"0\",\"copyright\":\"\",\"focal_length\":\"0\",\"iso\":\"0\",\"shutter_speed\":\"0\",\"title\":\"\",\"orientation\":\"0\",\"keywords\":[]}},\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2017/10/Web-Frameworks-Soundness.jpg\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/22176\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/attachment\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/5\"}]}}]}}]","headers":[["access-control-allow-headers","Authorization, Content-Type"],["access-control-expose-headers","X-WP-Total, X-WP-TotalPages"],["allow","GET"],["cf-cache-status","DYNAMIC"],["cf-ray","5a807e95f8e30756-LHR"],["cf-request-id","03842d71b80000075670840200000001"],["connection","close"],["content-encoding","gzip"],["content-type","application/json; charset=UTF-8"],["date","Tue, 23 Jun 2020 19:07:53 GMT"],["expect-ct","max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""],["link","<https://wp.sitepen.com/wp-json/>; rel=\"https://api.w.org/\""],["server","cloudflare"],["set-cookie","__cfduid=d5de0ef2e953c0afd767b55ef6170dc7e1592939272; expires=Thu, 23-Jul-20 19:07:52 GMT; path=/; domain=.sitepen.com; HttpOnly; SameSite=Lax"],["transfer-encoding","chunked"],["vary","Origin"],["x-content-type-options","nosniff"],["x-robots-tag","noindex"],["x-wp-total","1"],["x-wp-totalpages","1"]]},"type":"Object"}