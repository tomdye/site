{"value":{"body":"[{\"id\":314,\"date\":\"2008-05-08T00:01:13\",\"date_gmt\":\"2008-05-08T07:01:13\",\"guid\":{\"rendered\":\"https://www.sitepen.com/blog/2008/05/08/porting-dojo-methods-to-flash-part-3-of-3/\"},\"modified\":\"2008-05-08T00:01:13\",\"modified_gmt\":\"2008-05-08T07:01:13\",\"slug\":\"porting-dojo-methods-to-flash-part-3-of-3\",\"status\":\"publish\",\"type\":\"post\",\"link\":\"https://wp.sitepen.com/blog/porting-dojo-methods-to-flash-part-3-of-3/\",\"title\":{\"rendered\":\"Porting Dojo Methods to Flash &#8211; Part 3 of 3\"},\"content\":{\"rendered\":\"<p>This is the final part of our three part series on porting Dojo methods to Flash.</p>\\n<p>In <a href=\\\"https://www.sitepen.com/blog/2008/05/01/porting-dojo-methods-to-flash-part-1-of-3/\\\">part one</a> of our series, we implemented Dojo&#8217;s <code>hitch</code> method, and then used hitch in <a href=\\\"https://www.sitepen.com/blog/2008/05/02/porting-dojo-methods-to-flash-part-2-of-3/\\\">part two</a>, where we made our <code>connect</code> method.  In part three, we will be using both of these methods as we connect a JavaScript object to a Flash object.</p>\\n<p><!--more--></p>\\n<p>We&#8217;ll start by setting up our test case. We&#8217;ll need an HTML page with an embedded SWF that contains a few Flash buttons and a text field, and then a text field in HTML:</p>\\n<p><img src='https://wp.sitepen.com/wp-content/uploads/2008/05/flashjsconnect_01.png' alt='FlashToJs 01' /></p>\\n<p>Our overall goal is to tell the SWF, &#8220;When a Flash button is clicked, trigger a function in the JavaScript environment thats sets my text field&#8221;. </p>\\n<p>Our SWF file needs to provide a channel for JavaScript to communicate with it. In Flash, import the <code>ExternlInterface</code> (the Flash 8+ method to communicate with its container environment) and use that to place a function in JavaScript which we&#8217;ll call <code>connectToSwf</code>, and link that to a function in the &#8220;this&#8221; scope called <code>jsConnect</code>: </p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\n// ActionScript\\nimport flash.external.*;\\nExternalInterface.addCallback(\\\"connectToSwf\\\", this, jsConnect);\\n</pre>\\n<p>The <code>jsConnect</code> is quite simple. It will accept three arguments, all strings, even the object. We have no actual access to the SWF button, so we couldn&#8217;t pass a reference to it, even if we could get that reference through the ExternalInterface. So we pass a string for the scope and the event, and then use the <code>lang.connect</code> code that we built in Part 2 to connect to the button and its event. When this connection is made, the ExternalInterface makes a call to JS to an event that we will provide ( <code>swfEvent.connectToJs</code> ), passing <code>strCallback</code> back. <code>swfEvent.connectToJs</code> is hard coded in the SWF, but this could be passed in as well.</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\n// ActionScript\\nfunction jsConnect(strSwfScope, strSwfEvent, strCallback){\\n\\tlang.connect(_root[strSwfScope], strSwfEvent, function(){\\n\\t\\tExternalInterface.call(\\\"swfEvent.connectToJs\\\", strCallback);\\n\\t})\\n}\\n</pre>\\n<p>Okay. I cheated. This code will only work if the <code>strSwfScope</code> is on the root of the timeline. A more robust version might use <code>resolveObject(strSwfScope)</code> where that function could split a string on the dot delineator and loop through each string until the object is found.</p>\\n<p>The buttons are created and named &#8220;flashButton1&#8221; and &#8220;flashButton2&#8221;, a text field is placed for reference, and the SWF is published. To insert the SWF into the page, we&#8217;ll use <code>dojox.av</code>, by requiring the package, waiting for the initialization, and then placing our SWF file. </p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\n// JavaScript\\ndojo.require(\\\"dojox.av\\\");\\n\\nvar flashMovie;\\nvar testMovieUrl=\\\"connect.swf\\\";\\ndojo.addOnLoad(function(){\\n\\tflashMovie = dojox.av.flash.place(\\n\\t\\tdojo.byId(\\\"fmovie\\\"), \\n\\t\\t{ path: testMovieUrl, width:320, height:125 }\\n\\t);\\n});\\nflashReady = function(){\\n\\tsetTimeout(init, 0);\\n}\\n</pre>\\n<p>We used the <code>dojox.av.flash.place</code> method, which takes two arguments. The first is the node where you wish your SWF to be inserted. The second is an object, which takes several parameters, three of which we are using here: <em>path</em>, is the path to your SWF file, relative from dojo.js, or relative to the file if you are using CDN; and <em>width/height</em>, which is the size of our SWF. This method returns a pointer to the SWF object which we will use later. Note that a SWF can take an undetermined time to load &#8211; it&#8217;s not ready right away, especially if it&#8217;s large. Within Flash I&#8217;m calling <code>flashReady</code>, which tells the JS that it is loaded and ready to go &#8211; however, there still needs to be a little breathing room before the ExternalInterface is ready. Hence, the <code>setTimeout(init, 0)</code>.</p>\\n<p>The <code>init</code> function is where we will build our code to connect to the Flash object. We&#8217;ll use <code>swfEvent</code> as the namespace. Here is the structure, followed by the two connections to the Flash buttons:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\n// JavaScript\\ninit = function(){\\n\\tswfEvent = {\\n\\t\\t_swfConnections:{},\\n\\t\\t\\n\\t\\tconnectToJs: function(strCallback){\\n\\t\\t\\t//\\n\\t\\t},\\n\\t\\t\\n\\t\\tconnectToSwf, function(strSwfScope, strSwfMethod, scope, method){\\n\\t\\t\\t//\\n\\t\\t}\\n\\t};\\n\\t\\n\\tswfEvent.connectToSwf(\\\"flashButton1\\\", \\\"onRelease\\\", function(){\\n\\t\\tdojo.byId(\\\"tf\\\").value = \\\"Flash Foo\\\";\\n\\t});\\n\\tswfEvent.connectToSwf(\\\"flashButton2\\\", \\\"onRelease\\\", function(){\\n\\t\\tdojo.byId(\\\"tf\\\").value = \\\"Flash Bar\\\";\\n\\t});\\n\\n} \\n</pre>\\n<p><code>connectToJs</code> is the method that the Flash ExternalInterface is using for it&#8217;s return call. <code>connectToSwf</code> is what we will build out, and if you notice in our two connections, we need to handle anonymous functions. We can&#8217;t pass them through the ExternalInterface, so we will store them, and pass a reference instead. We&#8217;ll hitch our scope and method, and then store them in the <code>_swfConnections</code> object.</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\n// JavaScript\\nvar _hitch = dojo.hitch(scope, method);\\nvar strMethod = \\\"strMethod_\\\" + new Date().getTime();\\nthis._swfConnections[strMethod] = _hitch;\\n</pre>\\n<p><code>_swfConnections</code> now contains a time-stamped reference to our hitched closure (albeit this is a dangerous way to do it if the code executes very quickly).</p>\\n<p>We now pass everything to the <code>flashMovie</code> pointer that <code>dojo.av</code> provided for us, targeting the <code>connectToSwf</code> function created by the ExternalInterface. All that remians is for our closure to be executed after the SWF return call to <code>swfEvent.connectToJs</code>. Our final code:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\n// JavaScript\\ninit = function(){\\n\\tswfEvent = {\\n\\t\\t_swfConnections:{},\\n\\t\\t\\n\\t\\tconnectToJs: function(strCallback){\\n\\t\\t\\tthis._swfConnections[strCallback]();\\n\\t\\t},\\n\\t\\t\\n\\t\\tconnectToSwf, function(strSwfScope, strSwfMethod, scope, method){\\n\\t\\t\\tvar _hitch = dojo.hitch(scope, method);\\n\\t\\t\\tvar strMethod = \\\"strMethod_\\\" + new Date().getTime();\\n\\t\\t\\tthis._swfConnections[strMethod] = _hitch;\\n\\n\\t\\t\\tflashMovie.connectToSwf(strSwfScope, strSwfMethod, strMethod);\\n\\t\\t}\\n\\t};\\n\\t\\n\\tswfEvent.connectToSwf(\\\"flashButton1\\\", \\\"onRelease\\\", function(){\\n\\t\\tdojo.byId(\\\"tf\\\").value = \\\"Flash Foo\\\";\\n\\t});\\n\\tswfEvent.connectToSwf(\\\"flashButton2\\\", \\\"onRelease\\\", function(){\\n\\t\\tdojo.byId(\\\"tf\\\").value = \\\"Flash Bar\\\";\\n\\t});\\n\\n} \\n</pre>\\n<p>And the test result, after clicking the &#8220;Set to Foo&#8221; button:</p>\\n<p><img src='https://wp.sitepen.com/wp-content/uploads/2008/05/flashjsconnect_02.png' alt='FlashToJs 02' /></p>\\n<p><a href=\\\"https://www.sitepen.com/labs/code/swfConnect/index.php\\\">Here&#8217;s the demo</a></p>\\n<p>With this framework, we now can communicate between ActionScript and JavaScript as easily as we can between JavaScript and HTML!  </p>\\n\",\"protected\":false},\"excerpt\":{\"rendered\":\"<p>This is the final part of our three part series on porting Dojo methods to Flash. In part one of our series, we implemented Dojo&#8217;s hitch method, and then used hitch in part two, where we made our connect method. In part three, we will be using both of these methods as we connect a [&hellip;]</p>\\n\",\"protected\":false},\"author\":21,\"featured_media\":17503,\"comment_status\":\"closed\",\"ping_status\":\"closed\",\"sticky\":false,\"template\":\"\",\"format\":\"standard\",\"meta\":{\"spay_email\":\"\"},\"categories\":[46,45,3,43,16],\"tags\":[52,87],\"series\":[],\"jetpack_featured_media_url\":\"\",\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Porting Dojo Methods to Flash - Part 3 of 3 | SitePen</title>\\n<meta name=\\\"description\\\" content=\\\"This is the final part of our three part series on porting Dojo methods to Flash. In part one of our series, we implemented Dojo&#039;s hitch method, and then used hitch in part two, where we made our connect method. In part three, we will be using both of these methods as we connect a JavaScript object to a Flash object.  W\\\" />\\n<meta name=\\\"robots\\\" content=\\\"index, follow\\\" />\\n<meta name=\\\"googlebot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<meta name=\\\"bingbot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<link rel=\\\"canonical\\\" href=\\\"https://www.sitepen.com/blog/porting-dojo-methods-to-flash-part-3-of-3/\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Porting Dojo Methods to Flash - Part 3 of 3 | SitePen\\\" />\\n<meta property=\\\"og:description\\\" content=\\\"This is the final part of our three part series on porting Dojo methods to Flash. In part one of our series, we implemented Dojo&#039;s hitch method, and then used hitch in part two, where we made our connect method. In part three, we will be using both of these methods as we connect a JavaScript object to a Flash object.  W\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/porting-dojo-methods-to-flash-part-3-of-3/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:published_time\\\" content=\\\"2008-05-08T07:01:13+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1600\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"900\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/porting-dojo-methods-to-flash-part-3-of-3/#primaryimage\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/porting-dojo-methods-to-flash-part-3-of-3/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/porting-dojo-methods-to-flash-part-3-of-3/\\\",\\\"name\\\":\\\"Porting Dojo Methods to Flash - Part 3 of 3 | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"primaryImageOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/porting-dojo-methods-to-flash-part-3-of-3/#primaryimage\\\"},\\\"datePublished\\\":\\\"2008-05-08T07:01:13+00:00\\\",\\\"dateModified\\\":\\\"2008-05-08T07:01:13+00:00\\\",\\\"author\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/b17a4b78bc644814f33f687fe684bb19\\\"},\\\"description\\\":\\\"This is the final part of our three part series on porting Dojo methods to Flash. In part one of our series, we implemented Dojo's hitch method, and then used hitch in part two, where we made our connect method. In part three, we will be using both of these methods as we connect a JavaScript object to a Flash object. W\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://www.sitepen.com/blog/porting-dojo-methods-to-flash-part-3-of-3/\\\"]}]},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/b17a4b78bc644814f33f687fe684bb19\\\",\\\"name\\\":\\\"Mike Wilcox\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/a3d37a7b01b791e438645e5f7cd99d0e?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Mike Wilcox\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/314\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/post\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/21\"}],\"replies\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/comments?post=314\"}],\"version-history\":[{\"count\":0,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/314/revisions\"}],\"wp:featuredmedia\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/17503\"}],\"wp:attachment\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media?parent=314\"}],\"wp:term\":[{\"taxonomy\":\"category\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/categories?post=314\"},{\"taxonomy\":\"post_tag\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/tags?post=314\"},{\"taxonomy\":\"series\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/series?post=314\"}],\"curies\":[{\"name\":\"wp\",\"href\":\"https://api.w.org/{rel}\",\"templated\":true}]},\"_embedded\":{\"author\":[{\"id\":21,\"name\":\"Mike Wilcox\",\"url\":\"https://www.sitepen.com\",\"description\":\"\",\"link\":\"https://wp.sitepen.com/blog/author/mwilcox/\",\"slug\":\"mwilcox\",\"avatar_urls\":{\"24\":\"https://secure.gravatar.com/avatar/a3d37a7b01b791e438645e5f7cd99d0e?s=24&d=mm&r=g\",\"48\":\"https://secure.gravatar.com/avatar/a3d37a7b01b791e438645e5f7cd99d0e?s=48&d=mm&r=g\",\"96\":\"https://secure.gravatar.com/avatar/a3d37a7b01b791e438645e5f7cd99d0e?s=96&d=mm&r=g\"},\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Mike Wilcox, Author at SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"profile\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Mike Wilcox, Author at SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/author/mwilcox/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://secure.gravatar.com/avatar/a3d37a7b01b791e438645e5f7cd99d0e?s=500&#038;d=mm&#038;r=g\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ProfilePage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/mwilcox/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/author/mwilcox/\\\",\\\"name\\\":\\\"Mike Wilcox, Author at SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/b17a4b78bc644814f33f687fe684bb19\\\",\\\"name\\\":\\\"Mike Wilcox\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/a3d37a7b01b791e438645e5f7cd99d0e?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Mike Wilcox\\\"},\\\"mainEntityOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/mwilcox/#webpage\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/21\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users\"}]}}],\"wp:featuredmedia\":[{\"code\":\"rest_post_invalid_id\",\"message\":\"Invalid post ID.\",\"data\":{\"status\":404}}]}}]","headers":[["access-control-allow-headers","Authorization, X-WP-Nonce, Content-Disposition, Content-MD5, Content-Type"],["access-control-expose-headers","X-WP-Total, X-WP-TotalPages, Link"],["allow","GET"],["cache-control","max-age=2592000"],["connection","close"],["content-type","application/json; charset=UTF-8"],["date","Tue, 25 Aug 2020 13:26:20 GMT"],["expires","Thu, 24 Sep 2020 13:26:20 GMT"],["link","<https://wp.sitepen.com/wp-json/>; rel=\"https://api.w.org/\""],["server","Apache"],["transfer-encoding","chunked"],["vary","Origin"],["x-content-type-options","nosniff"],["x-powered-by","PHP/7.3.21-1+0~20200807.66+debian9~1.gbp18a1c2"],["x-robots-tag","noindex"],["x-wp-total","1"],["x-wp-totalpages","1"]]},"type":"Object"}