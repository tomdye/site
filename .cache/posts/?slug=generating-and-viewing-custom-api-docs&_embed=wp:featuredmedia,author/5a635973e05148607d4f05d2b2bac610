{"value":{"body":"[{\"id\":6167,\"date\":\"2013-01-18T00:30:22\",\"date_gmt\":\"2013-01-18T07:30:22\",\"guid\":{\"rendered\":\"https://www.sitepen.com/blog/?p=6167\"},\"modified\":\"2013-01-18T00:30:22\",\"modified_gmt\":\"2013-01-18T07:30:22\",\"slug\":\"generating-and-viewing-custom-api-docs\",\"status\":\"publish\",\"type\":\"post\",\"link\":\"https://wp.sitepen.com/blog/generating-and-viewing-custom-api-docs/\",\"title\":{\"rendered\":\"Generating and Viewing Custom Dojo API Documentation\"},\"content\":{\"rendered\":\"<p>\\nWhen developing a JavaScript framework that others will consume, it&#8217;s hugely beneficial to provide clean, organized API documentation to accompany your codebase.  With the <a href=\\\"http://dojotoolkit.org/blog/dojo-1-8-released\\\">August release of Dojo 1.8</a>, we saw a brand new, extensible documentation parser, which is used to generate output for <a href=\\\"http://dojotoolkit.org/api/\\\">Dojo&#8217;s API viewer</a>. Generating documentation for any project and serving up a custom API viewer is easy, and this post will show you exactly how to do it.\\n</p>\\n<p><!--more--></p>\\n<h3>Dojo Markup Syntax</h3>\\n<p>\\nAny project wishing to take advantage of the API generation tools should comment their code using Dojo&#8217;s Inline Documentation syntax &#8211; a straightforward set of commenting conventions that allow for easy documentation parsing. This is analogous to Javadoc and other similar conventions used in most programming languages today. For example:\\n</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\n// summary:\\n//            This is the summary for the method.\\n//            It's indented by two tabs.\\n// foo: Integer\\n//            First argument to this function\\n// bar: String\\n//            Second argument to this function\\n// returns:\\n//            A calculated value.\\n</pre>\\n<p>\\nWhen parsing a comment block, the parser searches for a specific list of words or &#8220;keys&#8221;, including <em>summary</em>, <em>description</em>, <em>this</em>, and <em>returns</em>. Custom object properties and function parameters can also be documented using the same key-value comment format, as shown in the snippet above. Several other options are also supported, check out the full <a href=\\\"http://dojotoolkit.org/reference-guide/1.8/developer/markup.html#developer-markup\\\">documentation for Dojo&#8217;s inline markup</a> for more details.\\n</p>\\n<h3>Generating the docs</h3>\\n<p>\\nThe Dojo team has worked hard to ensure that the actual generation of the docs was as simple as possible to configure and run.  Before proceeding, make sure you have <a href=\\\"http://www.apache.org/dyn/closer.cgi\\\">apache</a>, <a href=\\\"http://nodejs.org/\\\">node.js</a>, and <a href=\\\"http://php.net/downloads.php\\\">php 5.2 or greater</a> installed. Next, it&#8217;s just three simple steps to generate shiny new API documentation:\\n</p>\\n<ol>\\n<li>Clone js-doc-parse.</li>\\n<p><pre class=\\\"brush: bash; title: ; notranslate\\\" title=\\\"\\\">\\n$ git clone --recursive https://github.com/wkeese/js-doc-parse.git\\n$ cd js-doc-parse\\n$ git checkout all-my-changes\\n</pre>\\n</p>\\n<li>Edit environmentConfig object in <code>config.js</code>.</li>\\n<p>\\nThis tells the parser where your project is located. <code>basePath</code> should indicate the path to your project relative to <code>config.js</code>, and package paths should be relative to the <code>basePath</code>. </p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\nenvironmentConfig: {\\n    basePath: '../some/path/',\\n    packages: {\\n        myApp: 'myApp'\\n    }\\n}\\n</pre>\\n<p><em>Note: other configuration options exist in <code>config.js</code>.</em>\\n</p>\\n<li>Parse like there&#8217;s no tomorrow.</li>\\n<p>\\nThe output will consist of the <code>details.xml</code> and <code>tree.json</code> files within the js-doc-parse folder.</p>\\n<pre class=\\\"brush: bash; title: ; notranslate\\\" title=\\\"\\\">\\n$ ./parse.sh ../some/path/myApp\\n</pre>\\n</p>\\n</ol>\\n<p>\\nThat&#8217;s it! The documentation for your custom project has officially been generated. But how do we see it?\\n</p>\\n<h3>Viewing the docs</h3>\\n<p>\\nNow that the documentation has been successfully generated, all that&#8217;s left is to grab the API viewer in order to view the docs locally.\\n</p>\\n<ol>\\n<li>Clone api-viewer.</li>\\n<p><pre class=\\\"brush: bash; title: ; notranslate\\\" title=\\\"\\\">\\n$ cd &lt;web_server_root&gt;\\n$ git clone git@github.com:wkeese/api-viewer.git api\\n</pre>\\n<p><em>Note: If you want to put the API viewer in a location other than your server root,  config.php and .htaccess need to be updated to point to the other location.</em>\\n</p>\\n<li>Move generated files.</li>\\n<p>\\nWe need to put the generated <code>details.xml</code> and <code>tree.json</code> in a location so the API viewer can find them. The viewer expects an <code>api_data/</code> folder as its <strong>sibling</strong> with subfolders corresponding to project version numbers.</p>\\n<pre class=\\\"brush: bash; title: ; notranslate\\\" title=\\\"\\\">\\n$ cd &lt;web_server_root&gt;\\n$ mkdir api_data/\\n$ mkdir api_data/1.0\\n$ mv js-doc-parse/details.xml api_data/1.0/\\n$ mv js-doc-parse/tree.json api_data/1.0/\\n$ chmod -R +a 'user:_www allow delete,list,search,add_file,add_subdirectory,read,write' api_data\\n</pre>\\n</p>\\n</ol>\\n<p>\\nFinally, start your local Apache instance and point your browser to <a href=\\\"http://localhost/api/\\\">http://localhost/api/</a>.\\n</p>\\n<h3>Theming the docs</h3>\\n<p>\\nMany users have asked how to modify the default theming of the API viewer itself. The styles and static content are broken down into a few key files that can easily be customized to fit your style needs, each of which will be included as the pages are generated.\\n</p>\\n<ul>\\n<li><strong>theme.css</strong> &#8211; Includes any CSS styling that needs to be included in the document</li>\\n<li><strong>index.php</strong> &#8211; Populates the Welcome tab of the API Viewer</li>\\n<li><strong>header.php</strong> &#8211; Inserted before the main content area</li>\\n<li><strong>footer.php</strong> &#8211; Inserted after the main content area</li>\\n</ul>\\n<h3>Conclusion</h3>\\n<p>\\nRather than simply generating an endless page of formatted API documentation, Dojo&#8217;s documentation tools provide a clean, simple method to produce an enterprise-quality API viewer and documentation for any JavaScript project. While more advanced configuration options for generation and viewing are available, the above guide should get any project up and running with their very own API viewer.</p>\\n\",\"protected\":false},\"excerpt\":{\"rendered\":\"<p>When developing a JavaScript framework that others will consume, it&#8217;s hugely beneficial to provide clean, organized API documentation to accompany your codebase. With the August release of Dojo 1.8, we saw a brand new, extensible documentation parser, which is used to generate output for Dojo&#8217;s API viewer. Generating documentation for any project and serving up [&hellip;]</p>\\n\",\"protected\":false},\"author\":46,\"featured_media\":22075,\"comment_status\":\"open\",\"ping_status\":\"open\",\"sticky\":false,\"template\":\"\",\"format\":\"standard\",\"meta\":{\"spay_email\":\"\"},\"categories\":[45,356],\"tags\":[52,98,374,358],\"series\":[],\"jetpack_featured_media_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\",\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Generating and Viewing Custom Dojo API Documentation | SitePen</title>\\n<meta name=\\\"description\\\" content=\\\"When developing a JavaScript framework that others will consume, it&#039;s hugely beneficial to provide clean, organized API documentation to accompany your codebase. With the August release of Dojo 1.8, we saw a brand new, extensible documentation parser, which is used to generate output for Dojo&#039;s API viewer. Generating docu\\\" />\\n<meta name=\\\"robots\\\" content=\\\"index, follow\\\" />\\n<meta name=\\\"googlebot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<meta name=\\\"bingbot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<link rel=\\\"canonical\\\" href=\\\"https://www.sitepen.com/blog/generating-and-viewing-custom-api-docs/\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Generating and Viewing Custom Dojo API Documentation | SitePen\\\" />\\n<meta property=\\\"og:description\\\" content=\\\"When developing a JavaScript framework that others will consume, it&#039;s hugely beneficial to provide clean, organized API documentation to accompany your codebase. With the August release of Dojo 1.8, we saw a brand new, extensible documentation parser, which is used to generate output for Dojo&#039;s API viewer. Generating docu\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/generating-and-viewing-custom-api-docs/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:published_time\\\" content=\\\"2013-01-18T07:30:22+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1600\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"900\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/generating-and-viewing-custom-api-docs/#primaryimage\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\",\\\"width\\\":1600,\\\"height\\\":900},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/generating-and-viewing-custom-api-docs/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/generating-and-viewing-custom-api-docs/\\\",\\\"name\\\":\\\"Generating and Viewing Custom Dojo API Documentation | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"primaryImageOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/generating-and-viewing-custom-api-docs/#primaryimage\\\"},\\\"datePublished\\\":\\\"2013-01-18T07:30:22+00:00\\\",\\\"dateModified\\\":\\\"2013-01-18T07:30:22+00:00\\\",\\\"author\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/7a3e92a258cea881b49680a18b593d71\\\"},\\\"description\\\":\\\"When developing a JavaScript framework that others will consume, it's hugely beneficial to provide clean, organized API documentation to accompany your codebase. With the August release of Dojo 1.8, we saw a brand new, extensible documentation parser, which is used to generate output for Dojo's API viewer. Generating docu\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://www.sitepen.com/blog/generating-and-viewing-custom-api-docs/\\\"]}]},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/7a3e92a258cea881b49680a18b593d71\\\",\\\"name\\\":\\\"Paul Bouchon\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/89cb35910e3b9fed1219d3669a454387?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Paul Bouchon\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/6167\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/post\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/46\"}],\"replies\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/comments?post=6167\"}],\"version-history\":[{\"count\":0,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/6167/revisions\"}],\"wp:featuredmedia\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/22075\"}],\"wp:attachment\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media?parent=6167\"}],\"wp:term\":[{\"taxonomy\":\"category\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/categories?post=6167\"},{\"taxonomy\":\"post_tag\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/tags?post=6167\"},{\"taxonomy\":\"series\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/series?post=6167\"}],\"curies\":[{\"name\":\"wp\",\"href\":\"https://api.w.org/{rel}\",\"templated\":true}]},\"_embedded\":{\"author\":[{\"id\":46,\"name\":\"Paul Bouchon\",\"url\":\"\",\"description\":\"\",\"link\":\"https://wp.sitepen.com/blog/author/pbouchon/\",\"slug\":\"pbouchon\",\"avatar_urls\":{\"24\":\"https://secure.gravatar.com/avatar/89cb35910e3b9fed1219d3669a454387?s=24&d=mm&r=g\",\"48\":\"https://secure.gravatar.com/avatar/89cb35910e3b9fed1219d3669a454387?s=48&d=mm&r=g\",\"96\":\"https://secure.gravatar.com/avatar/89cb35910e3b9fed1219d3669a454387?s=96&d=mm&r=g\"},\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Paul Bouchon, Author at SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"profile\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Paul Bouchon, Author at SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/author/pbouchon/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://secure.gravatar.com/avatar/89cb35910e3b9fed1219d3669a454387?s=500&#038;d=mm&#038;r=g\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ProfilePage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/pbouchon/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/author/pbouchon/\\\",\\\"name\\\":\\\"Paul Bouchon, Author at SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/7a3e92a258cea881b49680a18b593d71\\\",\\\"name\\\":\\\"Paul Bouchon\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/89cb35910e3b9fed1219d3669a454387?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Paul Bouchon\\\"},\\\"mainEntityOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/pbouchon/#webpage\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/46\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users\"}]}}],\"wp:featuredmedia\":[{\"id\":22075,\"date\":\"2020-01-22T13:53:07\",\"slug\":\"og_imagev1\",\"type\":\"attachment\",\"link\":\"https://wp.sitepen.com/og_imagev1/\",\"title\":{\"rendered\":\"og_imageV1\"},\"author\":9,\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>og_imageV1 | SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"og_imageV1 | SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1600\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"900\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg#webpage\\\",\\\"url\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\",\\\"name\\\":\\\"og_imageV1 | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"datePublished\\\":\\\"2020-01-22T21:53:07+00:00\\\",\\\"dateModified\\\":\\\"2020-01-22T21:53:07+00:00\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\"]}]}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"caption\":{\"rendered\":\"\"},\"alt_text\":\"\",\"media_type\":\"image\",\"mime_type\":\"image/jpeg\",\"media_details\":{\"width\":1600,\"height\":900,\"file\":\"2020/01/og_imageV1.jpg\",\"sizes\":{\"medium\":{\"file\":\"og_imageV1-300x169.jpg\",\"width\":300,\"height\":169,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-300x169.jpg\"},\"large\":{\"file\":\"og_imageV1-1024x576.jpg\",\"width\":1024,\"height\":576,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-1024x576.jpg\"},\"thumbnail\":{\"file\":\"og_imageV1-150x150.jpg\",\"width\":150,\"height\":150,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-150x150.jpg\"},\"medium_large\":{\"file\":\"og_imageV1-768x432.jpg\",\"width\":768,\"height\":432,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-768x432.jpg\"},\"1536x1536\":{\"file\":\"og_imageV1-1536x864.jpg\",\"width\":1536,\"height\":864,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-1536x864.jpg\"},\"full\":{\"file\":\"og_imageV1.jpg\",\"width\":1600,\"height\":900,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\"}},\"image_meta\":{\"aperture\":\"0\",\"credit\":\"\",\"camera\":\"\",\"caption\":\"\",\"created_timestamp\":\"0\",\"copyright\":\"\",\"focal_length\":\"0\",\"iso\":\"0\",\"shutter_speed\":\"0\",\"title\":\"\",\"orientation\":\"0\",\"keywords\":[]}},\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/22075\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/attachment\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/9\"}]}}]}}]","headers":[["access-control-allow-headers","Authorization, X-WP-Nonce, Content-Disposition, Content-MD5, Content-Type"],["access-control-expose-headers","X-WP-Total, X-WP-TotalPages, Link"],["allow","GET"],["cache-control","max-age=2592000"],["connection","close"],["content-type","application/json; charset=UTF-8"],["date","Tue, 25 Aug 2020 13:14:59 GMT"],["expires","Thu, 24 Sep 2020 13:14:59 GMT"],["link","<https://wp.sitepen.com/wp-json/>; rel=\"https://api.w.org/\""],["server","Apache"],["transfer-encoding","chunked"],["vary","Origin"],["x-content-type-options","nosniff"],["x-powered-by","PHP/7.3.21-1+0~20200807.66+debian9~1.gbp18a1c2"],["x-robots-tag","noindex"],["x-wp-total","1"],["x-wp-totalpages","1"]]},"type":"Object"}