{"value":{"body":"[{\"id\":15680,\"date\":\"2017-11-10T15:22:40\",\"date_gmt\":\"2017-11-10T22:22:40\",\"guid\":{\"rendered\":\"https://www.sitepen.com/blog/?p=15680\"},\"modified\":\"2020-03-30T06:28:39\",\"modified_gmt\":\"2020-03-30T13:28:39\",\"slug\":\"web-frameworks-conclusions\",\"status\":\"publish\",\"type\":\"post\",\"link\":\"https://wp.sitepen.com/blog/web-frameworks-conclusions/\",\"title\":{\"rendered\":\"Web Frameworks: Conclusions\"},\"content\":{\"rendered\":\"<!-- Added by Post/Page specific custom CSS plugin, thank you for using! -->\\n<style type=\\\"text/css\\\">.title span {\\r\\ndisplay:block;\\r\\nfont-weight:inherit !important;\\r\\n}\\r\\n.citation {\\r\\nfont-size:12px; \\r\\ntext-align:center;\\r\\n}\\r\\nli {\\r\\nmargin-bottom:.5em !important;\\r\\n}\\r\\nblockquote {\\r\\nmargin-top:-5px;\\r\\nfloat:right;\\r\\nmargin-right:-10%;\\r\\nmax-width:450px;\\r\\nmargin-left:20px;\\r\\nmargin-bottom:20px;\\r\\nbackground:#f4f7f9;\\r\\npadding:20px;\\r\\nborder-left:5px solid #dfe6ea;\\r\\n}\\r\\nblockquote p {\\r\\nline-height:1.3em;\\r\\nmargin-top:0;\\r\\nmargin-bottom:0;\\r\\n}\\r\\n.post-content th {\\r\\npadding:3px 8px;\\r\\nborder:none;\\r\\nbackground:#FFF;\\r\\n}\\r\\n.post-content th:nth-child(2) {\\r\\ntext-align:left;\\r\\n}\\r\\n.post-content td {\\r\\npadding:8px;\\r\\nfont-size:.875em;\\r\\nline-height:1.15em;\\r\\nborder:1px solid #EAEAEA;\\r\\nwidth:15%;\\r\\n}\\r\\n.post-content tr:nth-child(odd){\\r\\nbackground:#FAFAFA;\\r\\n}\\r\\n\\r\\n.rule {\\r\\nheight:1px;\\r\\nwidth:100%;\\r\\ndisplay:block;\\r\\nclear:both;\\r\\nmargin-bottom:40px;\\r\\nmargin-top:40px;\\r\\nbackground:#EAEAEA;\\r\\n}\\r\\n.feature-icon {\\r\\ndisplay: block;\\r\\nmargin-left:auto;\\r\\nmargin-right:auto;\\r\\nwidth:130px;\\r\\nmargin-bottom:10px;\\r\\n}\\r\\n.feature-item {\\r\\ntext-align:center;\\r\\nmargin-top: 10px !important;\\r\\nmargin-bottom:30px !important;\\r\\n}\\r\\n.pull-right {\\r\\nmax-width:500px;\\r\\nfloat:right;\\r\\nmargin-right:-100px;\\r\\nmargin-left:20px;\\r\\nmargin-bottom:20px;\\r\\n}\\r\\n.jump-to {\\r\\nmargin:0 !important;\\r\\ntext-align:center;\\r\\n}\\r\\n.jump-to li {\\r\\nmargin:0 !important;\\r\\nwidth:15%;\\r\\ndisplay:inline-block;\\r\\npadding:5px;\\r\\n}\\r\\n.jump-nav {\\r\\nposition:fixed;\\r\\nbottom:0px;\\r\\nleft:0px;\\r\\nwidth:100%;\\r\\n}\\r\\n@media screen and (max-width: 1150px) {\\r\\n.pull-right {\\r\\nmax-width:400px;\\r\\nmargin-right:0;\\r\\n}\\r\\nblockquote {\\r\\nmargin-right:0;\\r\\nmargin-top:1.5rem;\\r\\n}\\r\\n}\\r\\n@media screen and (max-width: 768px) {\\r\\n.pull-right {\\r\\nmax-width:inherit;\\r\\nfloat:none;\\r\\nmargin-bottom:0;\\r\\nmargin-left:0;\\r\\n}\\r\\nblockquote {\\r\\nfloat:none;\\r\\ndisplay:block;\\r\\nmargin-left:auto;\\r\\nmargin-right:auto;\\r\\nborder-left:none;\\r\\nmax-width:85%;\\r\\ntext-align:center;\\r\\n}\\r\\n}</style>\\n<p>It has come time to read the liner notes and write some conclusions. When we started writing this blog series, we knew that JavaScript/web application frameworks were not easy to summarize. We have tried to answer the unanswerable: <em>What framework should I use?</em></p>\\n<p><!--more--></p>\\n<p>In this post, we are going to draw some conclusions about each framework considered in this series, including what we think are their strengths and weaknesses. In addition, we will give you some parting thoughts to consider.</p>\\n<p>This is part of a series on web frameworks. If you’ve missed our previous posts, you may want to start with <a href=\\\"https://www.sitepen.com/blog/2017/06/13/if-we-chose-our-javascript-framework-like-we-chose-our-music/\\\">If we chose our JavaScript framework like we choose our music…</a></p>\\n<h2 id=\\\"do-i-need-a-framework\\\">Do I need a framework?</h2>\\n<p>It would be remiss of us not to try to answer this question. This has increasingly become a mantra of certain segments of the community. Arguing the web platform has advanced to the point where you don&#8217;t need additional APIs to make creating web applications easy. Like everything in this series, our response would be more <em>it depends</em>.</p>\\n<p>While going <em>framework-less</em> can work, and does, it also comes at a cost. Those who advocate the benefits of framework-less JS, those used to the, we would argue, <em>Stockholm Syndrome</em> of web technologies forget that there are multiple sets of rapidly evolving APIs with at least three different technologies with three radically different syntaxes. The specifications for the web platform identify over 12,000 APIs and the Venn diagram of what is actually in browsers shows there are significant gaps:</p>\\n<p><!--\\n[caption id=\\\"attachment_15682\\\" align=\\\"aligncenter\\\" width=\\\"1024\\\"]<a href=\\\"https://www.sitepen.com/blog/2017/11/10/web-frameworks-conclusions/catalog_of_standard_and_vendor_apis_across_browsers_-_microsoft_edge_development/\\\" rel=\\\"attachment wp-att-15682\\\"><img src=\\\"https://wp.sitepen.com/wp-content/uploads/2017/11/Catalog_of_standard_and_vendor_APIs_across_browsers_-_Microsoft_Edge_Development-1024x913.png\\\" alt=\\\"Venn Diagram of Web Platform APIs for Safari, Chrome, and Standards\\\" width=\\\"600\\\" height=\\\"455\\\" class=\\\"size-large wp-image-15682\\\" /></a> Web Platform API overlap[/caption] --></p>\\n<div class=\\\"pull-right\\\">\\n<img src=\\\"https://wp.sitepen.com/wp-content/uploads/2017/11/diagram.png\\\" alt=\\\"Venn Diagram of Web Platform APIs for Safari, Chrome, and Standards\\\" class=\\\"alignnone size-full wp-image-15715\\\" /></p>\\n<p class=\\\"citation\\\">Web Platform API overlap. Source: <a href=\\\"https://developer.microsoft.com/en-us/microsoft-edge/platform/catalog/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Microsoft API Catalogue</a></p>\\n</div>\\n<p>Going <em>framework-less</em> is in part contracting to keep up with those platforms, to eschew teams of people, often working closely with the browser vendors, to have the hubris to say <em>I can tame this wild beast</em>.</p>\\n<p>But say you as an individual have the depth of experience and skills to honestly be able to go <em>framework-less</em>. What about the rest of your team, or the person that comes after you, or are you locking yourself into being haunted by the decisions you make now forever? We have seen teams embark on a <em>framework-less</em> adventure. They end up finding themselves creating a home-grown framework which they must then maintain. The barrier to finding talent has been raised, because instead of knowing a framework, they have to find someone that has advanced skills in the web platform APIs, or they have someone who professes that experience, only to discover they lack the depth and experience to actually contribute effectively to the team.</p>\\n<p>We have to avoid the trap of <em>false equivalence</em> in our organizations. There are clearly companies where being innovative in the use and application of web technologies advances their market viability. Google, Facebook, and Netflix are good examples. Most organizations are not and should accept that.</p>\\n<div id=\\\"angular\\\" class=\\\"rule\\\"></div>\\n<div class=\\\"feature-icon\\\"><img class=\\\"alignnone size-full wp-image-14439\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2017/06/angular-logo.png\\\" alt=\\\"\\\" /></div>\\n<h2 class=\\\"feature-item\\\">Angular 2+</h2>\\n<h3 id=\\\"what-are-the-strengths\\\">What are the strengths?</h3>\\n<p>The biggest strength of Angular 2+ is its popularity. It could be argued that having the name <em>Google</em> associated with it has an impact on organizations considering it. Angular 1 rapidly gained in popularity because those coming from other <em>interactive</em> application environments found the familiar model view pattern for developing <em>single page applications</em>. By modernizing Angular 1 and rearchitecting certain portions of the framework, Angular 2+ has really burst onto the scene. The amount of training, both formal and informal, is impressive. There is a strong market for developers. It is also one of the few frameworks compared in this series that has an official set of rich components for building user interfaces.</p>\\n<h3 id=\\\"what-are-the-weaknesses-and-challenges\\\">What are the weaknesses and challenges?</h3>\\n<p>We feel the Angular framework focuses on creating user interfaces in a single page application and does not address the larger concerns of a building a <em>web application</em>. This can lead to difficult to maintain projects if conventions are not established early. At a practical level, there is a lot of <em>magic</em> that occurs to provide run-time behavior that is not part of the core framework-provided technologies. This diminishes the value of TypeScript to the end-developer.</p>\\n<h3 id=\\\"what-does-the-future-hold\\\">What does the future hold?</h3>\\n<p>Angular 5 was just released and it appears that Angular has succeeded in increasing the release cadence to be aligned to a rapid release schedule. It is likely that Angular will continue to mature with continued support from Google.</p>\\n<p>Like any large organization, Google has multiple personalities. Externally there is an appearance of harmony between the Angular teams and those focused on browser standards. Our opinion is that harmony is really a thin veneer and that Angular hasn&#8217;t really addressed effective solutions to Web Components and Progressive Web Apps. It is our opinion that industry agreed standards will outlive some of the approaches in the Angular framework. The impact on how Angular applications are built and architected may be a medium/long term risk.</p>\\n<h3 id=\\\"why-would-i-choose-angular-2\\\">Why would I choose Angular 2+?</h3>\\n<p>If you need to source skills in a framework at scale, where the skills are generally easily portable, or you need to train teams on a framework and have a level of confidence they will be productive in short order, you might consider Angular 2+. Be warned though Angular 1 (Angular.js) is a substantially different beast and applications, skills, and experience are not directly portable to Angular 2+ development.</p>\\n<p>If your web applications translate well into a model view pattern, then you might also consider Angular 2+.</p>\\n<p>If you are happy with the Google Material UX pattern, then Material for Angular is a quick, easy, and robust way to follow that pattern.</p>\\n<div id=\\\"react\\\" class=\\\"rule\\\"></div>\\n<div class=\\\"feature-icon\\\"><img class=\\\"alignnone size-full wp-image-14439\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2017/06/react-logo.png\\\" alt=\\\"\\\" /></div>\\n<h2 class=\\\"feature-item\\\">React + Redux</h2>\\n<h3 id=\\\"what-are-the-strengths-1\\\">What are the strengths?</h3>\\n<p>The biggest strengths of React and Redux are their relative simplicity and focus. Taking the mantra of <em>do one thing and do it well</em> it is hard to find fault that both libraries achieve very effectively what they set out to do. While for some a state container approach might be <em>foreign</em>, most developers can easily grasp the concepts and understand that benefits of a one-way flow of data architecture and how they can simplify heavy user interface applications.</p>\\n<h3 id=\\\"what-are-the-weaknesses-and-challenges-1\\\">What are the weaknesses and challenges?</h3>\\n<p>The biggest weakness of both React and Redux are not what they are, but what they are not. To build a feature-rich web application, you need many other features and once you get away from the core of React, Redux and a couple of other libraries, you will find a hugely fragmented community, with countless solutions and patterns which may or may not be easy to integrate together.</p>\\n<p>So while React and Redux are both very focused libraries, inexperienced teams can quite easily produce unmaintainable solutions, not being aware that the choices they are making are leading to bad or buggy performance. Even experienced developers can realize that a loose architecture or conventions can easily haunt them in the future.</p>\\n<p>It is easy to fool yourself into a <em>false economy</em> that organization-wide adoptions of React and Redux will mitigate inefficiency problems. Without extensive conventions and standardization of other libraries and patterns, standardizing on React + Redux is akin to saying <em>we are adopting JavaScript to write our applications to increase efficiency</em>.</p>\\n<h3 id=\\\"what-does-the-future-hold-1\\\">What does the future hold?</h3>\\n<p>Facebook and React are recently smarting from the <em>plus Patents</em> backlash, where they realized, like other projects have, that the wider community can and does raise its voice. I feel this has helped Facebook realize that they cannot take the <em>we know better, trust us</em> approach to forwarding their projects. Hopefully, this will continue to flow through the features and technical direction of the projects.</p>\\n<p>It is hard to predict the future with React and Redux. Having focused libraries, though, does dramatically increase adaptability and most React + Redux patterns promote a decoupled architecture that allows for easy refactoring and iteration. Two years ago the flavor of the day was React + Flux, but the whole community embraced Redux quickly. It is likely that other major shifts in thinking or patterns could be easily adopted. This ability to pivot is likely to continue into the future.</p>\\n<h3 id=\\\"why-would-i-choose-react-redux\\\">Why would I choose React + Redux?</h3>\\n<p>If you are in a situation where you need less <em>hand-holding</em> and are looking more for good <em>libraries</em> than a comprehensive <em>framework</em>, then React + Redux might be right. You do need to be honest about the abilities of your team and organization, not only during your initial development but throughout long-term application maintenance.</p>\\n<div id=\\\"vue\\\" class=\\\"rule\\\"></div>\\n<div class=\\\"feature-icon\\\"><img class=\\\"alignnone size-full wp-image-14439\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2017/06/vue-logo.png\\\" alt=\\\"\\\" /></div>\\n<h2 class=\\\"feature-item\\\">Vue.js</h2>\\n<h3 id=\\\"what-are-the-strengths-2\\\">What are the strengths?</h3>\\n<p>The ability to incrementally adopt Vue.js is likely the biggest strength. Vue has a concise and rational architecture which makes it straightforward to understand and easy to build upon.</p>\\n<p>There is a robust community of passionate people and projects that add significant value to Vue.js, and it is fairly easy to pull together a comprehensive solution for a greenfield development project.</p>\\n<h3 id=\\\"what-are-the-weaknesses-and-challenges-2\\\">What are the weaknesses and challenges?</h3>\\n<p>The desire to <em>pivot</em> between model view application and state container type applications can be confusing. It feels like there is a desire to remain relevant without fully embracing one application pattern over another. It feels to us that, at a minimum, it is confusing to those looking to Vue.js for a complete solution and could lead to inconsistent application patterns that are difficult to maintain.</p>\\n<p>One of the bigger challenges is Vue.js is dependent on a single individual. Obviously, other projects can be dominated by one organization, but with Vue.js it feels more significant. While there is a robust community around Vue.js with many innovative additive projects, the core is essentially sitting on one person&#8217;s shoulders.</p>\\n<p>Our opinion is that it is great to see the approach of embracing emerging standards by Vue.js, but its sort of <em>Web Component-like</em> pattern, but not Web Components, may be more of a liability than an asset.</p>\\n<h3 id=\\\"what-does-the-future-hold-2\\\">What does the future hold?</h3>\\n<p>While there is some fairly wide and diverse adoption of Vue.js, it is hard to predict how long it will last in the medium term. It is not directly supported by a commercial organization, thereby being largely dependent upon its maintainer&#8217;s viability and desire to continue to press forward.</p>\\n<p>It has shown a level of ability to adapt and pivot as certain patterns fall in and out of favor and continue to keep itself modern and up to date. There is no indication that Vue.js&#8217;s architecture wouldn&#8217;t be able to adapt in the future.</p>\\n<h3 id=\\\"why-would-i-choose-vue.js\\\">Why would I choose Vue.js?</h3>\\n<p>If you have a legacy web application that needs a more robust and contained <em>application layer</em>, then Vue.js might be a good fit for you to adopt. It has clear patterns and even with inexperienced teams, there is a <em>right</em> way and a <em>wrong</em> way. While there are not any out of the box Vue UX frameworks, there are extensive sets of coherent frameworks built on Vue.js that might work for your project.</p>\\n<div id=\\\"dojo\\\" class=\\\"rule\\\"></div>\\n<div class=\\\"feature-icon\\\"><img class=\\\"alignnone size-full wp-image-14439\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2017/06/dojo-logo.png\\\" alt=\\\"\\\" /></div>\\n<h2 class=\\\"feature-item\\\">Dojo 2</h2>\\n<h3 id=\\\"what-are-the-strengths-3\\\">What are the strengths?</h3>\\n<p>Focusing on bringing more of a <em>framework</em> experience to the pattern of reactive components built on a state container architecture, Dojo 2 fills in a lot of blanks that are present with something like React + Redux.</p>\\n<p>Dojo 2 also acknowledges that it does not live in a world by itself. By embracing both the importing and exporting of Web Components, it realizes that different use cases need to be supported, but still provide the value of a structured and opinionated framework. There is also a focus on providing interoperability as a core foundation of Dojo 2.</p>\\n<p>Dojo 2 feels that it provides solutions to a lot of concerns and features that are important to full web applications that are not a focus of most other frameworks. Providing a system for internationalization and extensive patterns for accessibility are part of that story, but also providing a theming system and promoting patterns that ensure sound code development not only for TypeScript/JavaScript but also the management of resources like CSS.</p>\\n<p>Dojo 2 focuses on providing a structured, developer-ergonomic development environment. By its use of TypeScript and other patterns, it tries to provide <em>guardrails</em> to guide development without <em>shackling</em> those who know what they are doing. By focusing on making development more productive and <em>safe</em>, it aims to enable teams to deliver better web applications rapidly.</p>\\n<h3 id=\\\"what-are-the-weaknesses-and-challenges-3\\\">What are the weaknesses and challenges?</h3>\\n<p>It is arguable that taking extended periods of time to release Dojo 2 as <em>ready</em> continues to hinder it. It will obviously continue to be in a crowded space, where other projects, because of their narrow focus or expanded resources, have been able to continue to develop and iterate at a quick pace.</p>\\n<p>It could also be a potential challenge that wanting to be flexible and interoperable might obviate the Dojo 2 <em>raison d&#8217;être</em>, leaving no specific reason to use Dojo 2.</p>\\n<h3 id=\\\"what-does-the-future-hold-3\\\">What does the future hold?</h3>\\n<p>It is all about the future with Dojo 2. It will continue to try to provide clear patterns and guidance for building web applications that scale. As standards continue to emerge, Dojo 2 will strive to adopt them and integrate them into their approach. Dojo 2 will continue to try to be open and interoperable, acknowledging that it is unlikely that any one solution will fit everyone&#8217;s use cases all the time.</p>\\n<h3 id=\\\"why-would-i-choose-dojo-2\\\">Why would I choose Dojo 2?</h3>\\n<p>If you want to adopt a flexible, modern, reactive web application architecture, but you want many <em>intelligent defaults</em> then Dojo 2 is a good choice. Instead of having to piece together a build pipeline and establish higher order conventions for your project, you can focus on developing your functionality and be confident that it is more likely to be <em>production ready</em>. Also if you appreciate the benefits of TypeScript, Dojo 2 leverages TypeScript in a highly disciplined manner to provide strong end developer ergonomics.</p>\\n<div id=\\\"ember\\\" class=\\\"rule\\\"></div>\\n<div class=\\\"feature-icon\\\"><img class=\\\"alignnone size-full wp-image-14439\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2017/06/ember-logo.png\\\" alt=\\\"\\\" /></div>\\n<h2 class=\\\"feature-item\\\">Ember</h2>\\n<h3 id=\\\"what-are-the-strengths-4\\\">What are the strengths?</h3>\\n<p>Ember.js is likely the most opinionated mainstream framework, and that is its biggest strength. Not only is there a <em>right way</em> to create an Ember.js application, there is usually only <em>one way</em> to create the application. Ember.js is more akin to a product or platform, where you would expect long-term support and maintenance from a vendor. Ember.js provides comprehensive version management of their platform, upgrade tooling, and strong guidance and tooling on deprecation of APIs. Mature would be a good summary of Ember.js.</p>\\n<p>Ember.js had demonstrated over the years that it can maintain its framework and keep it aligned to modern standards while not abandoning legacy browsers prematurely.</p>\\n<p>Ember.js has a clear and rational architecture for comprehensively building web applications.</p>\\n<h3 id=\\\"what-are-the-weaknesses-and-challenges-4\\\">What are the weaknesses and challenges?</h3>\\n<p>Ember.js is likely the most opinionated mainstream framework, and that is its biggest weakness. While the community is open and receptive to input, there is still a <em>right way</em> and going off-piste can be challenging and problematic.</p>\\n<p>Having a rich third-party community can also be challenging. Because there is no out of the box set of UX components, using third-party sets is likely. You are likely to find though that those sets are not comprehensive and you will need to build or seek out other components. Because Ember.js doesn&#8217;t extend its opinions of how to interact and manage the DOM, you can find yourself with inconsistent components that don&#8217;t provide an easy to manage UI.</p>\\n<h3 id=\\\"what-does-the-future-hold-4\\\">What does the future hold?</h3>\\n<p>Major contributors to Ember.js are core participants in TC39, the standards committee for the JavaScript language. Ember.js has had a more direct influence on the direction of JavaScript over the past few years than any other framework. Our opinion is that this will continue in the future, helping promote features and patterns in JavaScript. It also means that Ember.js will continue to keep itself closely aligned to the standards in the future.</p>\\n<p>It is unlikely that Ember.js will disappear any time in the future, though their innovation is likely to come through other projects closely aligned to Ember.js, like Glimmer, which provides a new UI framework for Ember.js applications that are built on TypeScript.</p>\\n<h3 id=\\\"why-would-i-choose-ember.js\\\">Why would I choose Ember.js?</h3>\\n<p>If you are looking for maturity in a framework, it is hard to go wrong with Ember.js. Also, because <em>what</em> Ember.js provides is understood and there are extensive official and officially sanctioned training, and the rigid constructs, finding talent that can build Ember.js based applications is possibly easier than with other frameworks. It is also quite possible to educate large teams on how to build applications and ensure a common dialog and understanding across the team.</p>\\n<p>If you want to place confidence in an organization to stay current and think critically about changes to their platform, then Ember.js would be a good consideration. You can spend less time worrying about keeping current with technology trends and focus more on creating applications.</p>\\n<div id=\\\"aurelia\\\" class=\\\"rule\\\"></div>\\n<div class=\\\"feature-icon\\\"><img class=\\\"alignnone size-full wp-image-14439\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2017/06/aurelia-logo.png\\\" alt=\\\"\\\" /></div>\\n<h2 class=\\\"feature-item\\\">Aurelia</h2>\\n<h3 id=\\\"what-are-the-strengths-5\\\">What are the strengths?</h3>\\n<p>There is a lot that Aurelia get right about the approach, structure, and thoughts about building web applications. There is a lot of technical excellence in the authoring of the framework. It is modern and uses modern technologies.</p>\\n<h3 id=\\\"what-are-the-weaknesses-and-challenges-5\\\">What are the weaknesses and challenges?</h3>\\n<p>The biggest challenge in our estimate is momentum and lack of critical mass of core development. Our feeling is that many of the ideas and concepts are spot on and address critical concerns we have about other frameworks, but all of these aspirations feel not fully delivered. In many ways it still feels like a work in progress, even though it is a <em>released</em> framework.</p>\\n<p>Large parts of Aurelia sit on a single individual&#8217;s shoulders, which could present a challenge if focus or availability of the individual were to change.</p>\\n<h3 id=\\\"what-does-the-future-hold-5\\\">What does the future hold?</h3>\\n<p>There is a lot of opportunity for Aurelia. If it were able to deliver on its vision, it would preserve the patterns established in Angular for building web applications, but deliver them in a more sound and standards-aligned way. We are unsure if Aurelia is going to be able to capitalize on that opportunity.</p>\\n<h3 id=\\\"why-would-i-choose-aurelia\\\">Why would I choose Aurelia?</h3>\\n<p>If you are committed to the model view application pattern for the web, and you or your team have the desire to try to make something <em>better</em>, then Aurelia would be a consideration. It feels like a framework that is seeking a larger community to help power its development and evolution.</p>\\n<h2 id=\\\"final-thoughts\\\">Final thoughts</h2>\\n<p>Hopefully, this series of posts have at the very least given you food for thought. You should walk away with the feeling that there is unlikely to be a provably correct decision. Also, hopefully, you realize that there is really no universally incorrect decision. You should also be armed with a collection of questions and considerations to help you decide on your framework of choice.</p>\\n<p>A framework is nothing more than an embodiment of some patterns, integration of some technologies, and source code to help make our web applications easier to build and maintain. If you are an individual developer, the best advice we can offer is to spend some time with as many frameworks you might think would work for you. If you are a business manager or architect trying to make a decision, remember that a feature list is just one aspect of a decision, and sometimes more is not better. Challenge yourself or your team to take a holistic look at a framework, but first, start with a list of what is important to you and your organization, especially those things that transcend technical features.</p>\\n<p>Finally, we are here to help. We have tried to demonstrate to you over these eleven posts. While I (Kit) have authored the majority of this series, it was hugely supported by the rest of the team here at SitePen, doing research, adding content, providing experience, and reviewing. We are a company motivated by enabling other companies to achieve their business objectives by solving hard problems. Feel free to <a href=\\\"https://www.sitepen.com/contact/\\\">get in touch with us</a> to see how we might be able to help you!</p>\\n\",\"protected\":false},\"excerpt\":{\"rendered\":\"<p>It has come time to read the liner notes and write some conclusions. When we started writing this blog series, we knew that JavaScript/web application frameworks were not easy to summarize. We have tried to answer the unanswerable: What framework should I use?</p>\\n\",\"protected\":false},\"author\":67,\"featured_media\":22152,\"comment_status\":\"closed\",\"ping_status\":\"closed\",\"sticky\":false,\"template\":\"\",\"format\":\"standard\",\"meta\":{\"spay_email\":\"\"},\"categories\":[444,445,214,448,2,215,29,234],\"tags\":[],\"series\":[447],\"jetpack_featured_media_url\":\"https://wp.sitepen.com/wp-content/uploads/2017/11/Web-Frameworks-Conclusions.jpg\",\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.5 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Web Frameworks: Conclusions | SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"index, follow\\\" />\\n<meta name=\\\"googlebot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<meta name=\\\"bingbot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<link rel=\\\"canonical\\\" href=\\\"https://www.sitepen.com/blog/web-frameworks-conclusions/\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Web Frameworks: Conclusions | SitePen\\\" />\\n<meta property=\\\"og:description\\\" content=\\\"It has come time to read the liner notes and write some conclusions. When we started writing this blog series, we knew that JavaScript/web application frameworks were not easy to summarize. We have tried to answer the unanswerable: What framework should I use?\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/web-frameworks-conclusions/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:published_time\\\" content=\\\"2017-11-10T22:22:40+00:00\\\" />\\n<meta property=\\\"article:modified_time\\\" content=\\\"2020-03-30T13:28:39+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2017/11/Web-Frameworks-Conclusions.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1200\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"630\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/web-frameworks-conclusions/#primaryimage\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2017/11/Web-Frameworks-Conclusions.jpg\\\",\\\"width\\\":1200,\\\"height\\\":630,\\\"caption\\\":\\\"Web Frameworks: Conclusions\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/web-frameworks-conclusions/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/web-frameworks-conclusions/\\\",\\\"name\\\":\\\"Web Frameworks: Conclusions | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"primaryImageOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/web-frameworks-conclusions/#primaryimage\\\"},\\\"datePublished\\\":\\\"2017-11-10T22:22:40+00:00\\\",\\\"dateModified\\\":\\\"2020-03-30T13:28:39+00:00\\\",\\\"author\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/13093841ff1b780913b10a245cc737ee\\\"},\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://www.sitepen.com/blog/web-frameworks-conclusions/\\\"]}]},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/13093841ff1b780913b10a245cc737ee\\\",\\\"name\\\":\\\"Kit Kelly\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Kit Kelly\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/15680\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/post\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/67\"}],\"replies\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/comments?post=15680\"}],\"version-history\":[{\"count\":2,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/15680/revisions\"}],\"predecessor-version\":[{\"id\":23800,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/15680/revisions/23800\"}],\"wp:featuredmedia\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/22152\"}],\"wp:attachment\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media?parent=15680\"}],\"wp:term\":[{\"taxonomy\":\"category\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/categories?post=15680\"},{\"taxonomy\":\"post_tag\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/tags?post=15680\"},{\"taxonomy\":\"series\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/series?post=15680\"}],\"curies\":[{\"name\":\"wp\",\"href\":\"https://api.w.org/{rel}\",\"templated\":true}]},\"_embedded\":{\"author\":[{\"id\":67,\"name\":\"Kit Kelly\",\"url\":\"\",\"description\":\"\",\"link\":\"https://wp.sitepen.com/blog/author/kkelly/\",\"slug\":\"kkelly\",\"avatar_urls\":{\"24\":\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=24&d=mm&r=g\",\"48\":\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=48&d=mm&r=g\",\"96\":\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=96&d=mm&r=g\"},\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.5 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Kit Kelly, Author at SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"profile\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Kit Kelly, Author at SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/author/kkelly/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=500&#038;d=mm&#038;r=g\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ProfilePage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/kkelly/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/author/kkelly/\\\",\\\"name\\\":\\\"Kit Kelly, Author at SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/13093841ff1b780913b10a245cc737ee\\\",\\\"name\\\":\\\"Kit Kelly\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Kit Kelly\\\"},\\\"mainEntityOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/kkelly/#webpage\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/67\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users\"}]}}],\"wp:featuredmedia\":[{\"id\":22152,\"date\":\"2020-01-27T10:15:11\",\"slug\":\"web-frameworks-conclusions-2\",\"type\":\"attachment\",\"link\":\"https://wp.sitepen.com/blog/web-frameworks-conclusions/web-frameworks-conclusions-2/\",\"title\":{\"rendered\":\"Web Frameworks- Conclusions\"},\"author\":5,\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.5 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Web Frameworks- Conclusions | SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Web Frameworks- Conclusions | SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2017/11/Web-Frameworks-Conclusions.jpg\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:modified_time\\\" content=\\\"2020-01-27T18:15:18+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2017/11/Web-Frameworks-Conclusions.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1200\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"630\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2017/11/Web-Frameworks-Conclusions.jpg#webpage\\\",\\\"url\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2017/11/Web-Frameworks-Conclusions.jpg\\\",\\\"name\\\":\\\"Web Frameworks- Conclusions | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"datePublished\\\":\\\"2020-01-27T18:15:11+00:00\\\",\\\"dateModified\\\":\\\"2020-01-27T18:15:18+00:00\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://wp.sitepen.com/wp-content/uploads/2017/11/Web-Frameworks-Conclusions.jpg\\\"]}]}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"caption\":{\"rendered\":\"\"},\"alt_text\":\"Web Frameworks: Conclusions\",\"media_type\":\"image\",\"mime_type\":\"image/jpeg\",\"media_details\":{\"width\":1200,\"height\":630,\"file\":\"2017/11/Web-Frameworks-Conclusions.jpg\",\"sizes\":{\"medium\":{\"file\":\"Web-Frameworks-Conclusions-300x158.jpg\",\"width\":300,\"height\":158,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2017/11/Web-Frameworks-Conclusions-300x158.jpg\"},\"large\":{\"file\":\"Web-Frameworks-Conclusions-1024x538.jpg\",\"width\":1024,\"height\":538,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2017/11/Web-Frameworks-Conclusions-1024x538.jpg\"},\"thumbnail\":{\"file\":\"Web-Frameworks-Conclusions-150x150.jpg\",\"width\":150,\"height\":150,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2017/11/Web-Frameworks-Conclusions-150x150.jpg\"},\"medium_large\":{\"file\":\"Web-Frameworks-Conclusions-768x403.jpg\",\"width\":768,\"height\":403,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2017/11/Web-Frameworks-Conclusions-768x403.jpg\"},\"full\":{\"file\":\"Web-Frameworks-Conclusions.jpg\",\"width\":1200,\"height\":630,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2017/11/Web-Frameworks-Conclusions.jpg\"}},\"image_meta\":{\"aperture\":\"0\",\"credit\":\"\",\"camera\":\"\",\"caption\":\"\",\"created_timestamp\":\"0\",\"copyright\":\"\",\"focal_length\":\"0\",\"iso\":\"0\",\"shutter_speed\":\"0\",\"title\":\"\",\"orientation\":\"0\",\"keywords\":[]}},\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2017/11/Web-Frameworks-Conclusions.jpg\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/22152\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/attachment\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/5\"}]}}]}}]","headers":[["access-control-allow-headers","Authorization, Content-Type"],["access-control-expose-headers","X-WP-Total, X-WP-TotalPages"],["allow","GET"],["cache-control","max-age=2592000"],["connection","close"],["content-type","application/json; charset=UTF-8"],["date","Sat, 01 Aug 2020 15:27:09 GMT"],["expires","Mon, 31 Aug 2020 15:27:09 GMT"],["link","<https://wp.sitepen.com/wp-json/>; rel=\"https://api.w.org/\""],["server","Apache"],["transfer-encoding","chunked"],["vary","Origin"],["x-content-type-options","nosniff"],["x-powered-by","PHP/7.3.16-1+0~20200320.56+debian9~1.gbp370a75"],["x-robots-tag","noindex"],["x-wp-total","1"],["x-wp-totalpages","1"]]},"type":"Object"}