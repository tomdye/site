{"value":{"body":"[{\"id\":18657,\"date\":\"2019-07-16T07:44:28\",\"date_gmt\":\"2019-07-16T14:44:28\",\"guid\":{\"rendered\":\"https://www.sitepen.com/blog/?p=18657\"},\"modified\":\"2020-01-21T06:43:13\",\"modified_gmt\":\"2020-01-21T14:43:13\",\"slug\":\"deploying-a-dojo-app-with-docker\",\"status\":\"publish\",\"type\":\"post\",\"link\":\"https://wp.sitepen.com/blog/deploying-a-dojo-app-with-docker/\",\"title\":{\"rendered\":\"Deploying a Dojo App with Docker\"},\"content\":{\"rendered\":\"<p>So you&#8217;ve built an amazing app using <a href=\\\"https://dojo.io\\\">Dojo</a> and now you are ready to go live. After a bit of research, you learn that traditional deployments are challenging! Luckily, the days of FTPing files are long gone, and we can rely on <a href=\\\"https://www.docker.com\\\">Docker</a> for fast, reliable deployments. Using Docker will not only document your build process, but it will also give you a Docker image you can easily deploy to production or run locally.</p>\\n<p>In this article, we&#8217;ll step you through how you can use Docker to build a Docker image that will serve your Dojo app. We&#8217;ll start off with a simple, though naive, approach to building our Dojo app. Then, we&#8217;ll make some improvements to our image&#8217;s file size. Finally, we&#8217;ll streamline our build process to take full advantage of the Docker build cache. We won&#8217;t go into how to deploy the Docker image, but once you have the image, running it in a production environment should be a cinch.</p>\\n<h2>Building Manually</h2>\\n<p>Before we start configuring our Docker build, it&#8217;s helpful to take a step back and think about the steps we perform manually to build our Dojo app. To build a Dojo app from the source we need to:</p>\\n<ul>\\n<li>Install the correct version of Node.js and npm</li>\\n<li>Install the Dojo CLI</li>\\n<li>Install application dependencies</li>\\n<li>Build the app (<code>dojo build</code>)</li>\\n</ul>\\n<p>We don&#8217;t necessarily need to perform all of these steps every time, but if we are setting up an app on a brand new environment, we&#8217;ll need to perform these steps.</p>\\n<h2>Building with Docker</h2>\\n<p>A <code>Dockerfile</code> gives Docker instructions on how to build your image. We&#8217;ll start off by constructing a simple <code>Dockerfile</code> that mirrors our manual build process, and then extend it with a few optimizations from there.</p>\\n<p>If you just want to browse, feel free to check out the <a href=\\\"https://codesandbox.io/s/dojo-docker-32r77?fontsize=14&amp;module=%2FDockerfile\\\">example Docker + Dojo project</a>.</p>\\n<p>Create a <code>Dockerfile</code> in the project directory that looks like this:</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\r\\nFROM nginx:1.17\\r\\n\\r\\nRUN apt-get update &amp;&amp; apt-get install -y curl &amp;&amp; \\\\\\\\\\r\\n    curl -sL https://deb.nodesource.com/setup_8.x | bash - &amp;&amp; \\\\\\\\\\r\\n    apt-get install -y build-essential nodejs &amp;&amp; \\\\\\\\\\r\\n    npm i -g @dojo/cli\\r\\n\\r\\nCOPY . /usr/local/app\\r\\n\\r\\nWORKDIR /usr/local/app\\r\\n\\r\\nRUN npm i\\r\\nRUN dojo build\\r\\n\\r\\nRUN cp -R /usr/local/app/output/dist/* /usr/share/nginx/html/\\r\\n</pre>\\n<p>If the above Dockerfile example does not make sense, this will help explain the details:</p>\\n<ol>\\n<li><code>FROM nginx:1.17</code> &#8211; We&#8217;re going to start from an official <a href=\\\"https://www.nginx.com/\\\" rel=\\\"noopener noreferrer\\\" target=\\\"_blank\\\">nginx</a> image and apply our changes on top of it. This is great because we get a web server that is pre-built and has already been configured for us with sensible defaults. You can <a href=\\\"https://hub.docker.com/_/nginx\\\">read more about the official nginx image on its Docker Hub page</a>.</li>\\n<li><code>RUN apt-get update...</code> &#8211; This is where we install our build tooling. The official nginx image does not have Node.js installed, so we need to install it. After Node.js gets installed, we can install the Dojo CLI globally.</li>\\n<li><code>COPY . /usr/local/app</code> &#8211; Here we copy all of the files in our project root directory (the same location as our <code>Dockerfile</code>) into the Docker image. We&#8217;re copying these files to a temporary directory, I chose <code>/usr/local/app</code>, because we need a place to build our application.</li>\\n<li><code>WORKDIR /usr/local/app</code> &#8211; Set our working directory to our project root. Any <code>RUN</code> commands we execute will now occur within the context of this directory.</li>\\n<li><code>RUN npm i</code> &#8211; Install our application&#8217;s build dependencies.</li>\\n<li><code>RUN dojo build</code> &#8211; Build the Dojo app. When this is finished, our built files reside in <code>/usr/local/app/output/dist</code>.</li>\\n<li><code>RUN cp -R /usr/local/app/output/dist/* /usr/share/nginx/html/</code> &#8211; Copy our compiled files into nginx&#8217;s hosting directory. In our nginx image, anything copied to <code>/usr/share/nginx/html</code> get served as static content.</li>\\n</ol>\\n<p>Now that we have our <code>Dockerfile</code> configured, we can build our image with a simple command:</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\r\\ndocker build -t my-amazing-app.\\r\\n</pre>\\n<p>This command tells Docker to execute the instructions in our Dockerfile and tag the final image with &#8220;my-amazing-app.&#8221; You don&#8217;t need to tag your image, but it makes it a bit easier to track its purpose.</p>\\n<p>After the image is created, you can easily try by running this command:</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">docker run -p 8080:80 my-amazing-app</pre>\\n<p>The nginx image doesn&#8217;t print anything to the screen when it gets started, so you will not get much feedback. With your image running, visit <a href=\\\"http://localhost:8080\\\">http://localhost:8080</a> to see your application in action. You can hit CTRL+C when you are finished and want to shut down the Docker container.</p>\\n<h2>Building Smarter</h2>\\n<p>We&#8217;ve done it! We&#8217;ve successfully created a Docker image of our built Dojo web application. We can use this image to test in a continuous integration environment, or just spin up this image on our web server and release our app in the wild.</p>\\n<p>Although we successfully built our image, we took a somewhat naive approach. Let&#8217;s inspect our image to learn how we can do better.</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">docker run -it my-amazing-app du -h --max-depth=1 /usr/local/app</pre>\\n<p>You should see something like this:</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\r\\n56K\\t/usr/local/app/tests\\r\\n88K\\t/usr/local/app/src\\r\\n7.0M\\t/usr/local/app/output\\r\\n24K\\t/usr/local/app/.idea\\r\\n450M\\t/usr/local/app/node_modules\\r\\n458M\\t/usr/local/app\\r\\n</pre>\\n<p>If you recall our application build process, we copied the app into our image, built it, and then copied the built files into the hosted directory. Looking at the output we just printed, the old files we left as a result of our build are taking up 450MB! We can confirm this by looking at the size of our image and comparing that to the size of the nginx image we&#8217;re using.</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\r\\ndocker image inspect my-amazing-app --format='{{.Size}}'\\r\\n844208614\\r\\ndocker image inspect nginx:1.17 --format='{{.Size}}'\\r\\n109258867\\r\\n</pre>\\n<p>Uh oh! It looks like the problem is much worse than expected. Our application is <strong>over 700MB</strong> larger than the base nginx image. This is because we&#8217;ve also installed Node.js, curl, and the Dojo CLI which we <em>only</em> needed to build our application. </p>\\n<p>Let&#8217;s re-evaluate our approach. We really have two distinct processes that we&#8217;ve munged into our single <code>Dockerfile</code>. First, we want to <em>build</em> our application (this includes installing Node.js dependencies and running the Dojo CLI to create our production-ready assets). Second, we want to <em>configure</em> the nginx image so that it can host our files.</p>\\n<p>We could add extra <code>RUN</code> commands to our <code>Dockerfile</code> to remove our old <code>/usr/local/app</code> directory after we build, and uninstall Node.js and the dojo CLI, but that is really going to pollute our <code>Dockerfile</code> with extraneous commands. Additionally, these additional steps take additional time.</p>\\n<p>Luckily for us, there is a better way! Docker 17.05 and newer includes a <a href=\\\"https://docs.docker.com/develop/develop-images/multistage-build/\\\">multi-stage builds</a> feature that provides exactly what we need. A multi-stage build lets us perform some build steps in one image, and then switch to another image for additional build steps. The last image we switch to is the basis for our final Docker image.</p>\\n<p>Let&#8217;s <a href=\\\"https://codesandbox.io/s/dojo-docker-fqodn?fontsize=14&amp;module=%2FDockerfile\\\">refactor our Dockerfile to use a multi-stage build</a>.</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\r\\nFROM node AS builder\\r\\nRUN npm i -g @dojo/cli\\r\\n\\r\\nCOPY . /usr/local/app\\r\\nWORKDIR /usr/local/app\\r\\n\\r\\nRUN npm i\\r\\nRUN dojo build\\r\\n\\r\\nFROM nginx:1.17\\r\\nCOPY --from=builder /usr/local/app/output/dist/ /usr/share/nginx/html/\\r\\n</pre>\\n<p>Our refactored <code>Dockerfile</code> is <em>easier</em> to read after converting it to a mult-stage build! We&#8217;ve taken our two phases, build and configure, and executed them in different Docker images. For the build phase, we use <a href=\\\"https://hub.docker.com/_/node\\\">the official Node.js image</a>, install the Dojo CLI, copy our project files in, and perform the build. Then, in the configure phase, we copy the files we built during the build phase (<code>—from=builder</code>) and put them in nginx&#8217;s static hosting directory. The build phase gets discarded, leaving us with the nginx image with our files copied in. No extra Node.js, <code>node_modules</code>, Dojo CLI, or anything else we only needed to build our app.</p>\\n<p>If we build our image now (same build command as before), and inspect the size of our final image, we&#8217;ll see that it&#8217;s now only marginally larger than the nginx base image.</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\r\\ndocker image inspect my-amazing-app --format='{{.Size}}'\\r\\n110671871\\r\\n</pre>\\n<h2>Building Faster</h2>\\n<p>If you&#8217;re on Windows or Mac, you might have noticed that &#8220;Sending build context to Docker daemon&#8221; takes longer than we would like, especially if you are building often. By default, Docker is sending our entire project directory over to the Docker virtual machine where the actual building of the image will take place. On our computers, this project directory consists of things like our hidden IDE directories, installed <code>node_modules</code>, etc. Our Docker image doesn&#8217;t need these, and they are just wasting time being copied over with the build context. Similar to a <code>.gitignore</code> file, which tells Git what files to ignore, Docker let&#8217;s us ignore files when creating the build context via a <code>.dockerignore</code> file.</p>\\n<p>Our <code>.dockerignore</code> file will simply look like,</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\r\\nnode_modules/\\r\\noutput/\\r\\n</pre>\\n<p>With our <code>.dockerignore</code> file in place, rebuild the app and you&#8217;ll notice that sending the build context now takes only a fraction of the time. You may also notice that installing our node_modules takes a <strong>lot</strong> longer! Now that we&#8217;re not sending our <code>node_modules</code> anymore, the <code>npm i</code> command we are running has some serious work to do!</p>\\n<p>You may not be surprised to know that Docker has a solution for this too! At the end of each command in our Dockerfile, Docker will cache the result of the command. If we run the build command twice in a row, the second run finishes very quickly -all of the commands are already cached. If a file involved in a build step changes, the cache is invalidated and every command <em>after</em> is also invalidated. In a practical sense, this means that every time we change our application, which results in a change to our <code>COPY . /usr/local/app</code> step, we invalidate every build step that is dependent on those files, like our <code>RUN npm i</code>. This is not ideal as our dependencies should only be reinstalled when we change our <code>package.json</code> file.</p>\\n<p><a href=\\\"https://codesandbox.io/s/dojo-docker-uifve?fontsize=14&amp;module=%2FDockerfile\\\">With some small refactors to our <code>Dockerfile</code></a>, we can use the Docker build cache to our advantage.</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">FROM node AS builder\\r\\nRUN npm i -g @dojo/cli\\r\\n\\r\\nCOPY package.json /usr/local/app/\\r\\nCOPY package-lock.json /usr/local/app/\\r\\n\\r\\nWORKDIR /usr/local/app\\r\\n\\r\\nRUN npm i\\r\\n\\r\\nCOPY . /usr/local/app\\r\\nRUN dojo build\\r\\n\\r\\nFROM nginx:1.17\\r\\nCOPY --from=builder /usr/local/app/output/dist/ /usr/share/nginx/html/\\r\\n</pre>\\n<p>The first thing we do now is copy in our <code>package.json</code> and <code>package-lock.json</code> files. With these changes in place, we can install our Node.js dependencies. Now, if we change one of our application source code files, <em>the cache is not invalidated because those files have not yet been copied into the image</em>. This means that we can change our application source files, rebuild our Docker image, and our <code>RUN npm i</code> cache is still valid, skipping that step entirely and picking up at the <code>COPY . /usr/local/app</code> step, which will in turn invalidate the <code>RUN dojo build</code> step and copy the new files to a new nginx image.</p>\\n<h2>Summary</h2>\\n<p>In this article, we&#8217;ve taken a Dojo application and demonstrated how to build and create a Docker image of the application. We then demonstrated how we can use a multi-stage build to heavily streamline our final Docker image. We wrapped up with some simple tweaks to our Dockerfile to show you how we can take advantage of the Docker build cache to drastically increase the performance of our repeat builds.</p>\\n<p>We did not cover <em>how</em> to deploy your built docker image, but that can be as simple as pushing the image up to <a href=\\\"https://hub.docker.com\\\">docker hub</a> and pulling it down on your web host. With so many web hosts supporting Docker now, deploying your Dojo app has never been easier.</p>\\n<p>You can check out our final <a href=\\\"https://codesandbox.io/s/dojo-docker-uifve\\\">Dojo + Docker example project</a>.</p>\\n<h2>Learning More</h2>\\n<p>Need help optimizing your application for production, defining a perfect DevOps workflow for your next JavaScript or TypeScript application, or building an application that is efficient to create, update, deploy and maintain? If so, <a href=\\\"https://www.sitepen.com/contact/\\\">contact us</a> to discuss how we can with your next project!</p>\\n\",\"protected\":false},\"excerpt\":{\"rendered\":\"<p>So you&#8217;ve built an amazing app using Dojo and now you are ready to go live. After a bit of research, you learn that traditional deployments are challenging! Luckily, the days of FTPing files are long gone, and we can rely on Docker for fast, reliable deployments. Using Docker will not only document your build [&hellip;]</p>\\n\",\"protected\":false},\"author\":74,\"featured_media\":21951,\"comment_status\":\"closed\",\"ping_status\":\"closed\",\"sticky\":false,\"template\":\"\",\"format\":\"standard\",\"meta\":{\"spay_email\":\"\"},\"categories\":[214,2,3,28,6,237],\"tags\":[5],\"series\":[],\"jetpack_featured_media_url\":\"https://wp.sitepen.com/wp-content/uploads/2019/07/Deploying-a-Dojo-App-with-Docker_1200x630-1-1.png\",\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Deploying a Dojo App with Docker | SitePen</title>\\n<meta name=\\\"description\\\" content=\\\"So you&#039;ve built an amazing app using Dojo and now you are ready to go live. After a bit of research, you learn that traditional deployments are challenging! Luckily, the days of FTPing files are long gone, and we can rely on Docker for fast, reliable deployments. Using Docker will not only document your build process, but i\\\" />\\n<meta name=\\\"robots\\\" content=\\\"index, follow\\\" />\\n<meta name=\\\"googlebot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<meta name=\\\"bingbot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<link rel=\\\"canonical\\\" href=\\\"https://www.sitepen.com/blog/deploying-a-dojo-app-with-docker/\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Deploying a Dojo App with Docker | SitePen\\\" />\\n<meta property=\\\"og:description\\\" content=\\\"So you&#039;ve built an amazing app using Dojo and now you are ready to go live. After a bit of research, you learn that traditional deployments are challenging! Luckily, the days of FTPing files are long gone, and we can rely on Docker for fast, reliable deployments. Using Docker will not only document your build process, but i\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/deploying-a-dojo-app-with-docker/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:published_time\\\" content=\\\"2019-07-16T14:44:28+00:00\\\" />\\n<meta property=\\\"article:modified_time\\\" content=\\\"2020-01-21T14:43:13+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2019/07/Deploying-a-Dojo-App-with-Docker_1200x630-1-1.png\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1200\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"630\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/deploying-a-dojo-app-with-docker/#primaryimage\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2019/07/Deploying-a-Dojo-App-with-Docker_1200x630-1-1.png\\\",\\\"width\\\":1200,\\\"height\\\":630},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/deploying-a-dojo-app-with-docker/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/deploying-a-dojo-app-with-docker/\\\",\\\"name\\\":\\\"Deploying a Dojo App with Docker | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"primaryImageOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/deploying-a-dojo-app-with-docker/#primaryimage\\\"},\\\"datePublished\\\":\\\"2019-07-16T14:44:28+00:00\\\",\\\"dateModified\\\":\\\"2020-01-21T14:43:13+00:00\\\",\\\"author\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/58aec2c7c61151384a270fec81a91b81\\\"},\\\"description\\\":\\\"So you've built an amazing app using Dojo and now you are ready to go live. After a bit of research, you learn that traditional deployments are challenging! Luckily, the days of FTPing files are long gone, and we can rely on Docker for fast, reliable deployments. Using Docker will not only document your build process, but i\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://www.sitepen.com/blog/deploying-a-dojo-app-with-docker/\\\"]}]},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/58aec2c7c61151384a270fec81a91b81\\\",\\\"name\\\":\\\"Rory Mulligan\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/257d0f178c788d9915beeb33833f04b8?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Rory Mulligan\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/18657\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/post\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/74\"}],\"replies\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/comments?post=18657\"}],\"version-history\":[{\"count\":2,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/18657/revisions\"}],\"predecessor-version\":[{\"id\":21961,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/18657/revisions/21961\"}],\"wp:featuredmedia\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/21951\"}],\"wp:attachment\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media?parent=18657\"}],\"wp:term\":[{\"taxonomy\":\"category\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/categories?post=18657\"},{\"taxonomy\":\"post_tag\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/tags?post=18657\"},{\"taxonomy\":\"series\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/series?post=18657\"}],\"curies\":[{\"name\":\"wp\",\"href\":\"https://api.w.org/{rel}\",\"templated\":true}]},\"_embedded\":{\"author\":[{\"id\":74,\"name\":\"Rory Mulligan\",\"url\":\"\",\"description\":\"\",\"link\":\"https://wp.sitepen.com/blog/author/rmulligan/\",\"slug\":\"rmulligan\",\"avatar_urls\":{\"24\":\"https://secure.gravatar.com/avatar/257d0f178c788d9915beeb33833f04b8?s=24&d=mm&r=g\",\"48\":\"https://secure.gravatar.com/avatar/257d0f178c788d9915beeb33833f04b8?s=48&d=mm&r=g\",\"96\":\"https://secure.gravatar.com/avatar/257d0f178c788d9915beeb33833f04b8?s=96&d=mm&r=g\"},\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Rory Mulligan, Author at SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"profile\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Rory Mulligan, Author at SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/author/rmulligan/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://secure.gravatar.com/avatar/257d0f178c788d9915beeb33833f04b8?s=500&#038;d=mm&#038;r=g\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ProfilePage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/rmulligan/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/author/rmulligan/\\\",\\\"name\\\":\\\"Rory Mulligan, Author at SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/58aec2c7c61151384a270fec81a91b81\\\",\\\"name\\\":\\\"Rory Mulligan\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/257d0f178c788d9915beeb33833f04b8?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Rory Mulligan\\\"},\\\"mainEntityOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/rmulligan/#webpage\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/74\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users\"}]}}],\"wp:featuredmedia\":[{\"id\":21951,\"date\":\"2020-01-21T06:30:54\",\"slug\":\"deploying-a-dojo-app-with-docker_1200x630-1\",\"type\":\"attachment\",\"link\":\"https://wp.sitepen.com/blog/deploying-a-dojo-app-with-docker/deploying-a-dojo-app-with-docker_1200x630-1/\",\"title\":{\"rendered\":\"Deploying-a-Dojo-App-with-Docker_1200x630-1\"},\"author\":5,\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Deploying-a-Dojo-App-with-Docker_1200x630-1 | SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Deploying-a-Dojo-App-with-Docker_1200x630-1 | SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2019/07/Deploying-a-Dojo-App-with-Docker_1200x630-1-1.png\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2019/07/Deploying-a-Dojo-App-with-Docker_1200x630-1-1.png\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1200\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"630\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2019/07/Deploying-a-Dojo-App-with-Docker_1200x630-1-1.png#webpage\\\",\\\"url\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2019/07/Deploying-a-Dojo-App-with-Docker_1200x630-1-1.png\\\",\\\"name\\\":\\\"Deploying-a-Dojo-App-with-Docker_1200x630-1 | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"datePublished\\\":\\\"2020-01-21T14:30:54+00:00\\\",\\\"dateModified\\\":\\\"2020-01-21T14:30:54+00:00\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://wp.sitepen.com/wp-content/uploads/2019/07/Deploying-a-Dojo-App-with-Docker_1200x630-1-1.png\\\"]}]}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"caption\":{\"rendered\":\"\"},\"alt_text\":\"\",\"media_type\":\"image\",\"mime_type\":\"image/png\",\"media_details\":{\"width\":1200,\"height\":630,\"file\":\"2019/07/Deploying-a-Dojo-App-with-Docker_1200x630-1-1.png\",\"sizes\":{\"medium\":{\"file\":\"Deploying-a-Dojo-App-with-Docker_1200x630-1-1-300x158.png\",\"width\":300,\"height\":158,\"mime_type\":\"image/png\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2019/07/Deploying-a-Dojo-App-with-Docker_1200x630-1-1-300x158.png\"},\"large\":{\"file\":\"Deploying-a-Dojo-App-with-Docker_1200x630-1-1-1024x538.png\",\"width\":1024,\"height\":538,\"mime_type\":\"image/png\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2019/07/Deploying-a-Dojo-App-with-Docker_1200x630-1-1-1024x538.png\"},\"thumbnail\":{\"file\":\"Deploying-a-Dojo-App-with-Docker_1200x630-1-1-150x150.png\",\"width\":150,\"height\":150,\"mime_type\":\"image/png\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2019/07/Deploying-a-Dojo-App-with-Docker_1200x630-1-1-150x150.png\"},\"medium_large\":{\"file\":\"Deploying-a-Dojo-App-with-Docker_1200x630-1-1-768x403.png\",\"width\":768,\"height\":403,\"mime_type\":\"image/png\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2019/07/Deploying-a-Dojo-App-with-Docker_1200x630-1-1-768x403.png\"},\"full\":{\"file\":\"Deploying-a-Dojo-App-with-Docker_1200x630-1-1.png\",\"width\":1200,\"height\":630,\"mime_type\":\"image/png\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2019/07/Deploying-a-Dojo-App-with-Docker_1200x630-1-1.png\"}},\"image_meta\":{\"aperture\":\"0\",\"credit\":\"\",\"camera\":\"\",\"caption\":\"\",\"created_timestamp\":\"0\",\"copyright\":\"\",\"focal_length\":\"0\",\"iso\":\"0\",\"shutter_speed\":\"0\",\"title\":\"\",\"orientation\":\"0\",\"keywords\":[]}},\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2019/07/Deploying-a-Dojo-App-with-Docker_1200x630-1-1.png\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/21951\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/attachment\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/5\"}]}}]}}]","headers":[["access-control-allow-headers","Authorization, X-WP-Nonce, Content-Disposition, Content-MD5, Content-Type"],["access-control-expose-headers","X-WP-Total, X-WP-TotalPages, Link"],["allow","GET"],["cache-control","max-age=2592000"],["connection","close"],["content-type","application/json; charset=UTF-8"],["date","Tue, 25 Aug 2020 13:09:49 GMT"],["expires","Thu, 24 Sep 2020 13:09:49 GMT"],["link","<https://wp.sitepen.com/wp-json/>; rel=\"https://api.w.org/\""],["server","Apache"],["transfer-encoding","chunked"],["vary","Origin"],["x-content-type-options","nosniff"],["x-powered-by","PHP/7.3.21-1+0~20200807.66+debian9~1.gbp18a1c2"],["x-robots-tag","noindex"],["x-wp-total","1"],["x-wp-totalpages","1"]]},"type":"Object"}