{"value":{"body":"[{\"id\":432,\"date\":\"2008-07-10T23:28:06\",\"date_gmt\":\"2008-07-11T06:28:06\",\"guid\":{\"rendered\":\"https://www.sitepen.com/blog/2008/07/10/touching-and-gesturing-on-the-iphone/\"},\"modified\":\"2008-07-10T23:28:06\",\"modified_gmt\":\"2008-07-11T06:28:06\",\"slug\":\"touching-and-gesturing-on-the-iphone\",\"status\":\"publish\",\"type\":\"post\",\"link\":\"https://wp.sitepen.com/blog/touching-and-gesturing-on-the-iphone/\",\"title\":{\"rendered\":\"Touching and Gesturing on the iPhone\"},\"content\":{\"rendered\":\"<div style=\\\"background:#FFFFCC; padding: 1em; font-weight:bold; border:1px solid #FFCC99; margin-bottom:1em\\\">NOTE: This post is out of date.<br /><a href=\\\"https://www.sitepen.com/blog/2011/12/07/touching-and-gesturing-on-iphone-android-and-more/\\\">Read our updated version of this post for more up to date information</a>!</div>\\n<p>Everyone who owns an <a href=\\\"http://www.apple.com/iphone/\\\">iPhone</a> (or who has been holding out for an iPhone 3G) is bound to be excited about a lot of the new things the device can finally do, particularly the introduction of third-party applications. But those of us in the web development community have been itching for something further still: good web applications on the iPhone. This means we need a suitable replacement for mouse events. And boy did we get them! Though at first the APIs seem a little sketchy, once you&#8217;ve learned them you should be able to do amazing things in your application.</p>\\n<p><!--more--></p>\\n<p>I&#8217;ll start with how to set up the iPhone console, since I found it invaluable while testing. Under Settings > Safari > Developer, you can turn it on or off. Simple log, error, and warn functions are provided (as part of the <code>console</code> object), all of which accept a single object.</p>\\n<p>My quest to understand the API led me to this <a href=\\\"https://developer.apple.com/webapps/docs_iphone/documentation/AppleApplications/Reference/SafariJSRef/index.html\\\">Apple Developer Connection page</a> that, while providing pretty thorough documentation about what&#8217;s available, left me a little confused about the details. Also, if you aren&#8217;t a member of ADC, trying to follow this link will leave you even more confused.</p>\\n<h2>Clearing it Up</h2>\\n<p>Apple introduced two new ideas with this API: touches and gestures. Touches are important for keeping track of how many fingers are on the screen, where they are, and what they&#8217;re doing. Gestures are important for determining what the user is doing when they have two fingers on the screen and are either pinching, pushing, or rotating them.</p>\\n<h2>Touches</h2>\\n<p>When you put a finger down on the screen, it kicks off the lifecycle of touch events. Each time a new finger touches the screen, a new <code>touchstart</code> event happens. As each finger lifts up, a <code>touchend</code> event happen. If, after touching the screen, you move any of your fingers around, <code>touchmove</code> events happen.</p>\\n<p>We have the following touch events:</p>\\n<ul>\\n<li><strong>touchstart</strong>: Happens every time a finger is placed on the screen</li>\\n<li><strong>touchend</strong>: Happens every time a finger is removed from the screen</li>\\n<li><strong>touchmove</strong>: Happens as a finger already placed on the screen is moved across the screen</li>\\n<li><strong>touchcancel</strong>: The system can cancel events, but I&#8217;m not sure how this can happen. I thought it might happen when you receive something like an SMS during a drag, but I tested that with no success</li>\\n</ul>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\nnode.ontouchstart = function(evt){\\n  console.log(evt.pageX + \\\"/\\\" + evt.pageY);\\n  // OH NO! These values are blank, this must be a bug\\n}\\n</pre>\\n<p>My first mistake was monitoring these events and trying to get location information from the events (<code>pageX</code>, <code>pageY</code>, etc). After consulting the ADC documentation again, I learned about three event lists that come attached to the object. But I wasn&#8217;t sure what they did, so I went back to testing, logging, and experimenting.</p>\\n<p>It helped when I figured out the problem the Apple developers were trying to solve. With a mouse, you really only have one point of contact: through the cursor. With your hand, you can keep two fingers held down on the left of the screen while you keep tapping the right side of the screen.</p>\\n<p>Our event object has a list, and this list contains information for every finger that&#8217;s currently touching the screen. It also contains two other lists, one which contains only the information for fingers that originated from the same node, and one which contains only the information for fingers that are associated with the current event. These lists are available to every touch event.</p>\\n<p>We have the following lists:</p>\\n<ul>\\n<li><strong>touches</strong>: A list of information for every finger currently touching the screen</li>\\n<li><strong>targetTouches</strong>: Like touches, but is filtered to only the information for finger touches that started out within the same node</li>\\n<li><strong>changedTouches</strong>: A list of information for every finger involved in the event (see below)</li>\\n</ul>\\n<p>To better understand what might be in these lists, let&#8217;s go over some examples quickly</p>\\n<ul>\\n<li>When I put a finger down, all three lists will have the same information. It will be in <code>changedTouches</code> because putting the finger down is what caused the event</li>\\n<li>When I put a second finger down, <code>touches</code> will have two items, one for each finger. <code>targetTouches</code> will have two items only if the finger was placed in the same node as the first finger. <code>changedTouches</code> will have the information related to the second finger, because it&#8217;s what caused the event</li>\\n<li>If I put two fingers down at exactly the same time, it&#8217;s possible to have two items in changedTouches, one for each finger</li>\\n<li>If I move my fingers, the only list that will change is <code>changedTouches</code> and will contain information related to as many fingers as have moved (at least one).</li>\\n<li>When I lift a finger, it will be removed from <code>touches</code>, <code>targetTouches</code> and will appear in <code>changedTouches</code> since it&#8217;s what caused the event</li>\\n<li>Removing my last finger will leave <code>touches</code> and <code>targetTouches</code> empty, and <code>changedTouches</code> will contain information for the last finger</li>\\n</ul>\\n<p>Using these lists, I can keep very close tabs on what the user is doing. Imagine creating a(nother) Super Mario clone in JavaScript. I&#8217;d be able to tell what direction the user currently has his or her thumb on, while also being able to watch for when the user wants to jump or shoot a fireball.</p>\\n<p>I&#8217;ve been saying that these lists contain information about the fingers touching the screen. These objects are very similar to what you&#8217;d normally see in an event object passed to an event handler A limited set of properties are available in these objects. Following is the full list of properties for these objects:</p>\\n<ul>\\n<li><strong>clientX</strong>: X coordinate of touch relative to the viewport (excludes scroll offset)</li>\\n<li><strong>clientY</strong>: Y coordinate of touch relative to the viewport (excludes scroll offset)</li>\\n<li><strong>screenX</strong>: Relative to the screen</li>\\n<li><strong>screenY</strong>: Relative to the screen</li>\\n<li><strong>pageX</strong>: Relative to the full page (includes scrolling)</li>\\n<li><strong>pageY</strong>: Relative to the full page (includes scrolling)</li>\\n<li><strong>target</strong>: Node the touch event originated from</li>\\n<li><strong>identifier</strong>: An identifying number, unique to each touch event</li>\\n</ul>\\n<p>For those of you coming from the normal web design world, in a normal <code>mousemove</code> event, the node passed in the <code>target</code> attribute is usually what the mouse is currently over. But in all iPhone touch events, the target is a reference to the originating node.</p>\\n<p>One of the annoyances of writing web applications for the iPhone has been that even if you set a viewport for your application, dragging your finger around will move the page around. Fortunately, the <code>touchmove</code>&#8216;s event object has a <code><a href=\\\"http://developer.mozilla.org/en/docs/DOM:event.preventDefault\\\">preventDefault</a>()</code> function (a standard DOM event function) that will make the page stay absolutely still while you move your finger around.</p>\\n<h2>Drag and Drop with the Touch API</h2>\\n<p>We don&#8217;t have to worry about keeping track of down/up events as we do with <code>mousemove</code> since the only way <code>touchmove</code> is triggered is after <code>touchstart</code>.</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\nnode.ontouchmove = function(e){\\n  if(e.touches.length == 1){ // Only deal with one finger\\n    var touch = e.touches[0]; // Get the information for finger #1\\n    var node = touch.target; // Find the node the drag started from\\n    node.style.position = \\\"absolute\\\";\\n    node.style.left = touch.pageX + \\\"px\\\";\\n    node.style.top = touch.pageY + \\\"px\\\";\\n  }\\n}\\n</pre>\\n<h2>Gestures</h2>\\n<p>This was much easier to figure out than the touch API. A gesture event occurs any time two fingers are touching the screen. If either finger lands in the node you&#8217;ve connected any of the gesture handlers (<code>gesturestart</code>, <code>gesturechange</code>, <code>gestureend</code>) to, you&#8217;ll start receiving the corresponding events.</p>\\n<p><code>scale</code> and <code>rotation</code> are the two important keys of this event object. While <code>scale</code> gives you the multiplier the user has pinched or pushed in the gesture (relative to 1), <code>rotation</code> gives you the amount in degrees the user has rotated their fingers.</p>\\n<h2>Resizing and Rotating with the Gestures API</h2>\\n<p>We&#8217;ll be using WebKit&#8217;s transform property to rotate the node.</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\nvar width = 100, height = 200, rotation = ;\\n\\nnode.ongesturechange = function(e){\\n  var node = e.target;\\n  // scale and rotation are relative values,\\n  // so we wait to change our variables until the gesture ends\\n  node.style.width = (width * e.scale) + \\\"px\\\";\\n  node.style.height = (height * e.scale) + \\\"px\\\";\\n  node.style.webkitTransform = \\\"rotate(\\\" + ((rotation + e.rotation) % 360) + \\\"deg)\\\";\\n}\\n\\nnode.ongestureend = function(e){\\n  // Update the values for the next time a gesture happens\\n  width *= e.scale;\\n  height *= e.scale;\\n  rotation = (rotation + e.rotation) % 360;\\n}\\n</pre>\\n<h2>Conflicts</h2>\\n<p>Some readers might have noticed that a gesture is just a prettier way of looking at touch events. It&#8217;s completely true, and if you don&#8217;t handle things properly, you can end up with some odd behavior. Remember to keep track of what&#8217;s currently happening in a page, as you&#8217;ll probably want to let one of these two operations &#8220;win&#8221; when they come in conflict.</p>\\n<h2>In Action</h2>\\n<p>I put together a quick demo:</p>\\n<p><a href=\\\"http://tinyurl.com/sp-iphone\\\"><img src=\\\"https://www.sitepen.com/labs/code/iphone/events.png\\\" /></a></p>\\n<p>This is a simple application that <a href=\\\"http://tinyurl.com/sp-iphone\\\">showcases</a> the incredible flexibility and power of these APIs. It&#8217;s a simple gray square that can have its colors and borders restyled, can be dragged around, and can be resized and rotated.</p>\\n<p><object type=\\\"application/x-shockwave-flash\\\" width=\\\"400\\\" height=\\\"300\\\" data=\\\"http://www.flickr.com/apps/video/stewart.swf?v=55430\\\" classid=\\\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\\\"><param name=\\\"flashvars\\\" value=\\\"intl_lang=en-us&amp;photo_secret=e2d7c047f4&amp;photo_id=2657744586\\\"></param><param name=\\\"movie\\\" value=\\\"http://www.flickr.com/apps/video/stewart.swf?v=55430\\\"></param><param name=\\\"bgcolor\\\" value=\\\"#000000\\\"></param><param name=\\\"allowFullScreen\\\" value=\\\"true\\\"></param></object></p>\\n<p>Load <strong>http://tinyurl.com/sp-iphone</strong> up on your iPhone and try the following:</p>\\n<ul>\\n<li>Keep a finger over one of the colored squares, and put another finger on one of the border squares</li>\\n<li>Try the same thing using two colored squares or two border squares</li>\\n<li>Use one finger to drag the square around the page</li>\\n<li>Pinch and rotate the square</li>\\n<li>Start dragging the square, but put another finger down and turn it into a pinch and rotate. Lift one of your fingers back up, and resume dragging the square around</li>\\n</ul>\\n<h2>Can I Do X?</h2>\\n<p>I&#8217;m not sure what sort of APIs we&#8217;ll be able to build on top of what Apple has provided for us. What I do know is that Apple has given us a very well thought out API.</p>\\n<p><code>mousedown</code> and <code>mouseup</code> are events we can easily emulate with this new API. <code>mousemove</code> is a beast. First of all, we only get touch events after the finger has made contact (the equivalent of <code>mousedown</code>) while we get <code>mousemove</code> events regardless of whether the button is down or not. Also, preventing the page from jumping around isn&#8217;t something we can automate. Attach a handler to the document and the user wouldn&#8217;t be able to scroll at all!</p>\\n<p>Which brings us to DnD in general. Even though DnD only cares about <code>mousemove</code> in the context of the mouse button being down (the way that <code>touchmove</code> works), we don&#8217;t have any way to tell what node the user&#8217;s finger is over at the end of the drag (since <code>target</code> refers to the originating node). If a DnD system is to be used, it would have to be for registered drop targets who are aware of their position and size on the page.</p>\\n\",\"protected\":false},\"excerpt\":{\"rendered\":\"<p>NOTE: This post is out of date.Read our updated version of this post for more up to date information! Everyone who owns an iPhone (or who has been holding out for an iPhone 3G) is bound to be excited about a lot of the new things the device can finally do, particularly the introduction of [&hellip;]</p>\\n\",\"protected\":false},\"author\":22,\"featured_media\":17549,\"comment_status\":\"closed\",\"ping_status\":\"closed\",\"sticky\":false,\"template\":\"\",\"format\":\"standard\",\"meta\":{\"spay_email\":\"\"},\"categories\":[3,47,43],\"tags\":[],\"jetpack_featured_media_url\":\"\",\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.3 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Touching and Gesturing on the iPhone | SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"index, follow\\\" />\\n<meta name=\\\"googlebot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<meta name=\\\"bingbot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<link rel=\\\"canonical\\\" href=\\\"https://www.sitepen.com/blog/touching-and-gesturing-on-the-iphone/\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Touching and Gesturing on the iPhone | SitePen\\\" />\\n<meta property=\\\"og:description\\\" content=\\\"NOTE: This post is out of date.Read our updated version of this post for more up to date information! Everyone who owns an iPhone (or who has been holding out for an iPhone 3G) is bound to be excited about a lot of the new things the device can finally do, particularly the introduction of [&hellip;]\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/touching-and-gesturing-on-the-iphone/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:published_time\\\" content=\\\"2008-07-11T06:28:06+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1600\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"900\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/touching-and-gesturing-on-the-iphone/#primaryimage\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/touching-and-gesturing-on-the-iphone/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/touching-and-gesturing-on-the-iphone/\\\",\\\"name\\\":\\\"Touching and Gesturing on the iPhone | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"primaryImageOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/touching-and-gesturing-on-the-iphone/#primaryimage\\\"},\\\"datePublished\\\":\\\"2008-07-11T06:28:06+00:00\\\",\\\"dateModified\\\":\\\"2008-07-11T06:28:06+00:00\\\",\\\"author\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/5faa55fe74a96ec3ce93ae43191b4efa\\\"},\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://www.sitepen.com/blog/touching-and-gesturing-on-the-iphone/\\\"]}]},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/5faa55fe74a96ec3ce93ae43191b4efa\\\",\\\"name\\\":\\\"Neil Roberts\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/69fd66470805247975fb8c663e9a46ee?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Neil Roberts\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/432\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/post\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/22\"}],\"replies\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/comments?post=432\"}],\"version-history\":[{\"count\":0,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/432/revisions\"}],\"wp:featuredmedia\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/17549\"}],\"wp:attachment\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media?parent=432\"}],\"wp:term\":[{\"taxonomy\":\"category\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/categories?post=432\"},{\"taxonomy\":\"post_tag\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/tags?post=432\"}],\"curies\":[{\"name\":\"wp\",\"href\":\"https://api.w.org/{rel}\",\"templated\":true}]},\"_embedded\":{\"author\":[{\"id\":22,\"name\":\"Neil Roberts\",\"url\":\"https://www.sitepen.com\",\"description\":\"\",\"link\":\"https://wp.sitepen.com/blog/author/nroberts/\",\"slug\":\"nroberts\",\"avatar_urls\":{\"24\":\"https://secure.gravatar.com/avatar/69fd66470805247975fb8c663e9a46ee?s=24&d=mm&r=g\",\"48\":\"https://secure.gravatar.com/avatar/69fd66470805247975fb8c663e9a46ee?s=48&d=mm&r=g\",\"96\":\"https://secure.gravatar.com/avatar/69fd66470805247975fb8c663e9a46ee?s=96&d=mm&r=g\"},\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.3 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Neil Roberts, Author at SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"profile\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Neil Roberts, Author at SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/author/nroberts/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://secure.gravatar.com/avatar/69fd66470805247975fb8c663e9a46ee?s=500&#038;d=mm&#038;r=g\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ProfilePage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/nroberts/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/author/nroberts/\\\",\\\"name\\\":\\\"Neil Roberts, Author at SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/5faa55fe74a96ec3ce93ae43191b4efa\\\",\\\"name\\\":\\\"Neil Roberts\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/69fd66470805247975fb8c663e9a46ee?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Neil Roberts\\\"},\\\"mainEntityOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/nroberts/#webpage\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/22\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users\"}]}}],\"wp:featuredmedia\":[{\"code\":\"rest_post_invalid_id\",\"message\":\"Invalid post ID.\",\"data\":{\"status\":404}}]}}]","headers":[["access-control-allow-headers","Authorization, Content-Type"],["access-control-expose-headers","X-WP-Total, X-WP-TotalPages"],["allow","GET"],["cf-cache-status","DYNAMIC"],["cf-ray","5a774e08affde670-LHR"],["cf-request-id","037e6f196a0000e6700f22f200000001"],["connection","close"],["content-encoding","gzip"],["content-type","application/json; charset=UTF-8"],["date","Mon, 22 Jun 2020 16:21:52 GMT"],["expect-ct","max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""],["link","<https://wp.sitepen.com/wp-json/>; rel=\"https://api.w.org/\""],["server","cloudflare"],["set-cookie","__cfduid=df9319cc9040a6c447bacd1a2a64b90e91592842912; expires=Wed, 22-Jul-20 16:21:52 GMT; path=/; domain=.sitepen.com; HttpOnly; SameSite=Lax"],["transfer-encoding","chunked"],["vary","Origin"],["x-content-type-options","nosniff"],["x-robots-tag","noindex"],["x-wp-total","1"],["x-wp-totalpages","1"]]},"type":"Object"}