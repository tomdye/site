{"value":{"body":"[{\"id\":24246,\"date\":\"2020-05-06T10:10:02\",\"date_gmt\":\"2020-05-06T17:10:02\",\"guid\":{\"rendered\":\"https://wp.sitepen.com/?p=24246\"},\"modified\":\"2020-07-08T06:57:08\",\"modified_gmt\":\"2020-07-08T13:57:08\",\"slug\":\"accessibility-inspectors-a-basic-guide\",\"status\":\"publish\",\"type\":\"post\",\"link\":\"https://wp.sitepen.com/blog/accessibility-inspectors-a-basic-guide/\",\"title\":{\"rendered\":\"Accessibility Inspectors: A Basic Guide\"},\"content\":{\"rendered\":\"\\n<p>As accessibility-minded developers working on accessibility-minded teams, we strive to design and build inclusive applications that yield a pleasant experience for all users. However, despite our best efforts we may make mistakes and implement features in a sub-optimal way, or worse, discover that some users cannot use those features at all. Fortunately, in recent years browsers have introduced tools that help debug some of these issues. Here we will focus on the built-in accessibility inspectors that allow developers to navigate the accessibility tree that browsers present to assistive technologies.</p>\\n\\n\\n\\n<h2><strong>Accessibility Tree</strong></h2>\\n\\n\\n\\n<p>Since an assistive technology (AT) is expected to provide a unified experience across multiple desktop applications, it does not interact directly with the browser but rather through an accessibility API that sits between the AT and the browser. As such, when the browser reads a page&#8217;s HTML, it will not only generate the DOM tree but if an AT is running the browser will also generate an accessibility tree that represents the DOM structure&#8217;s computed accessibility properties. ATs then read (and perhaps transform) this accessibility tree to generate their own user experience.</p>\\n\\n\\n\\n<p>While most of the DOM tree will exist in some form in the accessibility tree, the browser can optimize the accessibility tree by removing hidden elements or those it determines provide no useful meaning to the user (e.g., presentation-only wrapper nodes). Further, the exact structure of the accessibility tree is implementation-specific; for example, browsers may use different node names for identical nodes, decorate nodes with properties not used by other browsers, or attempt to correct poorly-constructed markup. However, there are commonalities that are required for compatibility with the underlying accessibility API, including an element&#8217;s:</p>\\n\\n\\n\\n<ul><li><strong>role</strong>, which helps inform users how they can expect to interact with the element. For example, if an element&#8217;s role is listed as &#8220;checkbox&#8221; or &#8220;checkbutton&#8221; (depending on the browser), the user knows the element can receive focus and get selected or deselected.</li><li>optional <strong>name</strong> or <strong>label</strong>, which helps define the purpose of the element. For example, if the element is a button, its text content will get used as its name. Alternatively, if it contains an aria-label attribute, its name will be the value of that attribute; if it contains an aria-labelledby attribute, then its name will be the computed name of the element with the ID specified by aria-labelledby.</li><li><strong>various states</strong>, such as whether the element is <em>focusable</em>, <em>disabled</em>, <strong>selected</strong>, etc.</li></ul>\\n\\n\\n\\n<h2><strong>Accessibility Inspectors</strong></h2>\\n\\n\\n\\n<p>Now that we have a better understanding of how browsers represent the document structure to assistive technologies, we can discuss the tools that browsers provide developers for interacting with those structures and determining the computed accessibility properties for any given DOM node. At present, accessibility inspectors are provided in some form by:</p>\\n\\n\\n\\n<ul><li>Firefox</li><li>Chrome, Chromium Edge, and Brave</li><li>Safari</li></ul>\\n\\n\\n\\n<p>In the following sections, we will examine each availability inspector in turn using an example breadcrumb implementation using the HTML below. Note that no styling has been applied and that the list HTML is deliberately malformed in order to demonstrate how it affects the accessibility tree in each browser:</p>\\n\\n\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\n&lt;!DOCTYPE html&gt;\\n&lt;html lang=&quot;en&quot;&gt;\\n    &lt;head&gt;\\n   \\t &lt;meta charset=&quot;utf-8&quot;&gt;\\n   \\t &lt;title&gt;Accessibility Inspector Demo&lt;/title&gt;\\n    &lt;/head&gt;\\n    &lt;body&gt;\\n   \\t &lt;nav aria-label=&quot;breadcrumb&quot;&gt;\\n   \\t\\t &lt;ol&gt;\\n   \\t\\t\\t &lt;div&gt;\\n   \\t\\t\\t\\t &lt;li&gt;&lt;a href=&quot;/step-one&quot;&gt;Step One&lt;/a&gt;&lt;/li&gt;\\n   \\t\\t\\t\\t &lt;li&gt;&lt;a aria-current=&quot;step&quot; href=&quot;/step-two&quot;&gt;Step Two&lt;/a&gt;&lt;/li&gt;\\n   \\t\\t\\t\\t &lt;li&gt;&lt;a href=&quot;/step-three&quot;&gt;Step Three&lt;/a&gt;&lt;/li&gt;\\n   \\t\\t\\t &lt;/div&gt;\\n   \\t\\t &lt;/ol&gt;\\n   \\t &lt;/nav&gt;\\n    &lt;/body&gt;\\n&lt;/html&gt;\\n</pre>\\n\\n\\n<h3><strong>Firefox</strong></h3>\\n\\n\\n\\n<p>Of the listed browser platforms, only <a href=\\\"https://developer.mozilla.org/en-US/docs/Tools/Accessibility_inspector\\\" target=\\\"_blank\\\" rel=\\\"noreferrer noopener\\\">Firefox</a> allows developers to navigate the entire accessibility tree as they would the DOM tree. Firefox&#8217;s inspector can be found in the &#8220;Accessibility&#8221; tab of its developer tools. This tab should be displayed, but if not then it will need to be enabled manually. To do so, open the &#8220;Customize Developer Tools and Get Help&#8221; menu (displayed as an ellipsis button next to the &#8220;Close&#8221; button in the main dev tools toolbar) and then navigate to &#8220;Settings&#8221;. The accessibility tab can be enabled by checking the &#8220;Accessibility&#8221; checkbox in the &#8220;Default Developer Tools&#8221; section.</p>\\n\\n\\n\\n<p>In order to optimize performance, browsers will not generate an accessibility tree unless needed. So once the &#8220;Accessibility&#8221; tab is enabled and displayed, the accessibility features need to be enabled via the &#8220;Turn On Accessibility Features&#8221; button unless an assistive technology is already running. With the accessibility features enabled, the accessibility tree is displayed in the tab contents, and the accessibility properties of any node get revealed by 1) expanding nodes in the tree individually, 2) using the &#8220;Pick accessible object from the page&#8221; button (the first button in the toolbar when the &#8220;Accessibility&#8221; tab is selected) or 3) right-clicking any element on the page and choosing &#8220;Inspect Accessibility Properties&#8221; from the context menu.</p>\\n\\n\\n\\n<p>Returning to breadcrumb example above, Firefox generates the following accessibility tree:</p>\\n\\n\\n\\n<figure class=\\\"wp-block-image\\\"><img src=\\\"https://lh6.googleusercontent.com/AYDcLrbybIxUyle7BHtoMILaoz55VlHzmWQq1vXjmlpE6AefMKZcnGnKm3frfV6eHZLawXw1DQPUmtoGVDte8LLanWJ3wEfKMP3DRkgiXHMYcG5qTB9iPYFbjP36csKRMPpzDfCv\\\" alt=\\\"Firefox accessibility inspector showing the breadcrumb example\\\"/></figure>\\n\\n\\n\\n<p>Even with our small example, there is much to explore. The main tab content area displays each nodeâ€™s role and name, but there is also a &#8220;Properties&#8221; accordion pane that contains additional information such as the node&#8217;s various states (e.g., &#8220;focusable&#8221; and &#8220;enabled&#8221;). In order to understand how this helps us improve the user experience, notice that the structure of the breadcrumb list appears wrong. Specifically, after the <code>list</code> node we would expect there to be <code>listitem</code> nodes for each of the three items in the breadcrumb. Instead, there is a single section followed by three text container nodes. This is due to the <code>&lt;div&gt;</code> that wraps the three <code>&lt;li&gt;</code> tags, and the resulting accessibility tree structure indicates that assistive technologies may not present this to users in the way we expect. In fact, VoiceOver on macOS does not treat this example as a list of three items, but instead as a list of <em>one</em> item, so that navigating through the list results in the following reading:</p>\\n\\n\\n\\n<blockquote class=\\\"wp-block-quote\\\"><p>list one item<br>link, Step One<br>link, Step Two<br>link, Step Three</p></blockquote>\\n\\n\\n\\n<p>To correct this, we need to remove the <code>&lt;div&gt;</code> around the three list items in order to restore the expected relationship between the list and its individual items:</p>\\n\\n\\n\\n<figure class=\\\"wp-block-image\\\"><img src=\\\"https://lh5.googleusercontent.com/rscKui6ASNfHTKJczoGCRuH0yFrxBTEyGKRkQcY4mpxVxcjhO_a62vNg66l46ix-EdG86tJEHM-SUEgSZSmsmV8J4qOJuodgRyaueqN1AhHxSbL1h8XJh8vUlzjI2ybr1IRI6BUo\\\" alt=\\\"Firefox accessibility inspector showing the same breadcrumb example but with corrected semantics\\\"/></figure>\\n\\n\\n\\n<p>After removing the <code>&lt;div&gt;</code>, the accessibility tree displays the breadcrumb items as <code>listitem</code> nodes as expected, and VoiceOver now indicates that our list has three items, and also reads each step number:</p>\\n\\n\\n\\n<blockquote class=\\\"wp-block-quote\\\"><p>list three items<br>text, 1 of 3<br>link, Step One<br>text, 2 of 3<br>link, Step Two<br>text, 3 of 3<br>link, Step Three</p></blockquote>\\n\\n\\n\\n<h3><strong>Chrome and Chromium Browsers</strong></h3>\\n\\n\\n\\n<p>Rather than provide a separate, top-level tab for viewing the accessibility tree, the <a href=\\\"https://developers.google.com/web/tools/chrome-devtools/accessibility/reference#pane\\\" target=\\\"_blank\\\" rel=\\\"noreferrer noopener\\\">Chrome developer tools</a> add a child &#8220;Accessibility&#8221; tab to the top-level &#8220;Elements&#8221; tab. While it is not possible to navigate the entire accessibility tree freely, Chrome&#8217;s tools still provide plenty of useful information:</p>\\n\\n\\n\\n<figure class=\\\"wp-block-image\\\"><img src=\\\"https://lh5.googleusercontent.com/SZo1llP16HduqsBPvWvEG1rbDSwMcDxog5we6ngBNTnQEgVfKvg1CFwr0WGkQ2Tpx7cj4sIBYAZiDTTTng2Ei1EL0nUGX5mlN3MUt2fTo35Xv79oGLm2N2PnXTi8oEFieHAl2CDy\\\" alt=\\\"Chrome accessibility inspector showing the breadcrumb example\\\"/></figure>\\n\\n\\n\\n<p>In the above image, the <code>&lt;div&gt;</code> that wraps the breadcrumb&#8217;s list items is selected and its accessibility properties get displayed. In Firefox, this node was included in the accessibility tree, degrading the user experience. However, the &#8220;Computed Properties&#8221; for this same node in Chrome report, &#8220;Accessibility node not exposed. Element not interesting for accessibility.&#8221; If we then highlight one of the links in the breadcrumb, we can see in the &#8220;Accessibility Tree&#8221; accordion pane that the relationship between the list and the list item is preserved. Chrome recognizes that the <code>&lt;div&gt;</code> should not have been added around the list items and therefore ignores it.</p>\\n\\n\\n\\n<figure class=\\\"wp-block-image\\\"><img src=\\\"https://lh5.googleusercontent.com/BAaszl6tq47ujvEy5LPev4NJaDpFV1sv9iddO-TzhossEmRBnjM1fxlYX7yPxJSQpxF4X_M9ie-QBWQZs01GOpTp7cdehIRO9P2oXC7GXgtNYBd9oZ7UlslEewUpG5iHQx5zTbSe\\\" alt=\\\"Chrome accessibility inspector showing the accessibility tree and properties for a breadcrumb item link.\\\"/></figure>\\n\\n\\n\\n<p>Of course, we cannot be certain what an AT will read to users until we test it ourselves. Navigating our page with VoiceOver enabled verifies that we interpreted the computed accessibility correctly:</p>\\n\\n\\n\\n<blockquote class=\\\"wp-block-quote\\\"><p>list 3 items<br>1<br>link, Step One<br>2<br>link, Step Two<br>3<br>link, Step Three</p></blockquote>\\n\\n\\n\\n<p>Note that this simple example was chosen deliberately to demonstrate how browsers might modify the DOM tree when generating the accessibility tree. Since there is no guarantee that such behavior will be preserved in future releases or that all poorly-written markup will be optimized, we still must fix our code. After doing so, VoiceOver verifies that everything is read as expected:</p>\\n\\n\\n\\n<blockquote class=\\\"wp-block-quote\\\"><p>list 3 items<br>1<br>link, Step One<br>2<br>link, Step Two<br>3<br>link, Step Three</p></blockquote>\\n\\n\\n\\n<h3><strong>Safari</strong></h3>\\n\\n\\n\\n<p>As with Chrome, <a href=\\\"https://developer.apple.com/safari/tools/\\\" target=\\\"_blank\\\" rel=\\\"noreferrer noopener\\\">Safari</a> includes the nodes&#8217; accessibility properties in the top-level &#8220;Elements&#8221; tab. However, the available information is minimum compared to that provided by either Firefox or Chrome. To view a node&#8217;s accessibility properties, inspect the node in the &#8220;Elements&#8221; tab of the developer tools, select the &#8220;Nodes&#8221; child tab in the adjacent child pane, and then expand the &#8220;Accessibility&#8221; accordion pane:</p>\\n\\n\\n\\n<figure class=\\\"wp-block-image\\\"><img src=\\\"https://lh4.googleusercontent.com/BEUtlPAYI7N_DGWbOdjpli8pdnHcGxU4PH7Mim6rlWQw3I37CxFon3vUik_CdhF8uNLT7EIVdVRGx841914G2yoIdBKnFTmkmetzX78qV4OmJudq_5SoJ3eANf65r03NDldxJkae\\\" alt=\\\"Safari accessibility inspector showing the breadcrumb example\\\"/></figure>\\n\\n\\n\\n<p>Safari&#8217;s inspector reports only a small number of properties for each node: its role, name (which it calls &#8220;label&#8221;), parent, children, ARIA properties, and basic states such as whether the node is disabled or focused. As is shown by the previous image, the accessibility properties for the &lt;div&gt; that wraps the list items include &#8220;Ignored: Yes&#8221;, indicating that Safari, like Chrome, has &#8220;fixed&#8221; the accessibility tree for AT users for this specific example. Before correcting our markup, we can prove this by listening to how VoiceOver reads our page (note that Safari also supports the <code>aria-current</code> attribute added to the second breadcrumb item):</p>\\n\\n\\n\\n<blockquote class=\\\"wp-block-quote\\\"><p>list 3 items<br>1<br>link, Step One<br>2<br>current step, link, Step Two<br>3<br>link, Step Three</p></blockquote>\\n\\n\\n\\n<h2><strong>Conclusion</strong></h2>\\n\\n\\n\\n<p>While there is no substitute for testing our applications with assistive technologies likes <a rel=\\\"noreferrer noopener\\\" href=\\\"https://developer.apple.com/safari/tools/\\\" target=\\\"_blank\\\">NVDA</a> or <a rel=\\\"noreferrer noopener\\\" href=\\\"https://www.apple.com/accessibility/mac/vision/\\\" target=\\\"_blank\\\">VoiceOver</a>, the growing suite of tools available to developers improves the likelihood that our web sites and applications will be inclusive of all users. Currently, Firefox is the only browser that allows the entire accessibility tree to be navigated and viewed in its entirety, although other browsers provide at least some useful information to debug problems encountered when testing with assistive technologies.</p>\\n\\n\\n\\n<p>Do you need help improving the accessibility of your applications? <a rel=\\\"noreferrer noopener\\\" href=\\\"https://www.sitepen.com/contact/\\\" target=\\\"_blank\\\">Contact us</a> to discuss how we can help you improve your applications and provide excellent experiences for all users.</p>\\n\",\"protected\":false},\"excerpt\":{\"rendered\":\"<p>As accessibility-minded developers working on accessibility-minded teams, we strive to design and build inclusive applications that yield a pleasant experience for all users. However, despite our best efforts we may make mistakes and implement features in a sub-optimal way, or worse, discover that some users cannot use those features at all. Fortunately, in recent years [&hellip;]</p>\\n\",\"protected\":false},\"author\":61,\"featured_media\":24260,\"comment_status\":\"closed\",\"ping_status\":\"closed\",\"sticky\":false,\"template\":\"\",\"format\":\"standard\",\"meta\":{\"spay_email\":\"\"},\"categories\":[7],\"tags\":[],\"series\":[],\"jetpack_featured_media_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/05/blog.png\",\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.5 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Accessibility Inspectors: A Basic Guide | SitePen</title>\\n<meta name=\\\"description\\\" content=\\\"Want to maximize consumer accessibility to your app? We share some basic tips and tools for inspecting, evaluating and improving the accessibility in major browsers.\\\" />\\n<meta name=\\\"robots\\\" content=\\\"index, follow\\\" />\\n<meta name=\\\"googlebot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<meta name=\\\"bingbot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<link rel=\\\"canonical\\\" href=\\\"https://wp.sitepen.com/blog/accessibility-inspectors-a-basic-guide/\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Accessibility Inspectors: A Basic Guide | SitePen\\\" />\\n<meta property=\\\"og:description\\\" content=\\\"Want to maximize consumer accessibility to your app? We share some basic tips and tools for inspecting, evaluating and improving the accessibility in major browsers.\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://wp.sitepen.com/blog/accessibility-inspectors-a-basic-guide/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:published_time\\\" content=\\\"2020-05-06T17:10:02+00:00\\\" />\\n<meta property=\\\"article:modified_time\\\" content=\\\"2020-07-08T13:57:08+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/05/blog.png\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1200\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"630\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/blog/accessibility-inspectors-a-basic-guide/#primaryimage\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/05/blog.png\\\",\\\"width\\\":1200,\\\"height\\\":630},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/blog/accessibility-inspectors-a-basic-guide/#webpage\\\",\\\"url\\\":\\\"https://wp.sitepen.com/blog/accessibility-inspectors-a-basic-guide/\\\",\\\"name\\\":\\\"Accessibility Inspectors: A Basic Guide | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"primaryImageOfPage\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/blog/accessibility-inspectors-a-basic-guide/#primaryimage\\\"},\\\"datePublished\\\":\\\"2020-05-06T17:10:02+00:00\\\",\\\"dateModified\\\":\\\"2020-07-08T13:57:08+00:00\\\",\\\"author\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/07946fa5d07c9341828fd0a9b1a8192d\\\"},\\\"description\\\":\\\"Want to maximize consumer accessibility to your app? We share some basic tips and tools for inspecting, evaluating and improving the accessibility in major browsers.\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://wp.sitepen.com/blog/accessibility-inspectors-a-basic-guide/\\\"]}]},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/07946fa5d07c9341828fd0a9b1a8192d\\\",\\\"name\\\":\\\"Matthew Wistrand\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/0118ad1d4f1dbbc656345bd6ab31fdb1?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Matthew Wistrand\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/24246\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/post\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/61\"}],\"replies\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/comments?post=24246\"}],\"version-history\":[{\"count\":13,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/24246/revisions\"}],\"predecessor-version\":[{\"id\":26300,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/24246/revisions/26300\"}],\"wp:featuredmedia\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/24260\"}],\"wp:attachment\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media?parent=24246\"}],\"wp:term\":[{\"taxonomy\":\"category\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/categories?post=24246\"},{\"taxonomy\":\"post_tag\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/tags?post=24246\"},{\"taxonomy\":\"series\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/series?post=24246\"}],\"curies\":[{\"name\":\"wp\",\"href\":\"https://api.w.org/{rel}\",\"templated\":true}]},\"_embedded\":{\"author\":[{\"id\":61,\"name\":\"Matthew Wistrand\",\"url\":\"\",\"description\":\"\",\"link\":\"https://wp.sitepen.com/blog/author/mwistrand/\",\"slug\":\"mwistrand\",\"avatar_urls\":{\"24\":\"https://secure.gravatar.com/avatar/0118ad1d4f1dbbc656345bd6ab31fdb1?s=24&d=mm&r=g\",\"48\":\"https://secure.gravatar.com/avatar/0118ad1d4f1dbbc656345bd6ab31fdb1?s=48&d=mm&r=g\",\"96\":\"https://secure.gravatar.com/avatar/0118ad1d4f1dbbc656345bd6ab31fdb1?s=96&d=mm&r=g\"},\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.5 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Matthew Wistrand, Author at SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"profile\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Matthew Wistrand, Author at SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/author/mwistrand/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://secure.gravatar.com/avatar/0118ad1d4f1dbbc656345bd6ab31fdb1?s=500&#038;d=mm&#038;r=g\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ProfilePage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/mwistrand/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/author/mwistrand/\\\",\\\"name\\\":\\\"Matthew Wistrand, Author at SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/07946fa5d07c9341828fd0a9b1a8192d\\\",\\\"name\\\":\\\"Matthew Wistrand\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/0118ad1d4f1dbbc656345bd6ab31fdb1?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Matthew Wistrand\\\"},\\\"mainEntityOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/mwistrand/#webpage\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/61\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users\"}]}}],\"wp:featuredmedia\":[{\"id\":24260,\"date\":\"2020-05-06T09:40:19\",\"slug\":\"blog-4\",\"type\":\"attachment\",\"link\":\"https://wp.sitepen.com/blog/accessibility-inspectors-a-basic-guide/blog-4/\",\"title\":{\"rendered\":\"blog\"},\"author\":4,\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.5 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>blog | SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"blog | SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/05/blog.png\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/05/blog.png\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1200\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"630\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/05/blog.png#webpage\\\",\\\"url\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/05/blog.png\\\",\\\"name\\\":\\\"blog | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"datePublished\\\":\\\"2020-05-06T16:40:19+00:00\\\",\\\"dateModified\\\":\\\"2020-05-06T16:40:19+00:00\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://wp.sitepen.com/wp-content/uploads/2020/05/blog.png\\\"]}]}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"caption\":{\"rendered\":\"\"},\"alt_text\":\"\",\"media_type\":\"image\",\"mime_type\":\"image/png\",\"media_details\":{\"width\":1200,\"height\":630,\"file\":\"2020/05/blog.png\",\"sizes\":{\"medium\":{\"file\":\"blog-300x158.png\",\"width\":300,\"height\":158,\"mime_type\":\"image/png\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/05/blog-300x158.png\"},\"large\":{\"file\":\"blog-1024x538.png\",\"width\":1024,\"height\":538,\"mime_type\":\"image/png\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/05/blog-1024x538.png\"},\"thumbnail\":{\"file\":\"blog-150x150.png\",\"width\":150,\"height\":150,\"mime_type\":\"image/png\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/05/blog-150x150.png\"},\"medium_large\":{\"file\":\"blog-768x403.png\",\"width\":768,\"height\":403,\"mime_type\":\"image/png\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/05/blog-768x403.png\"},\"full\":{\"file\":\"blog.png\",\"width\":1200,\"height\":630,\"mime_type\":\"image/png\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/05/blog.png\"}},\"image_meta\":{\"aperture\":\"0\",\"credit\":\"\",\"camera\":\"\",\"caption\":\"\",\"created_timestamp\":\"0\",\"copyright\":\"\",\"focal_length\":\"0\",\"iso\":\"0\",\"shutter_speed\":\"0\",\"title\":\"\",\"orientation\":\"0\",\"keywords\":[]}},\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/05/blog.png\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/24260\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/attachment\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/4\"}]}}]}}]","headers":[["access-control-allow-headers","Authorization, Content-Type"],["access-control-expose-headers","X-WP-Total, X-WP-TotalPages"],["allow","GET"],["cf-cache-status","DYNAMIC"],["cf-ray","5b019d979921e684-LHR"],["cf-request-id","03d4e0d2bf0000e6841f9f9200000001"],["connection","close"],["content-encoding","gzip"],["content-type","application/json; charset=UTF-8"],["date","Thu, 09 Jul 2020 11:13:26 GMT"],["expect-ct","max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""],["link","<https://wp.sitepen.com/wp-json/>; rel=\"https://api.w.org/\""],["server","cloudflare"],["set-cookie","__cfduid=d3062108199374a4ba58e703ade4b23121594293205; expires=Sat, 08-Aug-20 11:13:25 GMT; path=/; domain=.sitepen.com; HttpOnly; SameSite=Lax"],["transfer-encoding","chunked"],["vary","Origin"],["x-content-type-options","nosniff"],["x-powered-by","PHP/7.3.16-1+0~20200320.56+debian9~1.gbp370a75"],["x-robots-tag","noindex"],["x-wp-total","1"],["x-wp-totalpages","1"]]},"type":"Object"}