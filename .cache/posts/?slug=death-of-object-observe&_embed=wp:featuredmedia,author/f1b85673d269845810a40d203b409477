{"value":{"body":"[{\"id\":11392,\"date\":\"2015-11-06T09:47:29\",\"date_gmt\":\"2015-11-06T16:47:29\",\"guid\":{\"rendered\":\"https://www.sitepen.com/blog/?p=11392\"},\"modified\":\"2015-11-06T09:47:29\",\"modified_gmt\":\"2015-11-06T16:47:29\",\"slug\":\"death-of-object-observe\",\"status\":\"publish\",\"type\":\"post\",\"link\":\"https://wp.sitepen.com/blog/death-of-object-observe/\",\"title\":{\"rendered\":\"Death of Object.observe()\"},\"content\":{\"rendered\":\"<p><img src=\\\"https://wp.sitepen.com/wp-content/uploads/2015/11/Screen-Shot-2015-11-06-at-8.56.56-AM.png\\\" alt=\\\"flight\\\" /></p>\\n<p>Adam Klien, software engineer at Google, <a href=\\\"https://esdiscuss.org/topic/an-update-on-object-observe\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">announced on ESDiscuss</a> that they were withdrawing the proposal to implement <code>Object.observe</code> and plan to remove it from V8 by the end of the year.</p>\\n<p>While I was never sold on the approach of this API, I assumed long ago it was the API that would be used for data binding to plain old JavaScript objects.  I am also surprised because I was discussing the state of Web Components with a member of TC39 just a few weeks ago.  While I listed all the parts of Web Components that are in V8/Blink but not elsewhere, including <code>Object.observe</code>, they assured me the other browsers would eventually implement the rest of Web Components.  I also missed that Polymer 1.0 abandoned <code>Object.observe</code>.</p>\\n<p><!--more--></p>\\n<p>At SitePen and in the Dojo Community, we did struggle with the limits of the API.  It was essentially too fine grained to be of practical use and required a decent amount of higher order functionality in non-native code to actually deliver what was a generally consumable API.  We had already <a href=\\\"https://github.com/dojo/core/blob/master/src/observers/ObjectObserver.ts\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">delivered a shim for Dojo 2</a> but clearly we will need to rethink our approach.</p>\\n<p>The announcement mentions that React/Flux, which doesn&#8217;t use object mutability as a way of tracking change, has become popular.  I believe that is where a lot of our thinking has been headed for Dojo 2 as well.  Bidirectional data binding against POJOs might make sense if you are building from the ground up, thinking <em>&#8220;what do I need?&#8221;</em>.  However, when you take a step back from things, you realize that it&#8217;s difficult to maintain code and you are left wondering why your application behaves unpredictably.  For example, if you have several widgets acting on the same state and then reflecting that state in their interface, you may end up in an infinite loop.  Because of a system like Flux, where changes only flow in one direction and pass through a dispatcher, it is much easier to manage conflicting state changes.  Also, it promotes encapsulation.  As a software engineer, you only have to understand the part of the code you are working on, versus a complex mesh of run-time dependencies.</p>\\n<p>Also, if you look at <a href=\\\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Proxy\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Proxy</a>, which made it as part of ES6, there is little functional capability that <code>Object.observe</code> delivered that could not be created with <code>Proxy</code>.  In addition, you could solve significantly more problems with <code>Proxy</code> if required.  Basically, a Proxy is a native implementation that lets you inject code between the consumer and the target object.  It can allow you to do anything from controlling, changing, enforcing, modifying, or aggregating stateâ€“not just observe it.</p>\\n<p>I feel that if a Stage 2 proposal that was implemented in a prominent run-time engine that powers Chrome, Node.js and Opera does get pulled, it is a clear indication to the rest of us that we need to be a bit more careful about investing time and effort in adopting something that might not make it as a standard.  It also continues to give credence to the situation that not every bright idea should land in production and that a lot of these ideas need more hardening.  Hopefully it is a sign that TC39 is working, but a more cynical view is that TC39 might not take on big problems to solve, because it requires too much politicking and compromise. For example, instead of a native data binding solution, we get <a href=\\\"https://twitter.com/brendaneich/status/647061523769114625\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">the exponentiation operator</a>.  I don&#8217;t want to take away from those who worked to deliver the exponentiation operator, but it was a relatively &#8220;small&#8221; problem to solve and it still took a lot of politicking and compromise.</p>\\n<p>In the end, I get the feeling that we, the framework and toolkit builders, are left on our own to solve the problem of data binding.  If anything, it reinforces to me that sometimes low-level solutions don&#8217;t always solve the macro problem of building Web Applications.  Also, I think it means we should take a stronger look at unidirectional flow of state for Dojo 2.</p>\\n\",\"protected\":false},\"excerpt\":{\"rendered\":\"<p>Adam Klien, software engineer at Google, announced on ESDiscuss that they were withdrawing the proposal to implement Object.observe and plan to remove it from V8 by the end of the year. While I was never sold on the approach of this API, I assumed long ago it was the API that would be used for [&hellip;]</p>\\n\",\"protected\":false},\"author\":67,\"featured_media\":11462,\"comment_status\":\"closed\",\"ping_status\":\"closed\",\"sticky\":false,\"template\":\"\",\"format\":\"standard\",\"meta\":{\"spay_email\":\"\"},\"categories\":[45,3,29],\"tags\":[384,412,413],\"series\":[],\"jetpack_featured_media_url\":\"\",\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Death of Object.observe() | SitePen</title>\\n<meta name=\\\"description\\\" content=\\\"Adam Klien, software engineer at Google, announced on ESDiscuss that they were withdrawing the proposal to implement Object.observe and plan to remove it from V8 by the end of the year. While I was never sold on the approach of this API, I assumed long ago it was the API that would be used for data binding to plain old J\\\" />\\n<meta name=\\\"robots\\\" content=\\\"index, follow\\\" />\\n<meta name=\\\"googlebot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<meta name=\\\"bingbot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<link rel=\\\"canonical\\\" href=\\\"https://www.sitepen.com/blog/death-of-object-observe/\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Death of Object.observe() | SitePen\\\" />\\n<meta property=\\\"og:description\\\" content=\\\"Adam Klien, software engineer at Google, announced on ESDiscuss that they were withdrawing the proposal to implement Object.observe and plan to remove it from V8 by the end of the year. While I was never sold on the approach of this API, I assumed long ago it was the API that would be used for data binding to plain old J\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/death-of-object-observe/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:published_time\\\" content=\\\"2015-11-06T16:47:29+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1600\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"900\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/death-of-object-observe/#primaryimage\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/death-of-object-observe/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/death-of-object-observe/\\\",\\\"name\\\":\\\"Death of Object.observe() | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"primaryImageOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/death-of-object-observe/#primaryimage\\\"},\\\"datePublished\\\":\\\"2015-11-06T16:47:29+00:00\\\",\\\"dateModified\\\":\\\"2015-11-06T16:47:29+00:00\\\",\\\"author\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/13093841ff1b780913b10a245cc737ee\\\"},\\\"description\\\":\\\"Adam Klien, software engineer at Google, announced on ESDiscuss that they were withdrawing the proposal to implement Object.observe and plan to remove it from V8 by the end of the year. While I was never sold on the approach of this API, I assumed long ago it was the API that would be used for data binding to plain old J\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://www.sitepen.com/blog/death-of-object-observe/\\\"]}]},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/13093841ff1b780913b10a245cc737ee\\\",\\\"name\\\":\\\"Kit Kelly\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Kit Kelly\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/11392\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/post\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/67\"}],\"replies\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/comments?post=11392\"}],\"version-history\":[{\"count\":0,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/11392/revisions\"}],\"wp:featuredmedia\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/11462\"}],\"wp:attachment\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media?parent=11392\"}],\"wp:term\":[{\"taxonomy\":\"category\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/categories?post=11392\"},{\"taxonomy\":\"post_tag\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/tags?post=11392\"},{\"taxonomy\":\"series\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/series?post=11392\"}],\"curies\":[{\"name\":\"wp\",\"href\":\"https://api.w.org/{rel}\",\"templated\":true}]},\"_embedded\":{\"author\":[{\"id\":67,\"name\":\"Kit Kelly\",\"url\":\"\",\"description\":\"\",\"link\":\"https://wp.sitepen.com/blog/author/kkelly/\",\"slug\":\"kkelly\",\"avatar_urls\":{\"24\":\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=24&d=mm&r=g\",\"48\":\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=48&d=mm&r=g\",\"96\":\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=96&d=mm&r=g\"},\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Kit Kelly, Author at SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"profile\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Kit Kelly, Author at SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/author/kkelly/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=500&#038;d=mm&#038;r=g\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ProfilePage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/kkelly/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/author/kkelly/\\\",\\\"name\\\":\\\"Kit Kelly, Author at SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/13093841ff1b780913b10a245cc737ee\\\",\\\"name\\\":\\\"Kit Kelly\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Kit Kelly\\\"},\\\"mainEntityOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/kkelly/#webpage\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/67\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users\"}]}}],\"wp:featuredmedia\":[{\"code\":\"rest_post_invalid_id\",\"message\":\"Invalid post ID.\",\"data\":{\"status\":404}}]}}]","headers":[["access-control-allow-headers","Authorization, Content-Type"],["access-control-expose-headers","X-WP-Total, X-WP-TotalPages"],["allow","GET"],["cache-control","max-age=2592000"],["connection","close"],["content-type","application/json; charset=UTF-8"],["date","Mon, 10 Aug 2020 15:31:09 GMT"],["expires","Wed, 09 Sep 2020 15:31:09 GMT"],["link","<https://wp.sitepen.com/wp-json/>; rel=\"https://api.w.org/\""],["server","Apache"],["transfer-encoding","chunked"],["vary","Origin"],["x-content-type-options","nosniff"],["x-powered-by","PHP/7.3.21-1+0~20200807.66+debian9~1.gbp18a1c2"],["x-robots-tag","noindex"],["x-wp-total","1"],["x-wp-totalpages","1"]]},"type":"Object"}