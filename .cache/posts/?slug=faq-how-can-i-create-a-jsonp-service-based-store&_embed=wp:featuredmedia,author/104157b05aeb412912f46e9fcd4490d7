{"value":{"body":"[{\"id\":8749,\"date\":\"2014-07-09T11:16:08\",\"date_gmt\":\"2014-07-09T18:16:08\",\"guid\":{\"rendered\":\"https://www.sitepen.com/blog/?p=8749\"},\"modified\":\"2014-07-09T11:16:08\",\"modified_gmt\":\"2014-07-09T18:16:08\",\"slug\":\"faq-how-can-i-create-a-jsonp-service-based-store\",\"status\":\"publish\",\"type\":\"post\",\"link\":\"https://wp.sitepen.com/blog/faq-how-can-i-create-a-jsonp-service-based-store/\",\"title\":{\"rendered\":\"FAQ: How can I create a JSONP service-based store?\"},\"content\":{\"rendered\":\"<p><img style=\\\"margin: 20px 0 20px 20px; float: right;\\\" alt=\\\"DojoFAQ\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2013/09/DojoFAQ.png\\\" width=\\\"200\\\" height=\\\"200\\\" /></p>\\n<p>Dojo&#8217;s <a href=\\\"http://dojotoolkit.org/reference-guide/dojo/store.html\\\">store API</a> is a common interface for providing data to user interface widgets, such as <a href=\\\"http://dgrid.io/\\\">dgrid</a>, <a href=\\\"http://dojotoolkit.org/reference-guide/dijit/form/Select.html\\\">Dijit Select</a>, and <a href=\\\"http://dojotoolkit.org/reference-guide/dojox/charting.html#using-dojo-store-and-dojo-data-data-sources-with-charts\\\">Dojo Charting</a>. The beauty of having a consistent API is that once you&#8217;ve defined an interface for a data source, that data becomes easily available to all widgets that support the store API. We&#8217;re going to look at how you can create a basic, read-only <code>dojo/store</code> API-compliant module for accessing GitHub&#8217;s API (specifically, <a href=\\\"https://developer.github.com/v3/issues/\\\">GitHub issues</a>), an example of implementing your own Dojo store.</p>\\n<p><!--more--></p>\\n<h2>Implementing basic store methods</h2>\\n<p>For starters, we don&#8217;t have to implement all store methods &#8211; each method is optional. For a read-only store the most important methods are <code>get</code> and <code>query</code>. These methods enable basic read access to the data: <code>get</code> to retrieve an item by its id, and <code>query</code> to retrieve a set of items that match user-specified criteria. Let&#8217;s start with the basic framework and the <code>get</code> method.</p>\\n<ul>\\n<li>GitHub&#8217;s API URL: https://api.github.com/</li>\\n<li>The API URL for dgrid issues: https://api.github.com/repos/SitePen/dgrid/issues</li>\\n<li>The identity property for a GitHub issue: each issue has an &#8220;id&#8221; property, but they also have a &#8220;number&#8221; property &#8211; the number is the value displayed in the GitHub UI, and the value that must be provided to the API when requesting a specific issue, so we will use the &#8220;number&#8221; property as the <code>idProperty</code> in our store</li>\\n<li>Dojo&#8217;s <a href=\\\"http://dojotoolkit.org/reference-guide/dojo/request/script.html\\\"><code>dojo/request/script</code></a> module provides a convenient API for JSONP requests</li>\\n</ul>\\n<p>With this information we can begin our implementation:</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\ndefine([\\n\\t'dojo/_base/declare',\\n\\t'dojo/_base/lang',\\n\\t'dojo/request/script',\\n\\t'dojo/store/util/QueryResults'\\n], function (declare, lang, request, QueryResults) {\\n\\treturn declare(null, {\\n\\t\\ttarget: '',\\n\\t\\tidProperty: 'number',\\n\\n\\t\\tconstructor: function (options) {\\n\\t\\t\\tlang.mixin(this, options);\\n\\t\\t},\\n\\n\\t\\tget: function (id) {\\n\\t\\t\\treturn request(this.target + '/' + id, {\\n\\t\\t\\t\\tjsonp: 'callback'\\n\\t\\t\\t}).then(function (result) {\\n\\t\\t\\t\\t// The information we want is on the 'data'\\n\\t\\t\\t\\t// property of the returned results\\n\\t\\t\\t\\treturn result.data;\\n\\t\\t\\t});\\n\\t\\t}\\n\\t});\\n});\\n</pre>\\n<p>This short module is enough to begin making GitHub API requests using the Dojo store API:</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\nvar dgridIssueStore = new GitHubStore({\\n\\ttarget: 'https://api.github.com/repos/SitePen/dgrid/issues'\\n});\\n\\n// Get the JSON data for issue 840\\ndgridIssueStore.get(840);\\n</pre>\\n<h2>What&#8217;s a store without a <code>query</code> method?</h2>\\n<p>The ability to query a store is very important, so we have more to do. A basic query method can be implemented very simply:</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\nquery: function (query, queryOptions) {\\n\\tvar resultPromise = request(this.target, {\\n\\t\\tquery: query,\\n\\t\\tjsonp: 'callback'\\n\\t}).then(function (result) {\\n\\t\\t// The information we want is on the 'data'\\n\\t\\t// property of the returned results\\n\\t\\treturn result.data;\\n\\t});\\n\\n\\t// QueryResults will add the 'total' property\\n\\t// as well as iteration methods\\n\\treturn QueryResults(resultPromise);\\n}\\n</pre>\\n<p>Let&#8217;s examine how this works:</p>\\n<ul>\\n<li>Line 2: Make the JSONP request, adding any query options to the query string of the request URL (<a href=\\\"https://developer.github.com/v3/issues/#parameters-1\\\">valid options for GitHub issues</a>)</li>\\n<li>Line 5: The data value returned should be an array of data, but the GitHub API provides an object with the array stored in the object&#8217;s <code>data</code> property, so we have to return a promise that resolves to the array in the <code>data</code> property (line 8).</li>\\n<li>Line 13: The <code>dojo/store</code> API requires that the object returned by the <code>query</code> method have iteration methods (<code>forEach, filter, map</code>) and a <code>total</code> property. The <a href=\\\"http://dojotoolkit.org/reference-guide/dojo/store/util/QueryResults.html\\\"><code>dojo/store/util/QueryResults</code></a> module is a utility module to add these.</li>\\n</ul>\\n<p>Let&#8217;s implement the <code>getIdentity</code> method to have a fairly robust read-only store:</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\ngetIdentity: function (object) {\\n\\treturn object[this.idProperty];\\n}\\n</pre>\\n<p>That&#8217;s it! This store is ready to query GitHub and provide data for a store-backed user interface widget. Here is the store in action with dgrid to render the data:<br />\\n<iframe width=\\\"100%\\\" height=\\\"420\\\" src=\\\"https://jsfiddle.net/8kHBD/1/embedded/result,js\\\" allowfullscreen=\\\"allowfullscreen\\\" frameborder=\\\"0\\\"></p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\nrequire({\\n    baseUrl: 'http://ajax.googleapis.com/ajax/libs/dojo/1.9.3/',\\n    packages: [{\\n        name: 'dojo',\\n        location: 'dojo'\\n    }, {\\n        name: 'dgrid',\\n        location: 'http://dojofoundation.org/packages/dgrid/js/dgrid'\\n    }, {\\n        name: 'put-selector',\\n        location: 'http://dojofoundation.org/packages/dgrid/js/put-selector'\\n    }, {\\n        name: 'xstyle',\\n        location: 'http://dojofoundation.org/packages/dgrid/js/xstyle'\\n    }]\\n}, [\\n\\t'dojo/_base/declare',\\n\\t'dojo/_base/lang',\\n\\t'dojo/request/script',\\n\\t'dojo/store/util/QueryResults',\\n    'dgrid/OnDemandGrid'\\n], function (declare, lang, request, QueryResults, OnDemandGrid) {\\n\\tvar GitHubStore = declare(null, {\\n\\t\\ttarget: '',\\n\\t\\tidProperty: 'number',\\n\\n\\t\\tconstructor: function (options) {\\n\\t\\t\\tlang.mixin(this, options);\\n\\t\\t},\\n\\n\\t\\tget: function (id) {\\n\\t\\t\\treturn request(this.target + '/' + id, {\\n\\t\\t\\t\\tjsonp: 'callback'\\n            }).then(function (result) {\\n                // The information we want is on the 'data' property of the returned results\\n                return result.data;\\n            });\\n\\t\\t},\\n\\n        getIdentity: function (object) {\\n            return object[this.idProperty];\\n        },\\n\\n        query: function (query, queryOptions) {\\n            var resultPromise = request(this.target, {\\n                query: query,\\n                jsonp: 'callback'\\n            }).then(function (result) {\\n                // The information we want is on the 'data' property of the returned results\\n                return result.data;\\n            });\\n\\n            // QueryResults will add the 'total' property as well as iteration methods\\n            return QueryResults(resultPromise);\\n        }\\n\\t});\\n\\n    var store = new GitHubStore({\\n        target: 'https://api.github.com/repos/SitePen/dgrid/issues'\\n    });\\n\\n    var grid = new OnDemandGrid({\\n        store: store,\\n        columns: {\\n            user: {\\n                label: 'Opened by',\\n                get: function (rowObject) {\\n                    return rowObject.user.login;\\n                },\\n                sortable: false\\n            },\\n            title: {\\n                label: 'Title',\\n                sortable: false\\n            },\\n            number: {\\n                label: 'Number',\\n                formatter: function (number) {\\n                    return '&lt;a href=&quot;https://github.com/SitePen/dgrid/issues/' + number + '&quot;&gt;' + number + '&lt;/a&gt;';\\n                },\\n                sortable: false\\n            }\\n        },\\n        // Unauthenticated GitHub API requests are rate limited to 60/hr\\n        noDataMessage: 'GitHub API request rate exceeded - please try later'\\n    }, 'grid');\\n});\\n</pre>\\n<p></iframe></p>\\n<h2>Production-ready stores</h2>\\n<p>While the store API at its core is pretty simple, the data service API can complicate things, and in this case it does. GitHub&#8217;s API does not quite allow arbitrary <a href=\\\"https://developer.github.com/guides/traversing-with-pagination/\\\">page sizes</a>, which is part of why we have omitted support for <code>queryOptions</code> (which allows specification of sort, start, and count options) in the <code>query</code> method. You might also want to implement <a href=\\\"https://developer.github.com/v3/#authentication\\\">authentication</a>. Server-backed stores are generally dependent on the server for correct paging, sorting, and querying. For GitHub <a href=\\\"https://developer.github.com/v3/issues/#parameters-1\\\">these query options</a> are available. If the data set is small enough, you can load it all client-side and forego your own store implementation &#8211; just use <a href=\\\"http://dojotoolkit.org/reference-guide/dojo/store/Memory.html\\\"><code>dojo/store/Memory</code></a>.</p>\\n<h2>Learning more</h2>\\n<p>We cover <code>dojo/store</code>, dgrid, <code>dojo/request</code>, advanced store creation, and more in depth in our <a href=\\\"https://www.sitepen.com/services/\\\">Dojo workshops</a> offered throughout the US, Canada, and Europe, or at your location. We also provide expert <a href=\\\"https://www.sitepen.com/services/\\\">JavaScript and Dojo support</a> and <a href=\\\"https://www.sitepen.com/services/\\\">development</a> services, to help you get the most from JavaScript and Dojo.</p>\\n\",\"protected\":false},\"excerpt\":{\"rendered\":\"<p>Dojo&#8217;s store API is a common interface for providing data to user interface widgets, such as dgrid, Dijit Select, and Dojo Charting. The beauty of having a consistent API is that once you&#8217;ve defined an interface for a data source, that data becomes easily available to all widgets that support the store API. We&#8217;re going [&hellip;]</p>\\n\",\"protected\":false},\"author\":43,\"featured_media\":17907,\"comment_status\":\"closed\",\"ping_status\":\"closed\",\"sticky\":false,\"template\":\"\",\"format\":\"standard\",\"meta\":{\"spay_email\":\"\"},\"categories\":[46,350,45,380],\"tags\":[],\"series\":[],\"jetpack_featured_media_url\":\"\",\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.5 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>FAQ: How can I create a JSONP service-based store? | SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"index, follow\\\" />\\n<meta name=\\\"googlebot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<meta name=\\\"bingbot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<link rel=\\\"canonical\\\" href=\\\"https://www.sitepen.com/blog/faq-how-can-i-create-a-jsonp-service-based-store/\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"FAQ: How can I create a JSONP service-based store? | SitePen\\\" />\\n<meta property=\\\"og:description\\\" content=\\\"Dojo&#8217;s store API is a common interface for providing data to user interface widgets, such as dgrid, Dijit Select, and Dojo Charting. The beauty of having a consistent API is that once you&#8217;ve defined an interface for a data source, that data becomes easily available to all widgets that support the store API. We&#8217;re going [&hellip;]\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/faq-how-can-i-create-a-jsonp-service-based-store/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:published_time\\\" content=\\\"2014-07-09T18:16:08+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1600\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"900\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/faq-how-can-i-create-a-jsonp-service-based-store/#primaryimage\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/faq-how-can-i-create-a-jsonp-service-based-store/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/faq-how-can-i-create-a-jsonp-service-based-store/\\\",\\\"name\\\":\\\"FAQ: How can I create a JSONP service-based store? | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"primaryImageOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/faq-how-can-i-create-a-jsonp-service-based-store/#primaryimage\\\"},\\\"datePublished\\\":\\\"2014-07-09T18:16:08+00:00\\\",\\\"dateModified\\\":\\\"2014-07-09T18:16:08+00:00\\\",\\\"author\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/d26d1a7b34bba79757f0b73269ffb051\\\"},\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://www.sitepen.com/blog/faq-how-can-i-create-a-jsonp-service-based-store/\\\"]}]},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/d26d1a7b34bba79757f0b73269ffb051\\\",\\\"name\\\":\\\"Mangala SSS Khalsa\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/f70b4a426631ceef7247191be7e30be4?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Mangala SSS Khalsa\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/8749\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/post\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/43\"}],\"replies\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/comments?post=8749\"}],\"version-history\":[{\"count\":0,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/8749/revisions\"}],\"wp:featuredmedia\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/17907\"}],\"wp:attachment\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media?parent=8749\"}],\"wp:term\":[{\"taxonomy\":\"category\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/categories?post=8749\"},{\"taxonomy\":\"post_tag\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/tags?post=8749\"},{\"taxonomy\":\"series\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/series?post=8749\"}],\"curies\":[{\"name\":\"wp\",\"href\":\"https://api.w.org/{rel}\",\"templated\":true}]},\"_embedded\":{\"author\":[{\"id\":43,\"name\":\"Mangala SSS Khalsa\",\"url\":\"https://www.sitepen.com\",\"description\":\"\",\"link\":\"https://wp.sitepen.com/blog/author/mkhalsa/\",\"slug\":\"mkhalsa\",\"avatar_urls\":{\"24\":\"https://secure.gravatar.com/avatar/f70b4a426631ceef7247191be7e30be4?s=24&d=mm&r=g\",\"48\":\"https://secure.gravatar.com/avatar/f70b4a426631ceef7247191be7e30be4?s=48&d=mm&r=g\",\"96\":\"https://secure.gravatar.com/avatar/f70b4a426631ceef7247191be7e30be4?s=96&d=mm&r=g\"},\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.5 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Mangala SSS Khalsa, Author at SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"profile\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Mangala SSS Khalsa, Author at SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/author/mkhalsa/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://secure.gravatar.com/avatar/f70b4a426631ceef7247191be7e30be4?s=500&#038;d=mm&#038;r=g\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ProfilePage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/mkhalsa/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/author/mkhalsa/\\\",\\\"name\\\":\\\"Mangala SSS Khalsa, Author at SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/d26d1a7b34bba79757f0b73269ffb051\\\",\\\"name\\\":\\\"Mangala SSS Khalsa\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/f70b4a426631ceef7247191be7e30be4?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Mangala SSS Khalsa\\\"},\\\"mainEntityOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/mkhalsa/#webpage\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/43\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users\"}]}}],\"wp:featuredmedia\":[{\"code\":\"rest_post_invalid_id\",\"message\":\"Invalid post ID.\",\"data\":{\"status\":404}}]}}]","headers":[["access-control-allow-headers","Authorization, Content-Type"],["access-control-expose-headers","X-WP-Total, X-WP-TotalPages"],["allow","GET"],["cf-cache-status","DYNAMIC"],["cf-ray","5b019a279fb60639-LHR"],["cf-request-id","03d4deacba000006396fadf200000001"],["connection","close"],["content-encoding","gzip"],["content-type","application/json; charset=UTF-8"],["date","Thu, 09 Jul 2020 11:11:05 GMT"],["expect-ct","max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""],["link","<https://wp.sitepen.com/wp-json/>; rel=\"https://api.w.org/\""],["server","cloudflare"],["set-cookie","__cfduid=d8d23234671b9250325723a2f845ba5221594293064; expires=Sat, 08-Aug-20 11:11:04 GMT; path=/; domain=.sitepen.com; HttpOnly; SameSite=Lax"],["transfer-encoding","chunked"],["vary","Origin"],["x-content-type-options","nosniff"],["x-powered-by","PHP/7.3.16-1+0~20200320.56+debian9~1.gbp370a75"],["x-robots-tag","noindex"],["x-wp-total","1"],["x-wp-totalpages","1"]]},"type":"Object"}