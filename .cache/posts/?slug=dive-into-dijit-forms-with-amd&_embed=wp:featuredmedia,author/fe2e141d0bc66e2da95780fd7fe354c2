{"value":{"body":"[{\"id\":5843,\"date\":\"2012-11-16T02:01:52\",\"date_gmt\":\"2012-11-16T09:01:52\",\"guid\":{\"rendered\":\"https://www.sitepen.com/blog/?p=5843\"},\"modified\":\"2020-08-25T05:21:17\",\"modified_gmt\":\"2020-08-25T12:21:17\",\"slug\":\"dive-into-dijit-forms-with-amd\",\"status\":\"publish\",\"type\":\"post\",\"link\":\"https://wp.sitepen.com/blog/dive-into-dijit-forms-with-amd/\",\"title\":{\"rendered\":\"Dive Into Dijit Forms with AMD\"},\"content\":{\"rendered\":\"<p><img src=\\\"https://wp.sitepen.com/wp-content/uploads/2010/08/Form1.png\\\" style=\\\"display:block;margin:0 0 20px 20px;float:right;\\\" /></p>\\n<p>As was illustrated with our <a href=\\\"https://www.sitepen.com/blog/2010/07/12/dive-into-dijit-with-amd/\\\">Dive Into Dijit with AMD</a> post, the Dijit library provides an extremely powerful, flexible set of Dojo-based widgets with which you may easily enhance the look and functionality of your web application.  These widgets include drop down / popup menus, dialogs, page layouts, trees, progress bars, and form elements.  When looking at these elements, it&#8217;s easy to see that Dijit enhances their presentation, but this post will focus on enhancing functionality;  specifically, enhancing a basic form with usability improvements and validation.</p>\\n<p><!--more--></p>\\n<h2>Quick Dijit Implementation Review</h2>\\n<p>The first step in introducing Dijit to any page is including Dojo:</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\r\\n&lt;script src=&quot;http://ajax.googleapis.com/ajax/libs/dojo/1.8/dojo/dojo.js&quot; \\r\\n\\tdojoConfig=&quot;isDebug:false,async:true&quot;&gt;&lt;/script&gt;\\r\\n</pre>\\n<p>The next step is requesting the Dijit theme stylesheet:</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\r\\n&lt;style type=&quot;text/css&quot;&gt;\\r\\n\\t@import &quot;http://ajax.googleapis.com/ajax/libs/dojo/1.8/dojo/resources/dojo.css&quot;;\\r\\n\\t@import &quot;http://ajax.googleapis.com/ajax/libs/dojo/1.8/dijit/themes/claro/claro.css&quot;;\\r\\n\\t@import &quot;http://ajax.googleapis.com/ajax/libs/dojo/1.8/dojox/form/resources/CheckedMultiSelect.css&quot;;\\r\\n&lt;/style&gt;\\r\\n</pre>\\n<p>The last step is adding the theme name as a class for the <code>body</code> element:</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\r\\n&lt;body class=&quot;claro&quot;&gt;\\r\\n</pre>\\n<h2>Enhancing Basic Form Elements</h2>\\n<p><em>Note:  this tutorial will use the declarative method of widget creation.  You may create any Dijit widget programatically using <code>dojo/behavior</code> as described in <a href=\\\"https://www.sitepen.com/blog/2010/07/12/dive-into-dijit-with-amd/\\\">Dive Into Dijit with AMD</a>.</em></p>\\n<p>The first step in enhancing our static form is enhancing the form elements themselves.  Dijit provides a corresponding widget (sometimes two or three) for the different types of form elements.  Using the declarative method of Dijit widget creation and the <code>data-dojo-type</code> attribute, we&#8217;ll quickly widget-ize every piece of our static form:</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\r\\n&lt;form action=&quot;process.php&quot; method=&quot;get&quot;&gt;\\r\\n&lt;!-- text inputs:  dijit/form/TextBox --&gt;\\r\\n&lt;strong&gt;First Name: &lt;/strong&gt;\\r\\n&lt;input type=&quot;text&quot; name=&quot;firstName&quot; placeholder=&quot;Your Name&quot; id=&quot;firstName&quot;\\r\\n\\tdata-dojo-type=&quot;dijit/form/TextBox&quot; /&gt;\\r\\n\\r\\n&lt;strong&gt;Website:  &lt;/strong&gt;\\r\\n&lt;input type=&quot;text&quot; name=&quot;website&quot; placeholder=&quot;Your Website&quot; id=&quot;website&quot;\\r\\n\\tdata-dojo-type=&quot;dijit/form/TextBox&quot; /&gt;\\r\\n\\r\\n&lt;!-- radio buttons:  dijit/form/FilteringSelect --&gt;\\r\\n&lt;strong&gt;Favorite Color: &lt;/strong&gt;\\r\\n&lt;select name=&quot;color&quot; id=&quot;color&quot; data-dojo-type=&quot;dijit/form/FilteringSelect&quot;&gt;\\r\\n\\t&lt;option value=&quot;&quot;&gt;Select a Color&lt;/option&gt;\\r\\n\\t&lt;option value=&quot;Red&quot;&gt;Red&lt;/option&gt;\\r\\n\\t&lt;option value=&quot;Green&quot;&gt;Green&lt;/option&gt;\\r\\n\\t&lt;option value=&quot;Blue&quot;&gt;Blue&lt;/option&gt;\\r\\n&lt;/select&gt;\\r\\n\\r\\n&lt;!-- radio buttons:  dijit/form/CheckBox --&gt;\\r\\n&lt;strong&gt;Send Emails? &lt;/strong&gt;\\r\\n&lt;input type=&quot;checkbox&quot; id=&quot;checkbox&quot; checked=&quot;checked&quot;\\r\\n\\tdata-dojo-type=&quot;dijit/form/CheckBox&quot; /&gt;\\r\\n\\r\\n&lt;!-- radio buttons:  dijit/form/RadioButton --&gt;\\r\\n&lt;strong&gt;Email Format: &lt;/strong&gt;\\r\\n&lt;input type=&quot;radio&quot; id=&quot;radio1&quot; name=&quot;format&quot; checked=&quot;checked&quot;\\r\\n\\tdata-dojo-type=&quot;dijit/form/RadioButton&quot; /&gt; \\r\\n&lt;label for=&quot;radio1&quot;&gt;HTML&lt;/label&gt;\\r\\n&amp;nbsp;&amp;nbsp;&amp;nbsp;\\r\\n&lt;input type=&quot;radio&quot; id=&quot;radio2&quot; name=&quot;format&quot;\\r\\n\\tdata-dojo-type=&quot;dijit/form/RadioButton&quot; /&gt;\\r\\n&lt;label for=&quot;radio2&quot;&gt;Text&lt;/label&gt;\\r\\n\\r\\n&lt;!-- submit button:  dijit/form/Button --&gt;\\r\\n&lt;input type=&quot;submit&quot; value=&quot;Submit Form&quot; label=&quot;Submit Form&quot; id=&quot;submitButton&quot;\\r\\n\\tdata-dojo-type=&quot;dijit/form/Button&quot; /&gt;\\r\\n&lt;/form&gt;\\r\\n</pre>\\n<p>Our static, previously boring form elements have been themed and extended with extra functionality.  A few notes with regard to widgets we created above:</p>\\n<ul>\\n<li>The <code>FilteringSelect</code> widget duplicates the functionality of a native <code>select</code> element by:\\n<ul>\\n<li>Setting an initial value based on one of its options having a selected attribute.</li>\\n<li>Enforcing a fixed set of possible results based upon the values and text of each <code>option</code> element.</li>\\n<li>Providing keyboard accessibility</li>\\n</ul>\\n</li>\\n<li>\\n\\t\\tThe <code>FilteringSelect</code> widget adds the following functionality to the basic <code>select</code> element:</p>\\n<ul>\\n<li>You may type values into the <code>FilteringSelect</code>; autocomplete is employed.</li>\\n<li>If an invalid value is provided, an error message is provided to the user.</li>\\n<li>You get more control over the display when the widget is disabled.</li>\\n</ul>\\n</li>\\n<li>The HTML5 <code>placeholder</code> attribute within the <code>input</code> elements are parsed by Dijit to provide this functionality cross-browser.</li>\\n</ul>\\n<p>Now that the basic form has been widget-ized and themed, we can add basic validation functionality.</p>\\n<h2>Form Validation with Dojo</h2>\\n<p>As with just about every client-side problem, Dojo&#8217;s got a great solution for form validation. Luckily there are only a few key components required for basic form validation.</p>\\n<h3>dijit/form/ValidationTextBox</h3>\\n<p>A precursor to the overall validation of a form is deciding which elements are required.  Say we want to require the <code>first</code> field;  the <code>data-dojo-type</code> of that will will change from <code>dijit/form/TextBox</code> to <code>dijit/form/ValidationTextBox</code>:</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\r\\n&lt;input data-dojo-type=&quot;dijit/form/ValidationTextBox&quot; required=&quot;true&quot;\\r\\n\\ttype=&quot;text&quot; name=&quot;firstName&quot; id=&quot;firstName&quot; placeholder=&quot;Your Name&quot;\\r\\n\\tdata-dojo-props='missingMessage:&quot;Ooops! You forgot your first name!&quot;' /&gt;\\r\\n</pre>\\n<p>Since <code>required=\\\"true\\\"</code> has been added to the widget, an error icon and tooltip (with error message) will display if the user fails to place text into the box.  A custom error message can be placed within the <code>missingMessage</code> attribute, otherwise a generic message will display.</p>\\n<p>What if the field requires special validation of the pattern of input?  That&#8217;s where the HTML5 <code>pattern</code> attribute comes in:</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\r\\n&lt;input data-dojo-type=&quot;dijit/form/ValidationTextBox&quot; required=&quot;true&quot;\\r\\n\\tpattern=&quot;(https?|ftp)://[A-Za-z0-9-_]+\\\\.[A-Za-z0-9-_%&amp;\\\\?\\\\/\\\\.=]+&quot;\\r\\n\\tname=&quot;website&quot; placeholder=&quot;Your Website&quot; id=&quot;website&quot; type=&quot;text&quot; /&gt;\\r\\n</pre>\\n<p>Not only is the <code>website</code> field now required but the value of the field must pass the regular expression test provided by the <code>pattern</code> attribute.</p>\\n<h3>Validation Utilities with dojox/validate</h3>\\n<p>\\nThe <code>dojox/validate</code> library includes numerous utility functions and regular expressions for validating form element values. These utility functions can validate email addresses, URLs, phone numbers, zip codes, and much more.  An example usage of <code>dojox/validate</code> with a <code>ValidationTextBox</code> would look like:\\n</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\r\\n&lt;script type=&quot;text/javascript&quot;&gt;\\r\\n\\trequire([&quot;dojox/validate&quot;, &quot;dojox/validate/web&quot;]);\\r\\n&lt;/script&gt;\\r\\n\\r\\n&lt;strong&gt;Email:&lt;/strong&gt;\\r\\n&lt;input type=&quot;text&quot; required=&quot;true&quot; name=&quot;email&quot; id=&quot;email&quot;\\r\\n\\tdata-dojo-type=&quot;dijit/form/ValidationTextBox&quot;\\r\\n\\tdata-dojo-props='validator:dojox.validate.isEmailAddress' /&gt;\\r\\n</pre>\\n<p>The <code>validator</code> attribute is a link to the validation function for emails. <code>dojox/validate</code> is especially helpful if you don&#8217;t feel comfortable with regular expressions.  There are also locale-specific packages within <code>dojox/validate</code>.  The API docs provide a <a href=\\\"http://dojotoolkit.org/api/1.8/dojox/validate.html\\\">complete listing of <code>dojox/validate</code> helpers</a>.</p>\\n<h3>Attributes</h3>\\n<p>You may by now have noticed that some attributes are used directly on the element and some are used within <code>data-dojo-props</code>. The rule is quite simple: if it is a valid HTML5 attribute, it can be used directly on the element. If it is a proprietary Dijit attribute, it <em>should</em> be placed within <code>data-dojo-props</code>. I say <em>should</em>, because proprietary Dijit attributes can still be placed directly on an element, but the page will not pass an <a href=\\\"http://validator.w3.org/\\\">HTML5 validator</a>. </p>\\n<p>Speaking of validators, there was a special case with:</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\r\\ndata-dojo-props='validator:dojox.validate.isEmailAddress'\\r\\n</pre>\\n<p>Some functionality in DojoX is not completely AMD compliant in the way its module identifiers are provided via markup, such as accessing the <code>isEmailAddress</code> function in <code>dojox/validate</code> within markup. Programmatically it works fine with AMD, but in markup there is currently not a way to access it as a non-global, which also explains the dot syntax, and the fact that <code>dojox.validate.isEmailAddress</code> is not treated as a string.</p>\\n<h3>dijit/form/Form with the <code>onSubmit</code> Event</h3>\\n<p>Now that our required fields are in place, we&#8217;ll enhance the wrapping <code>form</code> element with <code>data-dojo-type=\\\"dijit/form/Form\\\"</code>:</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\r\\n&lt;form data-dojo-type=&quot;dijit/form/Form&quot; action=&quot;process.php&quot; method=&quot;get&quot;&gt;\\r\\n&lt;script type=&quot;dojo/method&quot; event=&quot;onSubmit&quot;&gt;\\r\\n&lt;!--\\r\\nif (this.validate()) {\\r\\n\\talert('Form is valid, submitting!');\\r\\n} else {\\r\\n\\talert('Form contains invalid.  Please complete all required fields.');\\r\\n\\treturn false;\\r\\n}\\r\\nreturn true;\\r\\n--&gt;\\r\\n&lt;/script&gt;\\r\\n&lt;!-- form fields here --&gt;\\r\\n&lt;/form&gt;\\r\\n</pre>\\n<p>Accompanying the <code>dijit/form/Form</code> is a special <code>script</code> element.  Within this Dojo-specific script is a <code>this.validate()</code> test, acting on the <code>dijit/form/Form</code> instance, which validates the entire form based on <code>require=\\\"true\\\"</code> inputs. You could also add your own custom validation within the code block as well.</p>\\n<h2>The dijit.form Collection</h2>\\n<p>I&#8217;ve only touched the most-used Dijit widgets within my example above.  There are several more outstanding form widgets within Dijit; let&#8217;s take a look at a few other helpful widgets!\\n</p>\\n<h3>DateTextBox</h3>\\n<p><img src=\\\"https://wp.sitepen.com/wp-content/uploads/2010/08/Form5.png\\\" style=\\\"display:block;margin:0 0 20px 20px;float:right;\\\" /></p>\\n<p>Asking the user to format a date properly can be a nightmare, especially if other form fields within the page rely on the contents of a given date field.  Dijit provides a <code>dijit/form/DateTextBox</code> class which displays a user-friendly calendar widget for users to select a date on.</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\r\\n&lt;!-- when the user focuses on this element, the calendar appears --&gt;\\r\\n&lt;input data-dojo-type=&quot;dijit/form/DateTextBox&quot; required=&quot;true&quot;\\r\\n\\tdata-dojo-props='missingMessage:&quot;Please provide a valid date.&quot;' type=&quot;text&quot;\\r\\n\\tname=&quot;date&quot; id=&quot;date&quot; /&gt;\\r\\n</pre>\\n<h3>CurrencyTextBox</h3>\\n<p>The <code>dijit/form/CurrencyTextBox</code> class helps the user to properly format and validate currency per a given locale.</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\r\\n&lt;!-- {fractional:true} means you must provide cents --&gt;\\r\\n&lt;input data-dojo-type=&quot;dijit/form/CurrencyTextBox&quot; required=&quot;true&quot;\\r\\n\\ttype=&quot;text&quot; constraints=&quot;{fractional:true}&quot; currency=&quot;USD&quot;\\r\\n\\tdata-dojo-props='missingMessage:&quot;Please provide both dollars and cents.&quot;'\\r\\n\\tname=&quot;weekly_wages&quot; id=&quot;weekly_wages&quot; value=&quot;2000&quot; /&gt;\\r\\n</pre>\\n<h3>Textarea</h3>\\n<p>The <code>dojox/form/Textarea</code> class enhances a given <code>textarea</code> element so that the element grows in height as the user types.</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\r\\n&lt;textarea data-dojo-type=&quot;dijit/form/Textarea&quot; name=&quot;comments&quot;&gt;&lt;/textarea&gt;\\r\\n</pre>\\n<h2>Enhancing Basic Dijit Widgets with DojoX Alternatives</h2>\\n<p><img src=\\\"https://wp.sitepen.com/wp-content/uploads/2010/08/Form2.png\\\" style=\\\"display:block;margin:0 0 20px 20px;float:right;\\\" /></p>\\n<p>As nice as many of the Dijit widgets are, DojoX hosts numerous enhanced widgets that solve problems that many basic widgets cannot. The following are a few notable DojoX form widgets.</p>\\n<h3>BusyButton</h3>\\n<p><code>dijit/form/Button</code> works great but what if I want to disable the button (to avoid double submissions) and provide a feedback message (i.e. &#8220;Sending form&#8230;.&#8221;) when clicked? We could use <code>dojox.form.BusyButton</code> to do just that:\\n</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\r\\n&lt;!-- assuming dojox/form/BusyButton has been required... --&gt;\\r\\n&lt;input id=&quot;busyButton&quot; data-dojo-type=&quot;dojox/form/BusyButton&quot;\\r\\n\\t   label=&quot;Click Here (Busy Button)&quot;\\r\\n\\t   data-dojo-props='busyLabel:&quot;Busy for 1000 ms...&quot;, timeout:1000' /&gt;\\r\\n</pre>\\n<h3>CheckedMultiSelect</h3>\\n<p><img src=\\\"https://wp.sitepen.com/wp-content/uploads/2010/08/Form3.png\\\" style=\\\"display:block;margin:0 0 20px 20px;float:right;\\\" /></p>\\n<p>What if our <code>select</code> element allows for multiple selections?  That&#8217;s the perfect opportunity to use the <code>dojox/form/CheckedMultiSelect</code> widget:</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\r\\n&lt;!-- assuming dojox/form/CheckedMultiSelect has been required... --&gt;\\r\\n&lt;select multiple=&quot;true&quot; name=&quot;rockers&quot;\\r\\n\\tdata-dojo-type=&quot;dojox/form/CheckedMultiSelect&quot;&gt;\\r\\n\\t&lt;option value=&quot;Oasis&quot;&gt;Oasis&lt;/option&gt;\\r\\n\\t&lt;option value=&quot;Rod Stewart&quot; selected=&quot;selected&quot;&gt;Rod Stewart&lt;/option&gt;\\r\\n\\t&lt;option value=&quot;Coldplay&quot; selected=&quot;selected&quot;&gt;Coldplay&lt;/option&gt;\\r\\n\\t&lt;option value=&quot;Kings of Leon&quot;&gt;Kings of Leon&lt;/option&gt;\\r\\n&lt;/select&gt;\\r\\n</pre>\\n<h3>PasswordValidator</h3>\\n<p><img src=\\\"https://wp.sitepen.com/wp-content/uploads/2010/08/Form4.png\\\" style=\\\"display:block;margin:0 0 20px 20px;float:right;\\\" /></p>\\n<p>What if our website features a form that allows updating/changing of passwords?  The <code>dojox/form/PasswordValidator</code> provides all the functionality you need to quickly implement that system:</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\r\\n&lt;!-- assuming dojox/form/PasswordValidator has been required... --&gt;\\r\\n&lt;!-- pwValidate is the name of your function that verifies the current password is correct --&gt;\\t\\r\\n&lt;div data-dojo-type=&quot;dojox/form/PasswordValidator&quot; name=&quot;pwValidate&quot;&gt;\\r\\n\\t&lt;!-- pwType=old is where the user must place their current password --&gt;\\r\\n\\t&lt;input type=&quot;password&quot; pwType=&quot;old&quot; /&gt;\\r\\n\\t&lt;!-- pwType=new is where the proposed new password must be placed --&gt;\\r\\n\\t&lt;input type=&quot;password&quot; pwType=&quot;new&quot; /&gt;\\r\\n\\t&lt;!-- pwType=verify is where the user verifies their new pass --&gt;\\r\\n\\t&lt;input type=&quot;password&quot; pwType=&quot;verify&quot; /&gt;\\r\\n&lt;/div&gt;\\r\\n</pre>\\n<p><em>Reminder:  JavaScript validation is not a substitute for server-side validation;  JavaScript simply enhances the user experience by providing instant feedback to the user.</em></p>\\n<p><em>Note: If you need to pass HTML5 validation, you probably can&#8217;t use <code>PasswordValidator</code> declaratively.</em></p>\\n<h2>The dojox/form Collection</h2>\\n<p>\\n\\tThe <code>dojox/form</code> namespace hosts a huge assortment of widget enhancements, including:\\n</p>\\n<ul>\\n<li><strong>TimeSpinner</strong> &#8211; same as a normal <code>NumberSpinner</code>, but for the time component of a date object</li>\\n<li><strong>MultiComboBox</strong> &#8211; accepts multiple inputs on a single line</li>\\n<li><strong>DropDownStack</strong> &#8211; disable/enable form elements based upon a selection</li>\\n<li><strong>RangeSlider</strong> &#8211; allows values to be chosen via a sliding scale</li>\\n<li><strong>Rating</strong> &#8211; easily creates UI for ratings (star ratings)</li>\\n<li><strong>Uploader</strong> &#8211; streamlines the file upload process</li>\\n<li>&#8230;and much more!&trade;</li>\\n</ul>\\n<h2>Great Dijit &amp; Dojox Resources</h2>\\n<ul>\\n<li><a href=\\\"http://archive.dojotoolkit.org/nightly/dojotoolkit/dijit/themes/themeTester.html\\\">Dijit Theme Tester</a></li>\\n<li><a href=\\\"https://www.sitepen.com/blog/2012/11/16/dive-into-dijit-with-amd/\\\">Dive Into Dijit with AMD</a></li>\\n<li><a href=\\\"http://dojotoolkit.org/reference-guide/1.8/dojox/index.html#id10\\\">DojoX Form Reference Guide</a></li>\\n<li><a href=\\\"http://dojotoolkit.org/reference-guide/1.8/dijit/form.html#dijit-form\\\">Dijit Form Reference Guide</a></li>\\n<li><a href=\\\"http://dojotoolkit.org/reference-guide/1.8/dojox/validate.html#dojox-validate\\\">Dojox Validate Reference</a></li>\\n</ul>\\n<p>The Dijit and DojoX Form libraries are much more than just gloss on your elements &#8212; they are a hugely functional set of classes to make life easier for both you, the developer, and your users.</p>\\n\",\"protected\":false},\"excerpt\":{\"rendered\":\"<p>As was illustrated with our Dive Into Dijit with AMD post, the Dijit library provides an extremely powerful, flexible set of Dojo-based widgets with which you may easily enhance the look and functionality of your web application.  These widgets include drop down / popup menus, dialogs, page layouts, trees, progress bars, and form elements.  When [&hellip;]</p>\\n\",\"protected\":false},\"author\":21,\"featured_media\":17845,\"comment_status\":\"closed\",\"ping_status\":\"closed\",\"sticky\":false,\"template\":\"\",\"format\":\"standard\",\"meta\":{\"spay_email\":\"\"},\"categories\":[45,8],\"tags\":[],\"series\":[],\"jetpack_featured_media_url\":\"\",\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Dive Into Dijit Forms with AMD | SitePen</title>\\n<meta name=\\\"description\\\" content=\\\"As was illustrated with our Dive Into Dijit with AMD post, the Dijit library provides an extremely powerful, flexible set of Dojo-based widgets with which you may easily enhance the look and functionality of your web application.  These widgets include drop down / popup menus, dialogs, page layouts, trees, progress bar\\\" />\\n<meta name=\\\"robots\\\" content=\\\"index, follow\\\" />\\n<meta name=\\\"googlebot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<meta name=\\\"bingbot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<link rel=\\\"canonical\\\" href=\\\"https://wp.sitepen.com/blog/dive-into-dijit-forms-with-amd/\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Dive Into Dijit Forms with AMD | SitePen\\\" />\\n<meta property=\\\"og:description\\\" content=\\\"As was illustrated with our Dive Into Dijit with AMD post, the Dijit library provides an extremely powerful, flexible set of Dojo-based widgets with which you may easily enhance the look and functionality of your web application.  These widgets include drop down / popup menus, dialogs, page layouts, trees, progress bar\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://wp.sitepen.com/blog/dive-into-dijit-forms-with-amd/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:published_time\\\" content=\\\"2012-11-16T09:01:52+00:00\\\" />\\n<meta property=\\\"article:modified_time\\\" content=\\\"2020-08-25T12:21:17+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1600\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"900\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/blog/dive-into-dijit-forms-with-amd/#primaryimage\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/blog/dive-into-dijit-forms-with-amd/#webpage\\\",\\\"url\\\":\\\"https://wp.sitepen.com/blog/dive-into-dijit-forms-with-amd/\\\",\\\"name\\\":\\\"Dive Into Dijit Forms with AMD | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"primaryImageOfPage\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/blog/dive-into-dijit-forms-with-amd/#primaryimage\\\"},\\\"datePublished\\\":\\\"2012-11-16T09:01:52+00:00\\\",\\\"dateModified\\\":\\\"2020-08-25T12:21:17+00:00\\\",\\\"author\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/b17a4b78bc644814f33f687fe684bb19\\\"},\\\"description\\\":\\\"As was illustrated with our Dive Into Dijit with AMD post, the Dijit library provides an extremely powerful, flexible set of Dojo-based widgets with which you may easily enhance the look and functionality of your web application. \\\\u00a0These widgets include drop down / popup menus, dialogs, page layouts, trees, progress bar\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://wp.sitepen.com/blog/dive-into-dijit-forms-with-amd/\\\"]}]},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/b17a4b78bc644814f33f687fe684bb19\\\",\\\"name\\\":\\\"Mike Wilcox\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/a3d37a7b01b791e438645e5f7cd99d0e?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Mike Wilcox\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/5843\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/post\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/21\"}],\"replies\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/comments?post=5843\"}],\"version-history\":[{\"count\":3,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/5843/revisions\"}],\"predecessor-version\":[{\"id\":26452,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/5843/revisions/26452\"}],\"wp:featuredmedia\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/17845\"}],\"wp:attachment\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media?parent=5843\"}],\"wp:term\":[{\"taxonomy\":\"category\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/categories?post=5843\"},{\"taxonomy\":\"post_tag\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/tags?post=5843\"},{\"taxonomy\":\"series\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/series?post=5843\"}],\"curies\":[{\"name\":\"wp\",\"href\":\"https://api.w.org/{rel}\",\"templated\":true}]},\"_embedded\":{\"author\":[{\"id\":21,\"name\":\"Mike Wilcox\",\"url\":\"https://www.sitepen.com\",\"description\":\"\",\"link\":\"https://wp.sitepen.com/blog/author/mwilcox/\",\"slug\":\"mwilcox\",\"avatar_urls\":{\"24\":\"https://secure.gravatar.com/avatar/a3d37a7b01b791e438645e5f7cd99d0e?s=24&d=mm&r=g\",\"48\":\"https://secure.gravatar.com/avatar/a3d37a7b01b791e438645e5f7cd99d0e?s=48&d=mm&r=g\",\"96\":\"https://secure.gravatar.com/avatar/a3d37a7b01b791e438645e5f7cd99d0e?s=96&d=mm&r=g\"},\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Mike Wilcox, Author at SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"profile\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Mike Wilcox, Author at SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/author/mwilcox/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://secure.gravatar.com/avatar/a3d37a7b01b791e438645e5f7cd99d0e?s=500&#038;d=mm&#038;r=g\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ProfilePage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/mwilcox/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/author/mwilcox/\\\",\\\"name\\\":\\\"Mike Wilcox, Author at SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/b17a4b78bc644814f33f687fe684bb19\\\",\\\"name\\\":\\\"Mike Wilcox\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/a3d37a7b01b791e438645e5f7cd99d0e?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Mike Wilcox\\\"},\\\"mainEntityOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/mwilcox/#webpage\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/21\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users\"}]}}],\"wp:featuredmedia\":[{\"code\":\"rest_post_invalid_id\",\"message\":\"Invalid post ID.\",\"data\":{\"status\":404}}]}}]","headers":[["access-control-allow-headers","Authorization, X-WP-Nonce, Content-Disposition, Content-MD5, Content-Type"],["access-control-expose-headers","X-WP-Total, X-WP-TotalPages, Link"],["allow","GET"],["cache-control","max-age=2592000"],["connection","close"],["content-type","application/json; charset=UTF-8"],["date","Tue, 25 Aug 2020 13:15:01 GMT"],["expires","Thu, 24 Sep 2020 13:15:01 GMT"],["link","<https://wp.sitepen.com/wp-json/>; rel=\"https://api.w.org/\""],["server","Apache"],["transfer-encoding","chunked"],["vary","Origin"],["x-content-type-options","nosniff"],["x-powered-by","PHP/7.3.21-1+0~20200807.66+debian9~1.gbp18a1c2"],["x-robots-tag","noindex"],["x-wp-total","1"],["x-wp-totalpages","1"]]},"type":"Object"}