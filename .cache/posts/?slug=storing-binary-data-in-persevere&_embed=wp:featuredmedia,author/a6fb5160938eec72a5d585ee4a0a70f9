{"value":{"body":"[{\"id\":598,\"date\":\"2009-03-02T17:46:54\",\"date_gmt\":\"2009-03-03T00:46:54\",\"guid\":{\"rendered\":\"https://www.sitepen.com/blog/2009/03/02/storing-binary-data-in-persevere/\"},\"modified\":\"2009-03-02T17:46:54\",\"modified_gmt\":\"2009-03-03T00:46:54\",\"slug\":\"storing-binary-data-in-persevere\",\"status\":\"publish\",\"type\":\"post\",\"link\":\"https://wp.sitepen.com/blog/storing-binary-data-in-persevere/\",\"title\":{\"rendered\":\"Storing Binary Data in Persevere\"},\"content\":{\"rendered\":\"<p><a href=\\\"http://www.persvr.org/\\\">Persevere</a> stores structured data in the same way data is represented in JavaScript and JSON. Various different data types can be persisted including numbers, strings, booleans, objects, arrays, dates, functions, and even binary data. Most of these data types are familiar to JavaScript developers; however, binary data is usually not seen in JavaScript. Support for binary data opens up a powerful realm of application capabilities by allowing data such as images, audio, and video to be stored directly in the Persevere database and referenced by JavaScript/JSON style data structures.</p>\\n<p><!--more--></p>\\n<p>Persevere includes a special class/table called <code>File</code> designed to hold various binary and text files. Each <code>File</code> instance can be referenced like any other object in Persevere. There are several options for creating new <code>File</code> instances and sending binary data to Persevere for storage. <a href=\\\"http://docs.persvr.org/documentation/file-storage\\\">Persevere supports several very RESTful mechanisms</a> that follow the protocol of the HTTP specification (<a href=\\\"http://www.ietf.org/rfc/rfc2616.txt\\\">RFC 2616</a>). This includes directly POSTing a binary file to the File table, using PUT to add a file as a property of an existing JSON object, and using PUT to add an alternate representation of a JSON object in Persevere. Persevere then properly handles HTTP-specified content negotiation to deliver the correct representation of an object, whether it be application/json or a binary MIME type.</p>\\n<p>While these approaches correctly follow existing standards, it is not possible to get the contents of a binary file using browser-based JavaScript in a web application to do a PUT or POST request. These approaches work great for other code that is not running in the browser (such as another server), but within the browser we must use another technique. Fortunately, Persevere provides a fourth mechanism that is designed for uploading binary files through the browser&#8217;s file input element. This functionality makes it possible to build applications where users can upload files as part of the application flow.</p>\\n<p>To understand how to use this capability, we will look at an example application. We will create a button that allows us to upload a new image for a product object.</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\n&lt;form action=&quot;/Product/1&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;\\n\\t&lt;input type=&quot;file&quot; name=&quot;picture&quot; size=&quot;40&quot; /&gt;\\n\\t&lt;input type=&quot;submit&quot; value=&quot;Upload Image&quot; /&gt; \\n&lt;/form&gt;\\n</pre>\\n<p>When a user selects a file and submits it with this form, the file will be uploaded to Persevere, and the file will be set as the value of the <code>picture</code> property of the Product with an id of <code>1</code>. Consequently, once the file is uploaded we can access the file with the URL of <code>/Product/1.picture</code>. If the user uploaded an image, we can now show that image in a page with the following HTML:</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\n&lt;img src=&quot;/Product/1.picture&quot; /&gt;\\n</pre>\\n<p><img src='https://wp.sitepen.com/wp-content/uploads/2009/02/perseverebinaryfiles.png' alt='perseverebinaryfiles.png' /><br />\\nOf course if you are using Persevere, you probably won&#8217;t be using static object id references in your HTML. Naturally, you can set the target URL (<code>action</code> property) of the form with JavaScript:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\nmyForm.action = productId;\\n</pre>\\n<p>With the HTML for the file upload form defined above, when the user submits the form, Persevere will simply return a blank page. This is probably not desirable. This can easily be handled by creating an invisible iframe as the target of the page. We can then add an <code>onload</code> for the iframe so we can be notified when the file is uploaded:</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\n&lt;form target=&quot;uploadTarget&quot; action=&quot;/Product/1&quot; \\n\\t\\tmethod=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;\\n\\t&lt;input type=&quot;file&quot; name=&quot;picture&quot; size=&quot;40&quot; /&gt;\\n\\t&lt;input type=&quot;submit&quot; value=&quot;Upload Image&quot; /&gt; \\n&lt;/form&gt;\\n&lt;iframe style=&quot;display:none&quot; name=&quot;uploadTarget&quot; onload='onFileUploaded()'&gt;&lt;/iframe&gt;\\n</pre>\\n<p>You can then define a function <code>onFileUploaded</code> that will be called when the file is finished uploading. Now, when a user chooses a file and submits it, the <code>onFileUploaded</code> will be called so the application can carry on the next step after uploading.</p>\\n<h3>CRSF Safety</h3>\\n<p>Persevere includes robust secure protection against cross-site request forgery (CSRF). Because form submissions can be triggered from any site to one of your server&#8217;s URLs, Persevere will only process the request with the currently logged in user&#8217;s authorization level if it is certain that the user authorized the request. Persevere can verify the request if the <code>Referer</code> header has a URL that corresponds to the <code>Host</code> header. However, not all users&#8217; requests will have a <code>Referer</code> as <a href=\\\"http://www.adambarth.com/papers/2008/barth-jackson-mitchell-b.pdf\\\">some proxies strip this header</a>. In order to ensure that the form submission works for all users, the request must be verifiable by including a client_id query parameter that matches a predefined <a href=\\\"http://docs.persvr.org/documentation/http-rest\\\">client id</a> for the connection to Persevere with the <code>Client-Id</code> header. This client id can be established by generated a random client id number and sending it to the server with an XHR request:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\nclientId= Math.random();\\nvar xhr = new XMLHttpRequest();\\nxhr.open(&quot;GET&quot;,&quot;/Product/&quot;,true);\\nxhr.setRequestHeader(&quot;Client-Id&quot;, clientId);\\nxhr.send(null);\\n</pre>\\n<p>If you are using Dojo on the front-end, it should automatically be sending the <code>Client-Id</code> header on all requests. Therefore the client id can be accessed from the property <code>dojox.rpc.Client.clientId</code>:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\nclientId = dojox.rpc.Client.clientId;\\n</pre>\\n<p>Now, to use this client id to verify the form submission, we can add it to the target URL:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\nmyForm.action = productId + &quot;?client_id=&quot; + clientId;\\n</pre>\\n<p>This will ensure that the request is properly authorized for all users, while allowing Persevere to properly protect against any CSRF attacks on your site.</p>\\n<p>An alternate demonstration of this mechanism can be seen in the <a href=\\\"http://www.persvr.org/examples/friends.html\\\"><i>friends</i> example</a> in Persevere&#8217;s <code>examples</code> directory. In this example application, you can see a simple front-end for a database of friends. The front-end includes a form for adding an image for each of your friends, and this image is displayed in the listing of friends.</p>\\n<h3>Getting More Information about a Binary Resource</h3>\\n<p>In addition to using a binary file&#8217;s URL to show images, you can also interact with the file. The file object includes <code>contentType</code> and <code>content</code> properties. The <code>contentType</code> property holds the MIME type of the object. The <code>content</code> is a binary object that holds the byte data for the object. If an image has been uploaded for the Product instance with an id of <code>1</code>, from the server you could run:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\nvar file = load(&quot;Product/1.picture&quot;);\\nfile.contentType -&gt; &quot;image/jpeg&quot;\\n</pre>\\n<h3>Storing Binary Data in Persevere</h3>\\n<p>Persevere includes several mechanisms for storing and retrieving data. These mechanisms include PUT and POSTs based on the HTTP specification for creating and updating resources, and allows for defining alternate MIME types of existing resources. In addition, Persevere also includes special support for browser-based form submission of binary data to facilitate Ajax-style applications that wish to provide a means for uploading data from the browser to the server.</p>\\n\",\"protected\":false},\"excerpt\":{\"rendered\":\"<p>Persevere stores structured data in the same way data is represented in JavaScript and JSON. Various different data types can be persisted including numbers, strings, booleans, objects, arrays, dates, functions, and even binary data. Most of these data types are familiar to JavaScript developers; however, binary data is usually not seen in JavaScript. Support for [&hellip;]</p>\\n\",\"protected\":false},\"author\":28,\"featured_media\":17638,\"comment_status\":\"closed\",\"ping_status\":\"closed\",\"sticky\":false,\"template\":\"\",\"format\":\"standard\",\"meta\":{\"spay_email\":\"\"},\"categories\":[46,45,178],\"tags\":[],\"jetpack_featured_media_url\":\"\",\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.3 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Storing Binary Data in Persevere | SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"index, follow\\\" />\\n<meta name=\\\"googlebot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<meta name=\\\"bingbot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<link rel=\\\"canonical\\\" href=\\\"https://www.sitepen.com/blog/storing-binary-data-in-persevere/\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Storing Binary Data in Persevere | SitePen\\\" />\\n<meta property=\\\"og:description\\\" content=\\\"Persevere stores structured data in the same way data is represented in JavaScript and JSON. Various different data types can be persisted including numbers, strings, booleans, objects, arrays, dates, functions, and even binary data. Most of these data types are familiar to JavaScript developers; however, binary data is usually not seen in JavaScript. Support for [&hellip;]\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/storing-binary-data-in-persevere/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:published_time\\\" content=\\\"2009-03-03T00:46:54+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1600\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"900\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/storing-binary-data-in-persevere/#primaryimage\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/storing-binary-data-in-persevere/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/storing-binary-data-in-persevere/\\\",\\\"name\\\":\\\"Storing Binary Data in Persevere | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"primaryImageOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/storing-binary-data-in-persevere/#primaryimage\\\"},\\\"datePublished\\\":\\\"2009-03-03T00:46:54+00:00\\\",\\\"dateModified\\\":\\\"2009-03-03T00:46:54+00:00\\\",\\\"author\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/0b6eaf72ddf34f8c761763c239c05087\\\"},\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://www.sitepen.com/blog/storing-binary-data-in-persevere/\\\"]}]},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/0b6eaf72ddf34f8c761763c239c05087\\\",\\\"name\\\":\\\"Kris Zyp\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/0c073304e94b11bc5a45aa6a3b5fedb7?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Kris Zyp\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/598\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/post\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/28\"}],\"replies\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/comments?post=598\"}],\"version-history\":[{\"count\":0,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/598/revisions\"}],\"wp:featuredmedia\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/17638\"}],\"wp:attachment\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media?parent=598\"}],\"wp:term\":[{\"taxonomy\":\"category\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/categories?post=598\"},{\"taxonomy\":\"post_tag\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/tags?post=598\"}],\"curies\":[{\"name\":\"wp\",\"href\":\"https://api.w.org/{rel}\",\"templated\":true}]},\"_embedded\":{\"author\":[{\"id\":28,\"name\":\"Kris Zyp\",\"url\":\"https://www.sitepen.com\",\"description\":\"\",\"link\":\"https://wp.sitepen.com/blog/author/kzyp/\",\"slug\":\"kzyp\",\"avatar_urls\":{\"24\":\"https://secure.gravatar.com/avatar/0c073304e94b11bc5a45aa6a3b5fedb7?s=24&d=mm&r=g\",\"48\":\"https://secure.gravatar.com/avatar/0c073304e94b11bc5a45aa6a3b5fedb7?s=48&d=mm&r=g\",\"96\":\"https://secure.gravatar.com/avatar/0c073304e94b11bc5a45aa6a3b5fedb7?s=96&d=mm&r=g\"},\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.3 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Kris Zyp, Author at SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"profile\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Kris Zyp, Author at SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/author/kzyp/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://secure.gravatar.com/avatar/0c073304e94b11bc5a45aa6a3b5fedb7?s=500&#038;d=mm&#038;r=g\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ProfilePage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/kzyp/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/author/kzyp/\\\",\\\"name\\\":\\\"Kris Zyp, Author at SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/0b6eaf72ddf34f8c761763c239c05087\\\",\\\"name\\\":\\\"Kris Zyp\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/0c073304e94b11bc5a45aa6a3b5fedb7?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Kris Zyp\\\"},\\\"mainEntityOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/kzyp/#webpage\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/28\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users\"}]}}],\"wp:featuredmedia\":[{\"code\":\"rest_post_invalid_id\",\"message\":\"Invalid post ID.\",\"data\":{\"status\":404}}]}}]","headers":[["access-control-allow-headers","Authorization, Content-Type"],["access-control-expose-headers","X-WP-Total, X-WP-TotalPages"],["allow","GET"],["cf-cache-status","DYNAMIC"],["cf-ray","5a77541f79bd067e-LHR"],["cf-request-id","037e72e7aa0000067eeebf8200000001"],["connection","close"],["content-encoding","gzip"],["content-type","application/json; charset=UTF-8"],["date","Mon, 22 Jun 2020 16:26:01 GMT"],["expect-ct","max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""],["link","<https://wp.sitepen.com/wp-json/>; rel=\"https://api.w.org/\""],["server","cloudflare"],["set-cookie","__cfduid=d9b8d4fe98619745f001e99dbf0003c361592843161; expires=Wed, 22-Jul-20 16:26:01 GMT; path=/; domain=.sitepen.com; HttpOnly; SameSite=Lax"],["transfer-encoding","chunked"],["vary","Origin"],["x-content-type-options","nosniff"],["x-robots-tag","noindex"],["x-wp-total","1"],["x-wp-totalpages","1"]]},"type":"Object"}