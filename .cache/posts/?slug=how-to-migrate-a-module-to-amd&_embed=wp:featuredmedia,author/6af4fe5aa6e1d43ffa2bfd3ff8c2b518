{"value":{"body":"[{\"id\":4612,\"date\":\"2012-07-24T11:20:59\",\"date_gmt\":\"2012-07-24T18:20:59\",\"guid\":{\"rendered\":\"https://www.sitepen.com/blog/?p=4612\"},\"modified\":\"2020-08-01T08:19:54\",\"modified_gmt\":\"2020-08-01T15:19:54\",\"slug\":\"how-to-migrate-a-module-to-amd\",\"status\":\"publish\",\"type\":\"post\",\"link\":\"https://wp.sitepen.com/blog/how-to-migrate-a-module-to-amd/\",\"title\":{\"rendered\":\"How To Migrate a Module to AMD\"},\"content\":{\"rendered\":\"<p>Dojo 1.7 added full support for asynchronous module loading, defined with the widely adopted <a href=\\\"https://www.sitepen.com/blog/2012/06/25/amd-the-definitive-source/\\\">asynchronous module definition (AMD)</a> format. The new module loader and module format offer faster module loading, better performance, and wide interoperability. However, for many, upgrading from the legacy Dojo module format to AMD is daunting, since the new module formats look much different than the old. Despite the large visual difference though, upgrading is a fairly straightforward process. There may be more effort involved in leveraging the new features and APIs in 1.7 and 1.8, but that is a different topic.</p>\\n<p><!--more--></p>\\n<h2>Define a Module</h2>\\n<p>The first step in upgrading a module to AMD is to switch the module declaration from a <code>dojo.provide</code> call to an AMD <code>define()</code> call. This is very simple. The new module loader utilizes some fancy tricks to determine a module&#8217;s path, and therefore a module no longer needs to declare its own module name (this has important benefits because files can be renamed and moved without any internal code changes). In this post, we are going to look at how to convert the <code>dojox.gantt.GanttChart</code> module. The module used to start with:</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\r\\ndojo.provide(&quot;dojox.gantt.GanttChart&quot;);\\r\\n... rest of module ...\\r\\n</pre>\\n<p>And we simply switch the beginning code to a <code>define()</code> call:</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\r\\ndefine([], function(){\\r\\n... rest of module ...\\r\\n});\\r\\n</pre>\\n<p>Note that the entire module is now within the function body of the <code>define</code>&#8216;s callback function (called the factory function).</p>\\n<h2>Specify Dependencies</h2>\\n<p>The next and most important step of upgrading a module to AMD is to switch the dependency declarations from legacy <code>dojo.require()</code> calls to dependency ids within the dependency array for the <code>define()</code> call (the first argument). We are replacing each <code>dojo.require()</code> call, and converting the legacy module id to an AMD module id. Converting the module id consists of replacing the dots with slashes (like a URL path). We also add <code>dojo</code> as a dependency (unless we want to use Dojo in baseless mode, as discussed below). In the original <code>dojox/gantt/GanttChart.js</code> module we had five <code>dojo.require()</code> calls:</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\r\\ndojo.require(&quot;dijit.Tooltip&quot;);\\r\\ndojo.require(&quot;dojox.gantt.GanttProjectItem&quot;);\\r\\ndojo.require(&quot;dojox.gantt.GanttResourceItem&quot;);\\r\\ndojo.require(&quot;dojox.gantt.TabMenu&quot;);\\r\\ndojo.require(&quot;dojo.date.locale&quot;);\\r\\n</pre>\\n<p>And now the module should start with (note that we also include dojo as a dependency as well):</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\r\\ndefine([\\r\\n\\t&quot;dojo&quot;,\\r\\n\\t&quot;dijit/Tooltip&quot;, \\r\\n\\t&quot;dojox/gantt/GanttProjectItem&quot;, \\r\\n\\t&quot;dojox/gantt/GanttResourceItem&quot;,\\r\\n\\t&quot;dojox/gantt/TabMenu&quot;,\\r\\n\\t&quot;dojo/date/locale&quot;\\r\\n], function(dojo){\\r\\n</pre>\\n<p>At this point, we should now have a functioning AMD module that can be loaded with an AMD module loader. (assuming all dependency modules declared their own namespace and are AMD, as all Dojo modules do).</p>\\n<h2>Local Module References</h2>\\n<p>Now, our code has specified dependencies, but it isn&#8217;t really using the full power of AMD yet. One of the key concepts with AMD is importing dependency exports as local variables. The legacy code is using namespaced globals instead of local references. To switch to local references, we include the module export in our factory callback function arguments. Each dependency in the dependency array corresponds to an argument in the factory function. To have a local reference to <code>dijit/Tooltip</code>, we include it in the arguments:</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\r\\ndefine([\\r\\n\\t&quot;dojo&quot;,\\r\\n\\t&quot;dijit/Tooltip&quot;, \\r\\n\\t&quot;dojox/gantt/GanttProjectItem&quot;, \\r\\n\\t&quot;dojox/gantt/GanttResourceItem&quot;,\\r\\n\\t&quot;dojox/gantt/TabMenu&quot;,\\r\\n\\t&quot;dojo/date/locale&quot;\\r\\n], function(dojo, Tooltip, GanttProjectItem, GanttResourceItem, TabMenu, locale){\\r\\n</pre>\\n<p>And now, to utilize the local reference, we replace all of the namespaced global references to <code>dijit.Tooltip</code> with our local variable <code>Tooltip</code>. We have now reduced global variable usage, and <a href=\\\"http://www.nczonline.net/blog/2009/02/10/javascript-variable-performance/\\\">improved variable lookup times</a>. In addition, if we ever needed to point to a different module to provide registry functionality, we could do by simply changing the dependency list. The remainder of the source code would not have to be changed.</p>\\n<h2>Export This Module</h2>\\n<p>Now, to make it possible for our converted modules to be properly used by other AMD modules, we need to export the defined function(s) of this module. In this case &#8220;dojox/gantt/GanttChart.js&#8221; creates a widget class that is assigned to the namespaced global <code>dojox.gantt.GanttChart</code>. We will now export this object by simply returning this class from the factory function:</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\r\\n... main module ...\\r\\nreturn dojox.gantt.GanttChart;\\r\\n});\\r\\n</pre>\\n<p>Now other modules can list <code>dojox/gantt/GanttChart</code> in the dependencies, and locally reference the export of the module.</p>\\n<h2>Global Free</h2>\\n<p>To take the AMD conversion a step further, we could eliminate our dependence on the dojox global variable, and rely completely on modules for references. To do this, we can eliminate the class namespace creation argument in the <code>dojo.declare</code> call, and directly return the constructor created by <code>dojo.declare</code>.</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\r\\ndefine([...], function(dojo, Tooltip, GanttProjectItem, \\r\\n\\t\\tGanttResourceItem, TabMenu, locale){\\r\\n\\treturn dojo.declare(null, {\\r\\n\\t\\t...\\r\\n\\t});\\r\\n});\\r\\n</pre>\\n<p>Now the <code>dojo.declare</code> call will no longer create a global reference to the new class at <code>dojox.gantt.GanttChart</code>, it will simply return it. The module returns (exports) that class, so other modules can use <code>dojox/gantt/GanttChart</code> by declaring it as a dependency and utilize the module export. From another module, we would now use <code>dojox/gantt/GanttChart</code> like:</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\r\\ndefine([&quot;dojox/gantt/GanttChart&quot;], function(GanttChart){\\r\\n\\tvar myChart = new GanttChart(config, targetNode);\\r\\n});\\r\\n</pre>\\n<p>As a reminder, if you want <code>dojox/gantt/GanttChart</code> and all its dependencies to be AMD-based (and global-free), you would need to convert the other modules in <code>dojox/gantt</code> as well.</p>\\n<p><a href=\\\"http://bugs.dojotoolkit.org/changeset?reponame=dojo&#038;new=29399%40dojox%2Ftrunk%2Fgantt&#038;old=25391%40dojox%2Ftrunk%2Fgantt\\\">View the complete changeset to port dojox/gantt to AMD, and to make use of more recent additions to Dojo</a></p>\\n<h2>Plugins</h2>\\n<p>One of the powerful features of AMD is the plugin capability. This makes it possible to not only load standard JavaScript modules asynchronously as a dependency, but other resources, like templates and localization can be asynchronously loaded as dependencies as well. A common resource that is used by many widgets is a template loaded through <code>dojo.cache</code>. With AMD conversion, we can and should convert this to a dependency in the <code>define()</code> call. To do this, we use the <code>dojo/text!</code> plugin, and specify the target resource file as the suffix. For example, if our starting code had a <code>dojo.cache()</code> call:</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\r\\ndojo.declare([dijit._Widget, dijit._Templated], {\\r\\n\\ttemplateString: dojo.cache(&quot;mypackage&quot;,&quot;templates/MyWidget.html&quot;);\\r\\n\\t...\\r\\n</pre>\\n<p>This could be converted to:</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\r\\ndefine([&quot;dojo/text!./templates/MyWidget.html&quot;, ...], function(template){\\r\\ndojo.declare([dijit._Widget, dijit._Templated], {\\r\\n\\ttemplateString: template,\\r\\n\\t...\\r\\n</pre>\\n<p>And the MyWidget.html file can be asynchronously loaded along with other dependencies.</p>\\n<h3>Localization</h3>\\n<p>Likewise, you can also asynchronously load localization strings with AMD, so it is preloaded before a localization call. For example:</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\r\\ndefine[&quot;dojo/i18n&quot;, &quot;dojo/i18n!dijit/nls/loading&quot;], function(i18n){\\r\\n\\tvar messages = i18n.getLocalization(&quot;dijit&quot;, &quot;loading&quot;);\\r\\n\\t...\\r\\n</pre>\\n<h2>Baseless Dojo (AKA Nano)</h2>\\n<p>One of the major changes in Dojo 1.7 is the ability to use Dojo &#8220;baseless&#8221;. You may have noticed that in the examples above we include <code>dojo</code> as a dependency, which in turn loads all of Dojo base. In baseless Dojo, we no longer need to load all of base if we don&#8217;t need it. Instead, we can specifically declare each Dojo module that we actually need, and use the module references. This gives us granular control over exactly what is loaded, minimizing application size. We have already seen how to directly reference modules through the factory function arguments. We can also do this for individual Dojo base modules. With <code>dojox/gantt/GanttChart</code>, if we removed the <code>dojo</code> base dependency, we would need to include several <code>dojo</code> base modules, for example one of them would be <code>dojo/_base/declare</code>:</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">\\r\\ndefine([&quot;dojo/_base/declare&quot;, ...\\r\\n\\t], function(declare, ...){\\r\\nreturn declare(null, {...\\r\\n</pre>\\n<h2>Conversion and Upgrading</h2>\\n<p>Dojo 1.7 includes many powerful new features. There are features that you can upgrade your code to leverage that are beyond this post, but converting to AMD is certainly one of the most key changes you can make to take advantage of the new module loader in 1.7. A basic conversion to making modules AMD-compatible is very simple, and you can easily choose which of the more powerful features you want to utilize (and <a href=\\\"https://www.sitepen.com/blog/2012/05/29/thinking-of-upgrading-to-dojo-1-7-sitepen-can-help/\\\">we can help</a>). Converting to AMD will allow you to enjoy the greater performance, interoperability, and maintainability which <a href=\\\"https://www.sitepen.com/blog/2012/07/10/amd-for-the-business-side/\\\">ultimately benefits you, your team, and your company</a>.</p>\\n\",\"protected\":false},\"excerpt\":{\"rendered\":\"<p>Dojo 1.7 added full support for asynchronous module loading, defined with the widely adopted asynchronous module definition (AMD) format. The new module loader and module format offer faster module loading, better performance, and wide interoperability. However, for many, upgrading from the legacy Dojo module format to AMD is daunting, since the new module formats look [&hellip;]</p>\\n\",\"protected\":false},\"author\":28,\"featured_media\":22075,\"comment_status\":\"closed\",\"ping_status\":\"closed\",\"sticky\":false,\"template\":\"\",\"format\":\"standard\",\"meta\":{\"spay_email\":\"\"},\"categories\":[353,45,6],\"tags\":[354,355,83,357],\"series\":[],\"jetpack_featured_media_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\",\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>How To Migrate a Module to AMD | SitePen</title>\\n<meta name=\\\"description\\\" content=\\\"Dojo 1.7 added full support for asynchronous module loading, defined with the widely adopted asynchronous module definition (AMD) format. The new module loader and module format offer faster module loading, better performance, and wide interoperability. However, for many, upgrading from the legacy Dojo module format to AMD\\\" />\\n<meta name=\\\"robots\\\" content=\\\"index, follow\\\" />\\n<meta name=\\\"googlebot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<meta name=\\\"bingbot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<link rel=\\\"canonical\\\" href=\\\"https://wp.sitepen.com/blog/how-to-migrate-a-module-to-amd/\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"How To Migrate a Module to AMD | SitePen\\\" />\\n<meta property=\\\"og:description\\\" content=\\\"Dojo 1.7 added full support for asynchronous module loading, defined with the widely adopted asynchronous module definition (AMD) format. The new module loader and module format offer faster module loading, better performance, and wide interoperability. However, for many, upgrading from the legacy Dojo module format to AMD\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://wp.sitepen.com/blog/how-to-migrate-a-module-to-amd/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:published_time\\\" content=\\\"2012-07-24T18:20:59+00:00\\\" />\\n<meta property=\\\"article:modified_time\\\" content=\\\"2020-08-01T15:19:54+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1600\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"900\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/blog/how-to-migrate-a-module-to-amd/#primaryimage\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\",\\\"width\\\":1600,\\\"height\\\":900},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/blog/how-to-migrate-a-module-to-amd/#webpage\\\",\\\"url\\\":\\\"https://wp.sitepen.com/blog/how-to-migrate-a-module-to-amd/\\\",\\\"name\\\":\\\"How To Migrate a Module to AMD | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"primaryImageOfPage\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/blog/how-to-migrate-a-module-to-amd/#primaryimage\\\"},\\\"datePublished\\\":\\\"2012-07-24T18:20:59+00:00\\\",\\\"dateModified\\\":\\\"2020-08-01T15:19:54+00:00\\\",\\\"author\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/0b6eaf72ddf34f8c761763c239c05087\\\"},\\\"description\\\":\\\"Dojo 1.7 added full support for asynchronous module loading, defined with the widely adopted asynchronous module definition (AMD) format. The new module loader and module format offer faster module loading, better performance, and wide interoperability. However, for many, upgrading from the legacy Dojo module format to AMD\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://wp.sitepen.com/blog/how-to-migrate-a-module-to-amd/\\\"]}]},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/0b6eaf72ddf34f8c761763c239c05087\\\",\\\"name\\\":\\\"Kris Zyp\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/0c073304e94b11bc5a45aa6a3b5fedb7?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Kris Zyp\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/4612\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/post\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/28\"}],\"replies\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/comments?post=4612\"}],\"version-history\":[{\"count\":1,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/4612/revisions\"}],\"predecessor-version\":[{\"id\":26364,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/4612/revisions/26364\"}],\"wp:featuredmedia\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/22075\"}],\"wp:attachment\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media?parent=4612\"}],\"wp:term\":[{\"taxonomy\":\"category\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/categories?post=4612\"},{\"taxonomy\":\"post_tag\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/tags?post=4612\"},{\"taxonomy\":\"series\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/series?post=4612\"}],\"curies\":[{\"name\":\"wp\",\"href\":\"https://api.w.org/{rel}\",\"templated\":true}]},\"_embedded\":{\"author\":[{\"id\":28,\"name\":\"Kris Zyp\",\"url\":\"https://www.sitepen.com\",\"description\":\"\",\"link\":\"https://wp.sitepen.com/blog/author/kzyp/\",\"slug\":\"kzyp\",\"avatar_urls\":{\"24\":\"https://secure.gravatar.com/avatar/0c073304e94b11bc5a45aa6a3b5fedb7?s=24&d=mm&r=g\",\"48\":\"https://secure.gravatar.com/avatar/0c073304e94b11bc5a45aa6a3b5fedb7?s=48&d=mm&r=g\",\"96\":\"https://secure.gravatar.com/avatar/0c073304e94b11bc5a45aa6a3b5fedb7?s=96&d=mm&r=g\"},\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Kris Zyp, Author at SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"profile\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Kris Zyp, Author at SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/author/kzyp/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://secure.gravatar.com/avatar/0c073304e94b11bc5a45aa6a3b5fedb7?s=500&#038;d=mm&#038;r=g\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ProfilePage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/kzyp/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/author/kzyp/\\\",\\\"name\\\":\\\"Kris Zyp, Author at SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/0b6eaf72ddf34f8c761763c239c05087\\\",\\\"name\\\":\\\"Kris Zyp\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/0c073304e94b11bc5a45aa6a3b5fedb7?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Kris Zyp\\\"},\\\"mainEntityOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/kzyp/#webpage\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/28\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users\"}]}}],\"wp:featuredmedia\":[{\"id\":22075,\"date\":\"2020-01-22T13:53:07\",\"slug\":\"og_imagev1\",\"type\":\"attachment\",\"link\":\"https://wp.sitepen.com/og_imagev1/\",\"title\":{\"rendered\":\"og_imageV1\"},\"author\":9,\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>og_imageV1 | SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"og_imageV1 | SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1600\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"900\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg#webpage\\\",\\\"url\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\",\\\"name\\\":\\\"og_imageV1 | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"datePublished\\\":\\\"2020-01-22T21:53:07+00:00\\\",\\\"dateModified\\\":\\\"2020-01-22T21:53:07+00:00\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\"]}]}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"caption\":{\"rendered\":\"\"},\"alt_text\":\"\",\"media_type\":\"image\",\"mime_type\":\"image/jpeg\",\"media_details\":{\"width\":1600,\"height\":900,\"file\":\"2020/01/og_imageV1.jpg\",\"sizes\":{\"medium\":{\"file\":\"og_imageV1-300x169.jpg\",\"width\":300,\"height\":169,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-300x169.jpg\"},\"large\":{\"file\":\"og_imageV1-1024x576.jpg\",\"width\":1024,\"height\":576,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-1024x576.jpg\"},\"thumbnail\":{\"file\":\"og_imageV1-150x150.jpg\",\"width\":150,\"height\":150,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-150x150.jpg\"},\"medium_large\":{\"file\":\"og_imageV1-768x432.jpg\",\"width\":768,\"height\":432,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-768x432.jpg\"},\"1536x1536\":{\"file\":\"og_imageV1-1536x864.jpg\",\"width\":1536,\"height\":864,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-1536x864.jpg\"},\"full\":{\"file\":\"og_imageV1.jpg\",\"width\":1600,\"height\":900,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\"}},\"image_meta\":{\"aperture\":\"0\",\"credit\":\"\",\"camera\":\"\",\"caption\":\"\",\"created_timestamp\":\"0\",\"copyright\":\"\",\"focal_length\":\"0\",\"iso\":\"0\",\"shutter_speed\":\"0\",\"title\":\"\",\"orientation\":\"0\",\"keywords\":[]}},\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/22075\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/attachment\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/9\"}]}}]}}]","headers":[["access-control-allow-headers","Authorization, X-WP-Nonce, Content-Disposition, Content-MD5, Content-Type"],["access-control-expose-headers","X-WP-Total, X-WP-TotalPages, Link"],["allow","GET"],["cache-control","max-age=2592000"],["connection","close"],["content-type","application/json; charset=UTF-8"],["date","Tue, 25 Aug 2020 13:15:27 GMT"],["expires","Thu, 24 Sep 2020 13:15:27 GMT"],["link","<https://wp.sitepen.com/wp-json/>; rel=\"https://api.w.org/\""],["server","Apache"],["transfer-encoding","chunked"],["vary","Origin"],["x-content-type-options","nosniff"],["x-powered-by","PHP/7.3.21-1+0~20200807.66+debian9~1.gbp18a1c2"],["x-robots-tag","noindex"],["x-wp-total","1"],["x-wp-totalpages","1"]]},"type":"Object"}