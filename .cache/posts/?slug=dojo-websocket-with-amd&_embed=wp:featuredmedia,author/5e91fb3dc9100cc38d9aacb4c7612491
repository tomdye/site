{"value":{"body":"[{\"id\":5475,\"date\":\"2012-11-05T12:23:29\",\"date_gmt\":\"2012-11-05T19:23:29\",\"guid\":{\"rendered\":\"https://www.sitepen.com/blog/?p=5475\"},\"modified\":\"2020-08-01T08:14:10\",\"modified_gmt\":\"2020-08-01T15:14:10\",\"slug\":\"dojo-websocket-with-amd\",\"status\":\"publish\",\"type\":\"post\",\"link\":\"https://wp.sitepen.com/blog/dojo-websocket-with-amd/\",\"title\":{\"rendered\":\"Dojo WebSocket with AMD\"},\"content\":{\"rendered\":\"<p>Dojo has an API for Comet-style real-time communication based on the WebSocket API. WebSocket provides a bi-directional connection to servers that is ideal for pushing messages from a server to a client in real-time. Dojo&#8217;s  <code>dojox/socket</code> module provides access to this API with automated fallback to HTTP-based long-polling for browsers (or servers) that do not support the new WebSocket API. This allows you start using this API with Dojo now.</p>\\n<p><!--more--></p>\\n<p>The <code>dojox/socket</code> module is designed to be simple, lightweight, and protocol agnostic. In the past Dojo has provided protocol specific modules like CometD and RestChannels, but there are numerous other Comet protocols out there, and <code>dojox/socket</code> provides the flexibility to work with virtually any of them, with a simple foundational interface. The <code>dojox/socket</code> module simply passes strings over the HTTP or WebSocket connection, making it compatible with any system.</p>\\n<p>The simplest way to start a <code>dojox/socket</code> is to simply call it with a URL path:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\nrequire([&quot;dojox/socket&quot;], function (Socket) {\\r\\n\\t// Create socket instance\\r\\n\\tvar socket = new Socket(&quot;/comet&quot;);\\r\\n});\\r\\n</pre>\\n<p>The socket module will then connect to the origin server using WebSocket, or HTTP as a fallback. We can now listen for message events from the server:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\nsocket.on(&quot;message&quot;, function(event){\\r\\n\\tvar data = event.data;\\r\\n\\t// do something with the data from the server\\r\\n});\\r\\n</pre>\\n<p>Here we use the <code>socket.on()</code> event registration method (inspired by <a href=\\\"http://github.com/LearnBoost/Socket.IO\\\">socket.io</a> and NodeJS&#8217;s registration method) to listen to &#8220;message events&#8221; and retrieve data when they occur. This method is also aliased to the deprecated Dojo style <code>socket.connect()</code>.</p>\\n<p>We can also use <code>send()</code> to send data to the server. If you have just started the connection, you should wait for the <code>open</code> event to ensure the connection is ready to send data:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\nsocket.on(&quot;open&quot;, function(event){\\r\\n  socket.send(&quot;hi server&quot;);\\r\\n});\\r\\n</pre>\\n<p>Finally, we can listen for the connection being closed by the server or network by listening for the <code>close</code> event. And we can initiate the close of a connection from the client by calling <code>socket.close()</code>.</p>\\n<p>The <code>dojox/socket</code> method can also be called with standard Dojo IO arguments to initiate the communication with the server. This makes it easy to provide any necessary headers for the requests. For example:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\nvar socket = new Socket({\\r\\n\\turl:&quot;/comet&quot;,\\r\\n\\theaders: {\\r\\n\\t\\t&quot;Accept&quot;: &quot;application/json&quot;,\\r\\n\\t\\t&quot;Content-Type&quot;: &quot;application/json&quot;\\r\\n\\t}});\\r\\n</pre>\\n<p>This will automatically translate the relative URL path to a WebSocket URL (using <code>ws://</code> scheme) or an HTTP URL depending on the browser capability.</p>\\n<p>For some applications, the server may only support HTTP/long-polling (without real WebSocket support). We can also explicitly create a long-poll based connection:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\nvar socket = new Socket.LongPoll({\\r\\n\\turl:&quot;/comet&quot;,\\r\\n\\theaders: {\\r\\n\\t\\t&quot;Accept&quot;: &quot;application/json&quot;,\\r\\n\\t\\t&quot;Content-Type&quot;: &quot;application/json&quot;\\r\\n\\t}});\\r\\n</pre>\\n<p>We can also provide alternate transports in the socket arguments object. This would allow us to use the <code>get()</code> method in <code>dojo/io/script</code> to connect to a server. However, a more robust solution is to use the <a href=\\\"https://www.sitepen.com/blog/2008/07/31/cross-site-xhr-plugin-registry/\\\"><code>dojox/io/xhrPlugins</code></a> for cross-domain long-polling, which will work properly with <code>dojox/socket</code>.</p>\\n<h2>Auto-Reconnect</h2>\\n<p>In addition to <code>dojox/socket</code>, we have also added a <code>dojox/socket/Reconnect</code> module. This wraps a socket, adding auto-reconnection support. When a socket is closed by network or server problems, this module will automatically attempt to reconnect to the server on a periodic basis, with a back-off algorithm to minimize resource consumption. We can upgrade a socket to auto-reconnect by this simple code fragment:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\nrequire([&quot;dojox/socket&quot;, &quot;dojox/socket/Reconnect&quot;], \\r\\n\\tfunction (Socket, Reconnect) {\\r\\n\\t// Create socket instance\\r\\n\\tvar socket = new Reconnect(new Socket(&quot;/comet&quot;));\\r\\n});\\r\\n</pre>\\n<h2>Using Dojo WebSocket with Object Stores</h2>\\n<p>One of the other big enhancements in Dojo is the <a href=\\\"http://dojotoolkit.org/reference-guide/1.8/dojo/store.html#dojo-store\\\">Dojo object store API</a> (which supercedes the Dojo Data API), based on the HTML5 IndexedDB object store API. Dojo comes with several store wrappers, and the <code>Observable</code> store provides notification events that work very well with Comet driven updates. <code>Observable</code> is a store wrapper. To use it, we first create a store, and then wrap it with Observable:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\nrequire([\\r\\n\\t&quot;dojo/store/JsonRest&quot;,\\r\\n\\t&quot;dojo/store/Observable&quot;\\r\\n], function(JsonRest, Observable){\\r\\n\\tvar store = Observable(new JsonRest({data:myData}));\\r\\n});\\r\\n</pre>\\n<p>This store will now provide an <code>observe()</code> method on query results that widgets can use to react to changes in the data. We can notify the store of changes from the server by calling the <code>notify()</code> method on the store:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\"> \\r\\nsocket.on(&quot;message&quot;, function(event){\\r\\n  var existingId = event.data.id;\\r\\n  var object = event.data.object;\\r\\n  store.notify(object, existingId);\\r\\n});\\r\\n</pre>\\n<p>We can signal a new object by calling <code>store.notify()</code> and omitting the id, and a deleted object by omitting the object (undefined). A changed/updated object should include both.</p>\\n<h3>Handling Long-Polling from your Server</h3>\\n<p>Long-polling style connection emulation can require some care on the server-side. For many applications, the server may have sufficient information from request cookies (or other ambient data) to determine what messages to send the browser. However, other applications may vary on what information should be sent to the browser during the life of the application. Different topics may be subscribed to and unsubscribed from. In these situations, the server may need to correlate different HTTP requests with a single connection and its associated state. While there are numerous protocols, one could do this very easily be defining a unique connection and adding that as a header for the socket (the headers are added to each request in the long-poll cycles). For example, we could do:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\nrequire([\\r\\n\\t&quot;dojox/socket&quot;\\r\\n], function(Socket){\\r\\n\\tvar socket = Socket.LongPoll({\\r\\n\\t\\turl:&quot;/comet&quot;,\\r\\n\\t\\theaders: {\\r\\n\\t\\t\\t&quot;Accept&quot;: &quot;application/json&quot;,\\r\\n\\t\\t\\t&quot;Content-Type&quot;: &quot;application/json&quot;,\\r\\n\\t\\t\\t&quot;Client-Id&quot;: Math.random()\\r\\n\\t\\t}});\\r\\n});\\r\\n</pre>\\n<p>In addition, <code>dojox/socket</code> includes a <code>Pragma: long-poll</code> to indicate the first request in a series of long-poll requests to help a server ensure that the connection setup and timeout is properly handled.</p>\\n<p>We can easily use <code>dojox/socket</code> with other protocols as well:</p>\\n<h3>CometD</h3>\\n<p>To initiate a Comet connection with a <a href=\\\"http://cometd.org/\\\">CometD</a> server, we can do a CometD handshake, connection, and subscription:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\nvar socket = new Socket(&quot;/cometd&quot;);\\r\\nfunction send(data){\\r\\n  return socket.send(json.stringify(data));\\r\\n}\\r\\nsocket.on(&quot;connect&quot;, function(){\\r\\n  // send a handshake\\r\\n  send([\\r\\n    {\\r\\n       &quot;channel&quot;: &quot;/meta/handshake&quot;,\\r\\n       &quot;version&quot;: &quot;1.0&quot;,\\r\\n       &quot;minimumVersion&quot;: &quot;1.0beta&quot;,\\r\\n       &quot;supportedConnectionTypes&quot;: [&quot;long-polling&quot;] // or [&quot;callback-polling&quot;] for x-domain\\r\\n     }\\r\\n  ])\\r\\n  socket.on(&quot;message&quot;, function(data){\\r\\n    // wait for the response so we can connect with the provided client id\\r\\n    data = json.parse(data);\\r\\n    if(data.error){\\r\\n      throw new Error(error);\\r\\n    }\\r\\n    // get the client id for all future messages\\r\\n    clientId = data.clientId;\\r\\n    // send a connect message\\r\\n    send([\\r\\n      {\\r\\n         &quot;channel&quot;: &quot;/meta/connect&quot;,\\r\\n         &quot;clientId&quot;: clientId,\\r\\n         &quot;connectionType&quot;: &quot;long-polling&quot;\\r\\n       },\\r\\n       {  // also send a subscription message\\r\\n         &quot;channel&quot;: &quot;/meta/subscribe&quot;,\\r\\n         &quot;clientId&quot;: clientId,\\r\\n         &quot;subscription&quot;: &quot;/foo/**&quot;\\r\\n       }\\r\\n    ]);\\r\\n    socket.on(&quot;message&quot;, function(){\\r\\n      // handle messages from the server\\r\\n    });\\r\\n  });\\r\\n});\\r\\n</pre>\\n<h3>Socket.IO</h3>\\n<p><a href=\\\"http://socket.io/\\\">Socket.IO</a> provides a lower-level interface like <code>dojox/socket</code>, providing simple text-based message passing. Here is an example of how to connect to a Socket.IO server:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\nrequire([\\r\\n\\t&quot;dojo/request&quot;, &quot;dojox/socket&quot;\\r\\n], function(request, Socket){\\r\\n\\tvar\\r\\n\\t\\targs = {},\\r\\n\\t\\tws = typeof WebSocket != &quot;undefined&quot;,\\r\\n\\t\\turl =  ws ? &quot;/socket.io/websocket&quot; : &quot;/socket.io/xhr-polling&quot;;\\r\\n\\t\\t\\r\\n\\tvar socket = new Socket(args = {\\r\\n\\t\\turl:url,\\r\\n\\t\\theaders:{\\r\\n\\t\\t\\t&quot;Content-Type&quot;:&quot;application/x-www-urlencoded&quot;\\r\\n\\t\\t},\\r\\n\\t\\ttransport: function(args, message){\\r\\n\\t\\t\\targs.data = message; // use URL-encoding to send the message instead of a raw body\\r\\n\\t\\t\\trequest.post(url, args);\\r\\n\\t\\t}\\r\\n\\t});\\r\\n\\tvar sessionId;\\r\\n\\tsocket.on(&quot;message&quot;, function(){\\r\\n\\t\\tif (!sessionId){\\r\\n\\t\\t\\tsessionId = message;\\r\\n\\t\\t\\turl += '/' + sessionId;\\r\\n\\t\\t}else if(message.substr(0, 3) == '~h~'){\\r\\n\\t\\t\\t// a heartbeat\\r\\n\\t\\t}\\r\\n\\t});\\r\\n});\\r\\n</pre>\\n<h3>Comet Session Protocol</h3>\\n<p>And here is an example of connecting to a <a href=\\\"http://orbited.org/csp/\\\">Comet Session Protocol</a> server (the following example was tested with <a href=\\\"http://orbited.org/\\\">Orbited</a>, but could work with <a href=\\\"http://hookbox.org/\\\">Hookbox</a>, APE, and others):</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\nrequire([\\r\\n\\t&quot;dojo/json&quot;, &quot;dojox/socket&quot;\\r\\n], function(json, Socket){\\r\\n\\tvar args, socket = new Socket(args = {\\r\\n\\t\\turl: &quot;/csp/handshake&quot;\\r\\n\\t});\\r\\n\\tfunction send(data){\\r\\n\\t\\treturn socket.send(json.stringify(data));\\r\\n\\t}\\r\\n\\tvar sessionId = Math.random().toString().substring(2);\\r\\n\\tsocket.on(&quot;connect&quot;, function(){\\r\\n\\t\\tsend({session:sessionId});\\r\\n\\t\\tsocket.on(&quot;message&quot;, function(){\\r\\n\\t\\t\\targs.url = &quot;/csp/comet&quot;;\\r\\n\\t\\t\\tsend({session:sessionId});\\r\\n\\t\\t});\\r\\n\\t});\\r\\n});\\r\\n</pre>\\n<h3>Tunguska</h3>\\n<p><a href=\\\"https://www.sitepen.com/blog/2010/07/19/real-time-comet-applications-on-node-with-tunguska/\\\">Tunguska</a> provides a Comet-based interface for subscribing to data changes. This is a very simple protocol which allows us to communicate with a Tunguska server:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\nvar socket = new Socket({\\r\\n\\turl:&quot;/comet&quot;,\\r\\n\\theaders: {\\r\\n\\t\\t&quot;Accept&quot;: &quot;application/json&quot;,\\r\\n\\t\\t&quot;Content-Type&quot;: &quot;application/json&quot;,\\r\\n\\t\\t&quot;Client-Id&quot;: Math.random()\\r\\n\\t}});  \\r\\nfunction send(data){\\r\\n\\treturn socket.send(json.stringify(data));\\r\\n}\\r\\nsocket.on(&quot;connect&quot;, function(){\\r\\n\\t// now subscribe to all changes for MyTable\\r\\n\\tsend([{&quot;to&quot;:&quot;/MyTable/*&quot;, &quot;method&quot;:&quot;subscribe&quot;}]);\\r\\n});\\r\\n</pre>\\n<h2>Conclusion</h2>\\n<p>Dojo&#8217;s socket API is a flexible simple module for connecting to a variety of servers and building powerful, efficient real-time applications without constraints. This adds to the array of awesome features in Dojo.</p>\\n\",\"protected\":false},\"excerpt\":{\"rendered\":\"<p>Dojo has an API for Comet-style real-time communication based on the WebSocket API. WebSocket provides a bi-directional connection to servers that is ideal for pushing messages from a server to a client in real-time. Dojo&#8217;s dojox/socket module provides access to this API with automated fallback to HTTP-based long-polling for browsers (or servers) that do not [&hellip;]</p>\\n\",\"protected\":false},\"author\":28,\"featured_media\":22075,\"comment_status\":\"closed\",\"ping_status\":\"closed\",\"sticky\":false,\"template\":\"\",\"format\":\"standard\",\"meta\":{\"spay_email\":\"\"},\"categories\":[44,45,178],\"tags\":[159],\"series\":[],\"jetpack_featured_media_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\",\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.5 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Dojo WebSocket with AMD | SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"index, follow\\\" />\\n<meta name=\\\"googlebot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<meta name=\\\"bingbot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<link rel=\\\"canonical\\\" href=\\\"https://wp.sitepen.com/blog/dojo-websocket-with-amd/\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Dojo WebSocket with AMD | SitePen\\\" />\\n<meta property=\\\"og:description\\\" content=\\\"Dojo has an API for Comet-style real-time communication based on the WebSocket API. WebSocket provides a bi-directional connection to servers that is ideal for pushing messages from a server to a client in real-time. Dojo&#8217;s dojox/socket module provides access to this API with automated fallback to HTTP-based long-polling for browsers (or servers) that do not [&hellip;]\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://wp.sitepen.com/blog/dojo-websocket-with-amd/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:published_time\\\" content=\\\"2012-11-05T19:23:29+00:00\\\" />\\n<meta property=\\\"article:modified_time\\\" content=\\\"2020-08-01T15:14:10+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1600\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"900\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/blog/dojo-websocket-with-amd/#primaryimage\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\",\\\"width\\\":1600,\\\"height\\\":900},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/blog/dojo-websocket-with-amd/#webpage\\\",\\\"url\\\":\\\"https://wp.sitepen.com/blog/dojo-websocket-with-amd/\\\",\\\"name\\\":\\\"Dojo WebSocket with AMD | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"primaryImageOfPage\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/blog/dojo-websocket-with-amd/#primaryimage\\\"},\\\"datePublished\\\":\\\"2012-11-05T19:23:29+00:00\\\",\\\"dateModified\\\":\\\"2020-08-01T15:14:10+00:00\\\",\\\"author\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/0b6eaf72ddf34f8c761763c239c05087\\\"},\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://wp.sitepen.com/blog/dojo-websocket-with-amd/\\\"]}]},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/0b6eaf72ddf34f8c761763c239c05087\\\",\\\"name\\\":\\\"Kris Zyp\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/0c073304e94b11bc5a45aa6a3b5fedb7?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Kris Zyp\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/5475\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/post\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/28\"}],\"replies\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/comments?post=5475\"}],\"version-history\":[{\"count\":1,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/5475/revisions\"}],\"predecessor-version\":[{\"id\":26359,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/5475/revisions/26359\"}],\"wp:featuredmedia\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/22075\"}],\"wp:attachment\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media?parent=5475\"}],\"wp:term\":[{\"taxonomy\":\"category\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/categories?post=5475\"},{\"taxonomy\":\"post_tag\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/tags?post=5475\"},{\"taxonomy\":\"series\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/series?post=5475\"}],\"curies\":[{\"name\":\"wp\",\"href\":\"https://api.w.org/{rel}\",\"templated\":true}]},\"_embedded\":{\"author\":[{\"id\":28,\"name\":\"Kris Zyp\",\"url\":\"https://www.sitepen.com\",\"description\":\"\",\"link\":\"https://wp.sitepen.com/blog/author/kzyp/\",\"slug\":\"kzyp\",\"avatar_urls\":{\"24\":\"https://secure.gravatar.com/avatar/0c073304e94b11bc5a45aa6a3b5fedb7?s=24&d=mm&r=g\",\"48\":\"https://secure.gravatar.com/avatar/0c073304e94b11bc5a45aa6a3b5fedb7?s=48&d=mm&r=g\",\"96\":\"https://secure.gravatar.com/avatar/0c073304e94b11bc5a45aa6a3b5fedb7?s=96&d=mm&r=g\"},\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.5 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Kris Zyp, Author at SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"profile\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Kris Zyp, Author at SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/author/kzyp/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://secure.gravatar.com/avatar/0c073304e94b11bc5a45aa6a3b5fedb7?s=500&#038;d=mm&#038;r=g\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ProfilePage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/kzyp/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/author/kzyp/\\\",\\\"name\\\":\\\"Kris Zyp, Author at SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/0b6eaf72ddf34f8c761763c239c05087\\\",\\\"name\\\":\\\"Kris Zyp\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/0c073304e94b11bc5a45aa6a3b5fedb7?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Kris Zyp\\\"},\\\"mainEntityOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/kzyp/#webpage\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/28\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users\"}]}}],\"wp:featuredmedia\":[{\"id\":22075,\"date\":\"2020-01-22T13:53:07\",\"slug\":\"og_imagev1\",\"type\":\"attachment\",\"link\":\"https://wp.sitepen.com/og_imagev1/\",\"title\":{\"rendered\":\"og_imageV1\"},\"author\":9,\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.5 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>og_imageV1 | SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"og_imageV1 | SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1600\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"900\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg#webpage\\\",\\\"url\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\",\\\"name\\\":\\\"og_imageV1 | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"datePublished\\\":\\\"2020-01-22T21:53:07+00:00\\\",\\\"dateModified\\\":\\\"2020-01-22T21:53:07+00:00\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\"]}]}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"caption\":{\"rendered\":\"\"},\"alt_text\":\"\",\"media_type\":\"image\",\"mime_type\":\"image/jpeg\",\"media_details\":{\"width\":1600,\"height\":900,\"file\":\"2020/01/og_imageV1.jpg\",\"sizes\":{\"medium\":{\"file\":\"og_imageV1-300x169.jpg\",\"width\":300,\"height\":169,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-300x169.jpg\"},\"large\":{\"file\":\"og_imageV1-1024x576.jpg\",\"width\":1024,\"height\":576,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-1024x576.jpg\"},\"thumbnail\":{\"file\":\"og_imageV1-150x150.jpg\",\"width\":150,\"height\":150,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-150x150.jpg\"},\"medium_large\":{\"file\":\"og_imageV1-768x432.jpg\",\"width\":768,\"height\":432,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-768x432.jpg\"},\"1536x1536\":{\"file\":\"og_imageV1-1536x864.jpg\",\"width\":1536,\"height\":864,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-1536x864.jpg\"},\"full\":{\"file\":\"og_imageV1.jpg\",\"width\":1600,\"height\":900,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\"}},\"image_meta\":{\"aperture\":\"0\",\"credit\":\"\",\"camera\":\"\",\"caption\":\"\",\"created_timestamp\":\"0\",\"copyright\":\"\",\"focal_length\":\"0\",\"iso\":\"0\",\"shutter_speed\":\"0\",\"title\":\"\",\"orientation\":\"0\",\"keywords\":[]}},\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/22075\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/attachment\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/9\"}]}}]}}]","headers":[["access-control-allow-headers","Authorization, Content-Type"],["access-control-expose-headers","X-WP-Total, X-WP-TotalPages"],["allow","GET"],["cache-control","max-age=2592000"],["connection","close"],["content-type","application/json; charset=UTF-8"],["date","Sat, 01 Aug 2020 15:29:36 GMT"],["expires","Mon, 31 Aug 2020 15:29:36 GMT"],["link","<https://wp.sitepen.com/wp-json/>; rel=\"https://api.w.org/\""],["server","Apache"],["transfer-encoding","chunked"],["vary","Origin"],["x-content-type-options","nosniff"],["x-powered-by","PHP/7.3.16-1+0~20200320.56+debian9~1.gbp370a75"],["x-robots-tag","noindex"],["x-wp-total","1"],["x-wp-totalpages","1"]]},"type":"Object"}