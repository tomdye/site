{"value":{"body":"[{\"id\":6336,\"date\":\"2014-04-11T09:41:09\",\"date_gmt\":\"2014-04-11T16:41:09\",\"guid\":{\"rendered\":\"https://www.sitepen.com/blog/?p=6336\"},\"modified\":\"2020-08-01T08:13:19\",\"modified_gmt\":\"2020-08-01T15:13:19\",\"slug\":\"extension-events\",\"status\":\"publish\",\"type\":\"post\",\"link\":\"https://wp.sitepen.com/blog/extension-events/\",\"title\":{\"rendered\":\"Extension Events\"},\"content\":{\"rendered\":\"<p>When working in an event-driven environment such as the web, it is important to utilize tools that allow you to create succinct, easy-to-read code that&#8217;s extensible and flexible. One great mechanism that Dojo provides is the ability to use extension events.</p>\\n<h3>What Are They?</h3>\\n<p>Extension events are functions that are passed in lieu of an event type to <code><a href=\\\"http://dojotoolkit.org/reference-guide/dojo/on.html\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">dojo/on</a></code>. The extension event function should accept a DOM node and an event listener. The function should encapsulate any logic related to the node and invoke the listener when appropriate. The most common case is adding a listener to a native DOM event (<code>click</code>, <code>mouseover</code>, etc.) with custom logic included that determines whether the handler is called or not.</p>\\n<p><!--more--></p>\\n<h3>Why Are They Useful?</h3>\\n<p>Extension events are useful because they enable you to encapsulate commonly used event-handler logic in pseudo-event functions and assign the function a relevant name for reuse. Instead of registering an event handler for a native DOM event and repeatedly including code that tests for conditions relevant to your application logic, you can put that code in an extension event and register event handlers for the extension event with <code>dojo/on</code>. This is great because it allows you to keep your code clean and organized. Another benefit extension events provide is a consistent event API for multiple event types.</p>\\n<h3>How Are They Implemented?</h3>\\n<p>Extension event functions are executed immediately and are passed a target DOM node and the event listener. The extension event is responsible for attaching the event and is expected to return a handle-like object with a <code>remove</code> method similar to the handle object returned by <code>dojo/on</code>. If you are attaching a single event inside of an extension event, you can return the handler from an internal <code>dojo/on</code> call. Let&#8217;s look at implementing a <code>mouseenter</code>/<code>mouseover</code> extension event that will flatten the event API without additional code in our <code>dojo/on</code> call. While the <a href=\\\"https://bugs.webkit.org/show_bug.cgi?id=18930\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">mouseenter event type was added to WebKit recently</a>, it is still not available as a native event type for some browsers such as Safari.</p>\\n<p>HTML:</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">&lt;div id=&quot;testNode&quot;&gt;Hover Over Me&lt;/div&gt;</pre>\\n<p>JavaScript:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">require([\\r\\n    'dojo/on',\\r\\n    'dojo/dom'\\r\\n], function (on, dom) {\\r\\n    // Define an extension event function\\r\\n    function mouseEnter(node, listener) {\\r\\n        // Use dojo/on for DOM event handling\\r\\n        return on(node, 'mouseover', function (event) {\\r\\n            // Add custom logic for the extension event:\\r\\n            // If the node currently receiving the 'mouseover' event\\r\\n            // is not a descendant of the node previously being\\r\\n            // moused over (event.relatedTarget), then the cursor has\\r\\n            // entered a new node and the handler for the 'mouseEnter'\\r\\n            // extension event should be called\\r\\n            if (!dom.isDescendant(event.relatedTarget, node)) {\\r\\n                console.log('mouseEnter');\\r\\n                listener.apply(node, arguments);\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    // Example usage of the 'mouseEnter' extension event\\r\\n    on(dom.byId('testNode'), mouseEnter, function () {\\r\\n        console.log('entered');\\r\\n    });\\r\\n});</pre>\\n<p>So far, the example always uses the native <code>mouseover</code> event. To make this custom handler more efficiently handle browsers that implement the <code>mouseenter</code> event natively versus those that do not, we can add logic to detect the native event and defer to it if available:</p>\\n<pre class=\\\"brush: plain; title: ; notranslate\\\" title=\\\"\\\">require([\\r\\n    'dojo/on',\\r\\n    'dojo/dom',\\r\\n    'dojo/has'\\r\\n], function (on, dom, has) {\\r\\n    // Add a &quot;has&quot; test to detect native availability of the\\r\\n    // 'mouseenter' event\\r\\n    has.add('mouseenter', function () {\\r\\n        var node = document.createElement('div');\\r\\n        return &quot;onmouseenter&quot; in node;\\r\\n    });\\r\\n\\r\\n    function mouseEnter(node, listener) {\\r\\n        if (has('mouseenter')) {\\r\\n            // If the browser natively supports the 'mouseenter'\\r\\n            // event then register a handler for it\\r\\n            return on(node, 'mouseenter', function () {\\r\\n                console.log('native mouseenter');\\r\\n                listener.apply(node, arguments);\\r\\n            });\\r\\n        }\\r\\n        else {\\r\\n            return on(node, 'mouseover', function (event) {\\r\\n                if (!dom.isDescendant(event.relatedTarget, node)) {\\r\\n                    console.log('mouseEnter');\\r\\n                    listener.apply(node, arguments);\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Example usage of the 'mouseEnter' extension event\\r\\n    on(dom.byId('testNode'), mouseEnter, function () {\\r\\n        console.log('entered');\\r\\n    });\\r\\n});</pre>\\n<p>This allows us to simply pass <code>mouseEnter</code> as the event type and <code>dojo/on</code> and our extension event will handle the rest. As you can see, this is an extremely useful tool. The Dojo Toolkit leverages extension events in a few key areas: <a href=\\\"http://dojotoolkit.org/reference-guide/dojo/touch.html\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">dojo/touch</a> and <a href=\\\"http://dojotoolkit.org/reference-guide/dojo/mouse.html\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">dojo/mouse</a>.</p>\\n<h3>Putting It To Work</h3>\\n<p>We&#8217;ve seen what extension events are and how we can use them, let&#8217;s build a solution to a common problem. Sometimes we want to pause or temporarily disable an event handler. WhileÂ <code>dojo/on</code> provides an <code>on.pausable</code> method, the <code>dojo/Evented</code> module, which widgets use, does not expose a method to pause events. We can write an extension event to handle this.</p>\\n<p>HTML:</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">&lt;button id=&quot;pausable&quot;&gt;Pausable Button&lt;/button&gt;\\r\\n&lt;button id=&quot;pause&quot;&gt;Pause&lt;/button&gt;</pre>\\n<p>pausable.js:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">define([\\r\\n\\t'dojo/on'\\r\\n], function (on) {\\r\\n\\treturn function (type) {\\r\\n\\t\\treturn function (node, listener) {\\r\\n\\t\\t\\tvar paused = false,\\r\\n\\t\\t\\t\\tsignal;\\r\\n\\r\\n\\t\\t\\tsignal = on(node, type, function () {\\r\\n\\t\\t\\t\\tif (!paused) {\\r\\n\\t\\t\\t\\t\\tlistener.apply(node, arguments);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t});\\r\\n\\r\\n\\t\\t\\tsignal.pause = function () {\\r\\n\\t\\t\\t\\tpaused = true;\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\t\\tsignal.resume = function () {\\r\\n\\t\\t\\t\\tpaused = false;\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\t\\tsignal.isPaused = function () {\\r\\n\\t\\t\\t\\treturn paused;\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\t\\treturn signal;\\r\\n\\t\\t};\\r\\n\\t};\\r\\n});</pre>\\n<p>Using pausable.js:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">require([\\r\\n\\t'dijit/form/Button',\\r\\n\\t'demo/pausable'\\r\\n], function (Button, pausable) {\\r\\n\\tvar pausableButton = new Button({}, 'pausable'),\\r\\n\\t\\tpauseButton = new Button({}, 'pause'),\\r\\n\\t\\thandle;\\r\\n\\r\\n\\thandle = pausableButton.on(pausable('click'), function () {\\r\\n\\t\\tconsole.log('Clicked!');\\r\\n\\t});\\r\\n\\r\\n\\tpauseButton.on('click', function () {\\r\\n\\t\\tif (handle.isPaused()) {\\r\\n\\t\\t\\thandle.resume();\\r\\n\\t\\t\\tpauseButton.set('label', 'Pause');\\r\\n\\t\\t} else {\\r\\n\\t\\t\\thandle.pause();\\r\\n\\t\\t\\tpauseButton.set('label', 'Unpause');\\r\\n\\t\\t}\\r\\n\\t});\\r\\n});</pre>\\n<p>In this example, we&#8217;ve now created a module that allows for pausable events to be used on both DOM nodes as well as widgets in a uniform and flattened API.</p>\\n<p>Now that we&#8217;ve seen how extension events can add awesome event functionality to objects that would otherwise not have it, let&#8217;s look at an example of how extension events can be used to handle multiple events on a node. In the following example, we will compensate for browsers that do not fire events in a predictable manner, We will listen for both <code>keypress</code> and <code>keydown</code> events and the first one that fires wins.</p>\\n<p>HTML:</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">&lt;input type=&quot;text&quot; id=&quot;input&quot; /&gt;</pre>\\n<p>JavaScript:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">require([\\r\\n\\t'dojo/on',\\r\\n\\t'dojo/dom',\\r\\n], function (on, dom) {\\r\\n\\tfunction keyPressOrDown(node, listener) {\\r\\n\\t\\tvar fired = false;\\r\\n\\t\\tvar keydown;\\r\\n\\t\\tvar keypress;\\r\\n\\r\\n\\t\\t// Handle keydown events from node\\r\\n\\t\\tkeydown = on(node, 'keydown', function () {\\r\\n\\t\\t\\tif (!fired) {\\r\\n\\t\\t\\t\\tconsole.log('keydown');\\r\\n\\r\\n\\t\\t\\t\\tlistener.apply(node, arguments);\\r\\n\\t\\t\\t\\tfired = true;\\r\\n\\t\\t\\t}\\r\\n\\t\\t});\\r\\n\\r\\n\\t\\t// Handle keypress events from node\\r\\n\\t\\tkeypress = on(node, 'keypress', function () {\\r\\n\\t\\t\\tif (!fired) {\\r\\n\\t\\t\\t\\tconsole.log('keypress');\\r\\n\\r\\n\\t\\t\\t\\tlistener.apply(node, arguments);\\r\\n\\t\\t\\t\\tfired = true;\\r\\n\\t\\t\\t}\\r\\n\\t\\t});\\r\\n\\r\\n\\t\\treturn {\\r\\n\\t\\t\\tremove: function () {\\r\\n\\t\\t\\t\\t// Any event handlers registered by this \\r\\n\\t\\t\\t\\t// extension event will need to be removed\\r\\n\\t\\t\\t\\tkeydown.remove();\\r\\n\\t\\t\\t\\tkeypress.remove();\\r\\n\\t\\t\\t}\\r\\n\\t\\t};\\r\\n\\t}\\r\\n\\r\\n\\ton(dom.byId('input'), keyPressOrDown, function () {\\r\\n\\t\\tconsole.log('Event Fired');\\r\\n\\t});\\r\\n});</pre>\\n<p>In this example, <code>keyPressOrDown</code> attaches event handlers for both <code>onkeypress</code> and <code>onkeydown</code> to our input field and guarantees that <code>listener</code> is called only once. In order to clean up the event handlers registered our extension event , <code>keyPressOrDown</code> returns a handler with a <code>remove</code> method that removes the <code>onkeypress</code> and <code>onkeydown</code> event handlers.</p>\\n<h3>Conclusion</h3>\\n<p>As you can see, extension events are a very powerful tool that can help abstract your events and help you provide a consistent event handling API for multiple event types. If you&#8217;re interested in learning more about extension events or Dojo in general, at SitePen we offer extensive <a href=\\\"https://www.sitepen.com/workshops\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Dojo workshops</a> to help turn you into a Dojo master. Dojo 101 covers <code>dojo/on</code>, <code>dojo/aspect</code>, and <code>dojo/topic</code>, while Dojo 201 covers widgets &amp; widget events in depth, including extension events and <code>dojo/Evented</code>.</p>\\n\",\"protected\":false},\"excerpt\":{\"rendered\":\"<p>When working in an event-driven environment such as the web, it is important to utilize tools that allow you to create succinct, easy-to-read code that&#8217;s extensible and flexible. One great mechanism that Dojo provides is the ability to use extension events. What Are They? Extension events are functions that are passed in lieu of an [&hellip;]</p>\\n\",\"protected\":false},\"author\":43,\"featured_media\":22075,\"comment_status\":\"closed\",\"ping_status\":\"closed\",\"sticky\":false,\"template\":\"\",\"format\":\"standard\",\"meta\":{\"spay_email\":\"\"},\"categories\":[45,3],\"tags\":[387,190],\"series\":[],\"jetpack_featured_media_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\",\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Extension Events | SitePen</title>\\n<meta name=\\\"description\\\" content=\\\"When working in an event-driven environment such as the web, it is important to utilize tools that allow you to create succinct, easy-to-read code that&#039;s extensible and flexible. One great mechanism that Dojo provides is the ability to use extension events. What Are They? Extension events are functions that are passed in\\\" />\\n<meta name=\\\"robots\\\" content=\\\"index, follow\\\" />\\n<meta name=\\\"googlebot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<meta name=\\\"bingbot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<link rel=\\\"canonical\\\" href=\\\"https://wp.sitepen.com/blog/extension-events/\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Extension Events | SitePen\\\" />\\n<meta property=\\\"og:description\\\" content=\\\"When working in an event-driven environment such as the web, it is important to utilize tools that allow you to create succinct, easy-to-read code that&#039;s extensible and flexible. One great mechanism that Dojo provides is the ability to use extension events. What Are They? Extension events are functions that are passed in\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://wp.sitepen.com/blog/extension-events/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:published_time\\\" content=\\\"2014-04-11T16:41:09+00:00\\\" />\\n<meta property=\\\"article:modified_time\\\" content=\\\"2020-08-01T15:13:19+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1600\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"900\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/blog/extension-events/#primaryimage\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\",\\\"width\\\":1600,\\\"height\\\":900},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/blog/extension-events/#webpage\\\",\\\"url\\\":\\\"https://wp.sitepen.com/blog/extension-events/\\\",\\\"name\\\":\\\"Extension Events | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"primaryImageOfPage\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/blog/extension-events/#primaryimage\\\"},\\\"datePublished\\\":\\\"2014-04-11T16:41:09+00:00\\\",\\\"dateModified\\\":\\\"2020-08-01T15:13:19+00:00\\\",\\\"author\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/d26d1a7b34bba79757f0b73269ffb051\\\"},\\\"description\\\":\\\"When working in an event-driven environment such as the web, it is important to utilize tools that allow you to create succinct, easy-to-read code that's extensible and flexible. One great mechanism that Dojo provides is the ability to use extension events. What Are They? Extension events are functions that are passed in\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://wp.sitepen.com/blog/extension-events/\\\"]}]},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/d26d1a7b34bba79757f0b73269ffb051\\\",\\\"name\\\":\\\"Mangala SSS Khalsa\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/f70b4a426631ceef7247191be7e30be4?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Mangala SSS Khalsa\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/6336\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/post\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/43\"}],\"replies\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/comments?post=6336\"}],\"version-history\":[{\"count\":2,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/6336/revisions\"}],\"predecessor-version\":[{\"id\":26357,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/6336/revisions/26357\"}],\"wp:featuredmedia\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/22075\"}],\"wp:attachment\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media?parent=6336\"}],\"wp:term\":[{\"taxonomy\":\"category\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/categories?post=6336\"},{\"taxonomy\":\"post_tag\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/tags?post=6336\"},{\"taxonomy\":\"series\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/series?post=6336\"}],\"curies\":[{\"name\":\"wp\",\"href\":\"https://api.w.org/{rel}\",\"templated\":true}]},\"_embedded\":{\"author\":[{\"id\":43,\"name\":\"Mangala SSS Khalsa\",\"url\":\"https://www.sitepen.com\",\"description\":\"\",\"link\":\"https://wp.sitepen.com/blog/author/mkhalsa/\",\"slug\":\"mkhalsa\",\"avatar_urls\":{\"24\":\"https://secure.gravatar.com/avatar/f70b4a426631ceef7247191be7e30be4?s=24&d=mm&r=g\",\"48\":\"https://secure.gravatar.com/avatar/f70b4a426631ceef7247191be7e30be4?s=48&d=mm&r=g\",\"96\":\"https://secure.gravatar.com/avatar/f70b4a426631ceef7247191be7e30be4?s=96&d=mm&r=g\"},\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Mangala SSS Khalsa, Author at SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"profile\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Mangala SSS Khalsa, Author at SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/author/mkhalsa/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://secure.gravatar.com/avatar/f70b4a426631ceef7247191be7e30be4?s=500&#038;d=mm&#038;r=g\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ProfilePage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/mkhalsa/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/author/mkhalsa/\\\",\\\"name\\\":\\\"Mangala SSS Khalsa, Author at SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/d26d1a7b34bba79757f0b73269ffb051\\\",\\\"name\\\":\\\"Mangala SSS Khalsa\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/f70b4a426631ceef7247191be7e30be4?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Mangala SSS Khalsa\\\"},\\\"mainEntityOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/mkhalsa/#webpage\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/43\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users\"}]}}],\"wp:featuredmedia\":[{\"id\":22075,\"date\":\"2020-01-22T13:53:07\",\"slug\":\"og_imagev1\",\"type\":\"attachment\",\"link\":\"https://wp.sitepen.com/og_imagev1/\",\"title\":{\"rendered\":\"og_imageV1\"},\"author\":9,\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>og_imageV1 | SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"og_imageV1 | SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1600\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"900\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg#webpage\\\",\\\"url\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\",\\\"name\\\":\\\"og_imageV1 | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"datePublished\\\":\\\"2020-01-22T21:53:07+00:00\\\",\\\"dateModified\\\":\\\"2020-01-22T21:53:07+00:00\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\"]}]}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"caption\":{\"rendered\":\"\"},\"alt_text\":\"\",\"media_type\":\"image\",\"mime_type\":\"image/jpeg\",\"media_details\":{\"width\":1600,\"height\":900,\"file\":\"2020/01/og_imageV1.jpg\",\"sizes\":{\"medium\":{\"file\":\"og_imageV1-300x169.jpg\",\"width\":300,\"height\":169,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-300x169.jpg\"},\"large\":{\"file\":\"og_imageV1-1024x576.jpg\",\"width\":1024,\"height\":576,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-1024x576.jpg\"},\"thumbnail\":{\"file\":\"og_imageV1-150x150.jpg\",\"width\":150,\"height\":150,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-150x150.jpg\"},\"medium_large\":{\"file\":\"og_imageV1-768x432.jpg\",\"width\":768,\"height\":432,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-768x432.jpg\"},\"1536x1536\":{\"file\":\"og_imageV1-1536x864.jpg\",\"width\":1536,\"height\":864,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-1536x864.jpg\"},\"full\":{\"file\":\"og_imageV1.jpg\",\"width\":1600,\"height\":900,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\"}},\"image_meta\":{\"aperture\":\"0\",\"credit\":\"\",\"camera\":\"\",\"caption\":\"\",\"created_timestamp\":\"0\",\"copyright\":\"\",\"focal_length\":\"0\",\"iso\":\"0\",\"shutter_speed\":\"0\",\"title\":\"\",\"orientation\":\"0\",\"keywords\":[]}},\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/22075\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/attachment\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/9\"}]}}]}}]","headers":[["access-control-allow-headers","Authorization, Content-Type"],["access-control-expose-headers","X-WP-Total, X-WP-TotalPages"],["allow","GET"],["cache-control","max-age=2592000"],["connection","close"],["content-type","application/json; charset=UTF-8"],["date","Mon, 10 Aug 2020 15:31:57 GMT"],["expires","Wed, 09 Sep 2020 15:31:57 GMT"],["link","<https://wp.sitepen.com/wp-json/>; rel=\"https://api.w.org/\""],["server","Apache"],["transfer-encoding","chunked"],["vary","Origin"],["x-content-type-options","nosniff"],["x-powered-by","PHP/7.3.21-1+0~20200807.66+debian9~1.gbp18a1c2"],["x-robots-tag","noindex"],["x-wp-total","1"],["x-wp-totalpages","1"]]},"type":"Object"}