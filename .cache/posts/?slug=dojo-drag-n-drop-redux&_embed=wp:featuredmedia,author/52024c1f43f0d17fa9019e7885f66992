{"value":{"body":"[{\"id\":3198,\"date\":\"2011-12-05T13:33:14\",\"date_gmt\":\"2011-12-05T20:33:14\",\"guid\":{\"rendered\":\"https://www.sitepen.com/blog/?p=3198\"},\"modified\":\"2019-12-11T05:39:06\",\"modified_gmt\":\"2019-12-11T13:39:06\",\"slug\":\"dojo-drag-n-drop-redux\",\"status\":\"publish\",\"type\":\"post\",\"link\":\"https://wp.sitepen.com/blog/dojo-drag-n-drop-redux/\",\"title\":{\"rendered\":\"Dojo Drag’n’Drop Redux\"},\"content\":{\"rendered\":\"<p><strong>dojo/dnd</strong> is one of Dojo’s core APIs and is designed to manage the process of dragging and dropping items between two or more containers. It offers advanced features like multiple selections, item acceptance filtering on drop targets, and other behavioral tweaks. Let’s learn how to use it!</p>\\n<p style=\\\"font-style: italic;\\\">This is an updated version of the original article, <a href=\\\"https://www.sitepen.com/blog/2008/06/10/dojo-drag-and-drop-1/\\\">Dojo Drag and Drop, Part 1</a>, published in 2008.</p>\\n<p><!--more--></p>\\n<h2>Simple Single Source DnD</h2>\\n<p>Meet Dylan. Collecting junk is his passion. A while back, he decided that he needed to get rid of some of it to make room for more interesting junk, so he got a booth at the local farmers’ market and started a small junk outlet business. Like most people passionate about sharing their junk with the world, he decided to open an online storefront. <img style=\\\"float: right; margin: 20px 0 20px 6px;\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2011/12/dylans-original.jpg\\\" alt=\\\"Dylan’s Original Junk Outlet\\\" /> His brother, currently working towards a degree in Marketing, convinced him that he needed to brand himself as a form of differentiation; thus was born <em>Dylan’s Original</em>. He decided that his best bet would be to create a user experience so ridiculously awesome that people wouldn’t be able to help buying his junk. That’s where we come in. To demonstrate drag and drop techniques, we’ll help build a mockup of <em>Dylan’s Original Junk Outlet</em>.</p>\\n<p>Let’s start with the basics. Just about the easiest way to get drag and drop working is to demonstrate a single list that the user can reorder dynamically. First, we’ll create our page skeleton, using Dojo from the <a href=\\\"https://code.google.com/apis/libraries/devguide.html#dojo\\\">Google CDN</a> spiced up with a bit of CSS. <a href=\\\"http://sitepen.github.com/sp-dnd-demo/0-dnd.html\\\">View the starting point</a>.</p>\\n<p>As you can see, we’re starting with a simple wish list:</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\r\\n&lt;div id=&quot;store&quot;&gt;\\r\\n&lt;div class=&quot;wishlistContainer&quot;&gt;\\r\\n&lt;h2&gt;Wishlist&lt;/h2&gt;\\r\\n&lt;ol id=&quot;wishlistNode&quot; class=&quot;container&quot;&gt;\\r\\n\\t&lt;li&gt;Wrist watch&lt;/li&gt;\\r\\n\\t&lt;li&gt;Life jacket&lt;/li&gt;\\r\\n\\t&lt;li&gt;Toy bulldozer&lt;/li&gt;\\r\\n\\t&lt;li&gt;Vintage microphone&lt;/li&gt;\\r\\n\\t&lt;li&gt;TIE fighter&lt;/li&gt;\\r\\n&lt;/ol&gt;\\r\\n&lt;/div&gt;\\r\\n&lt;/div&gt;</pre>\\n<h3>The DnD Workhorse, dojo/dnd/Source</h3>\\n<p><img style=\\\"float: right; position:relative; z-index:2; margin: 0 0 10px 10px;\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2011/12/wishlist-1.jpg\\\" alt=\\\"An online store wishlist\\\" /><br />\\n To enable drag and drop, dojo/dnd gives us a class called <a href=\\\"http://dojotoolkit.org/api/dojo/dnd/Source\\\">Source</a>, which is basically just what it sounds like: a source for dragged items (as well as a target for dropped items). To instantly turn a DOM node into such a source, create a dojo/dnd/Source out of it:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">require([ &quot;dojo/dnd/Source&quot;, \\r\\n\\t&quot;dojo/domReady!&quot; ],\\r\\n    function(Source){\\r\\n    var wishlist =\\r\\n        new Source(&quot;wishlistNode&quot;);\\r\\n    wishlist.insertNodes(false, [\\r\\n        &quot;Wrist watch&quot;,\\r\\n        &quot;Life jacket&quot;,\\r\\n        &quot;Toy bulldozer&quot;,\\r\\n        &quot;Vintage microphone&quot;,\\r\\n        &quot;TIE fighter&quot;\\r\\n    ]);\\r\\n});</pre>\\n<p>That’s all there is to it! <a href=\\\"http://sitepen.github.com/sp-dnd-demo/1-dnd.html\\\">View the single container DnD example</a>. If you like to create UIs declaratively, instantiate the list in markup with <code>data-dojo-type=\\\"dojo.dnd.Source\\\"</code> and use <code>class=\\\"dojoDndItem\\\"</code> on draggable child nodes, like so:</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\r\\n&lt;ol data-dojo-type=&quot;dojo.dnd.Source&quot; id=&quot;wishlistNode&quot; class=&quot;container&quot;&gt;\\r\\n\\t&lt;li class=&quot;dojoDndItem&quot;&gt;Wrist watch&lt;/li&gt;\\r\\n\\t&lt;li class=&quot;dojoDndItem&quot;&gt;Life jacket&lt;/li&gt;\\r\\n\\t&lt;li class=&quot;dojoDndItem&quot;&gt;Toy bulldozer&lt;/li&gt;\\r\\n\\t&lt;li class=&quot;dojoDndItem&quot;&gt;Vintage microphone&lt;/li&gt;\\r\\n\\t&lt;li class=&quot;dojoDndItem&quot;&gt;TIE fighter&lt;/li&gt;\\r\\n&lt;/ol&gt;\\r\\n</pre>\\n<p>Of course, when working declaratively, you have to make sure to add <code>dojo/parser</code> and <code>dojo/dnd/Source</code> to the loader’s <code>deps</code> list and enable <code>parseOnLoad</code>, but there you go. <a href=\\\"http://sitepen.github.com/sp-dnd-demo/1-dnd.markup.html\\\">View the demo, declarative style</a>.</p>\\n<p>What can you turn into a DnD source? Well sheesh, what <em>can’t</em> you turn into a DnD source? Take a look at the <a href=\\\"http://dojotoolkit.org/reference-guide/dojo/dnd.html\\\">reference guide</a>. The Source class will take into account the node type of your container when creating child nodes:</p>\\n<ul>\\n<li>If the container is <code>&lt;div></code> or <code>&lt;p></code>, it will create <code>&lt;div></code> nodes.</li>\\n<li>If the container is <code>&lt;ul></code> or <code>&lt;ol></code>, it will create <code>&lt;li></code> nodes.</li>\\n<li>If the container is a <code>&lt;table></code>, it will create a set of <code>&lt;tr>&lt;td></code> and add it to the table’s <code>&lt;tbody></code>.</li>\\n<li>All other times, it will create <code>&lt;span></code> nodes.</li>\\n</ul>\\n<p>So basically, turn whatever you want into a Source, and Dojo will intelligently set up your DOM. Pretty nifty! Out of the box, dojo/dnd/Source has quite a lot of functionality baked in:</p>\\n<ul>\\n<li><strong>Multiple selection.</strong> Each container has the notion of a selection; click on an item and it’s “selected”. ?-click/ctrl-click or shift-click do multiple selection, just like in a regular application.</li>\\n<li><strong>Child node introspection.</strong> In addition to the <code>insertNodes</code> method demonstrated above, the Source provides a few methods to work with the list of child nodes:\\n<ul>\\n<li><code>getAllNodes()</code> – returns a Dojo <code>NodeList</code> of the contained items.</li>\\n<li><code>forInItems(fn, ctx)</code> – calls <code>fn</code> in the context of <code>ctx</code> for each contained node. Similar to <code>dojo.forEach</code>.</li>\\n<li><code>selectNone()</code>, <code>selectAll()</code>, <code>getSelectedNodes()</code>, <code>deleteSelectedNodes()</code> – just what they sound like: methods for manipulating the selection state.</li>\\n<li>plus a few other things you can hook into for customizing the way the internal list gets handled. See the <a href=\\\"http://dojotoolkit.org/reference-guide/dojo/dnd.html\\\">reference guide</a> for details.</li>\\n</ul>\\n</li>\\n<li><strong>Copy vs. move semantics.</strong> By default, nodes are moved when you drag them around. However, holding ?/ctrl and dragging performs a copy operation instead, similar to most desktop file managers. This is useful when you don’t want your DnD source to change in response to a user’s drag operations.</li>\\n<li><strong>Drag cancellation.</strong> This isn’t technically a property of the Source, but it’s worth noting here that pressing the Esc key cancels the current drag operation. You can do this programmatically, too, if you need to.</li>\\n<li><strong>Automatic avatar creation.</strong> The dojo/dnd framework uses “avatars” to represent the nodes you drag around. It creates these for you automatically, based on the data itself. You can customize this, of course; more on that later.</li>\\n</ul>\\n<p><img style=\\\"float: right; margin: 0 0 10px 10px;\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2011/12/catalog-2.jpg\\\" alt=\\\"An online store product list, mid-drag\\\" /></p>\\n<h2>Using Multiple Sources</h2>\\n<p>Of course, if you’re only using a single Source in your application, the move/copy distinction is only useful for duplicating nodes in the list. Let’s help Dylan expand. Check out <a href=\\\"http://sitepen.github.com/sp-dnd-demo/2-dnd.html\\\">Dylan’s Original Junk Outlet, version 2</a> (and the <a href=\\\"http://sitepen.github.com/sp-dnd-demo/2-dnd.markup.html\\\">declarative version</a>).</p>\\n<p>What have we changed? Well, for starters, we now have three Sources: the Catalog, the Cart, and the Wishlist. Now you can drag items back and forth between them to see multiple-container dojo/dnd in action. Some items are marked as “out of stock” (more on this in a bit), and… hey, some of these items aren’t junk at all—they’re food! Yes, while we weren’t looking, Dylan merged his junk outlet with <em>Dylan’s Nutritious Dietarium</em>, the company he uses to unload what he doesn’t eat from his garden.</p>\\n<h3>DnD Item Types</h3>\\n<p>The biggest change here is the introduction of item types. Notice the new <code>accept</code> and <code>type</code> properties:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">require([ &quot;dojo/dom-class&quot;, &quot;dojo/dnd/Source&quot;, &quot;dojo/domReady!&quot; ], \\r\\n\\t\\tfunction(domClass, Source){\\r\\n\\tvar catalog = new Source(&quot;catalogNode&quot;, \\r\\n\\t\\t{ accept: [ &quot;inStock&quot;, &quot;outOfStock&quot; ] });\\r\\n\\tcatalog.insertNodes(false, [\\r\\n\\t\\t{ data: &quot;Wrist watch&quot;,        type: [ &quot;inStock&quot; ] },\\r\\n\\t\\t{ data: &quot;Life jacket&quot;,        type: [ &quot;inStock&quot; ] },\\r\\n\\t\\t{ data: &quot;Toy bulldozer&quot;,      type: [ &quot;inStock&quot; ] },\\r\\n\\t\\t{ data: &quot;Vintage microphone&quot;, type: [ &quot;outOfStock&quot; ] },\\r\\n\\t\\t{ data: &quot;TIE fighter&quot;,        type: [ &quot;outOfStock&quot; ] },\\r\\n\\t\\t{ data: &quot;Apples&quot;,             type: [ &quot;inStock&quot; ] },\\r\\n\\t\\t{ data: &quot;Bananas&quot;,            type: [ &quot;inStock&quot; ] },\\r\\n\\t\\t{ data: &quot;Tomatoes&quot;,           type: [ &quot;outOfStock&quot; ] },\\r\\n\\t\\t{ data: &quot;Bread&quot;,              type: [ &quot;inStock&quot; ] }\\r\\n\\t]);\\r\\n\\tcatalog.forInItems(function(item, id, map){\\r\\n\\t\\tdomClass.add(id, item.type[0]);\\r\\n\\t});\\r\\n\\r\\n\\tvar cart = new Source(&quot;cartNode&quot;, { accept: [ &quot;inStock&quot; ] });\\r\\n\\tvar wishlist = new Source(&quot;wishlistNode&quot;, \\r\\n\\t\\t{ accept: [ &quot;inStock&quot;, &quot;outOfStock&quot; ] });\\r\\n});</pre>\\n<p>In the declarative version, it looks like this:</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">&lt;div class=&quot;catalogContainer&quot;&gt;\\r\\n    &lt;h2&gt;Catalog&lt;/h2&gt;\\r\\n    &lt;ul data-dojo-type=&quot;dojo.dnd.Source&quot; id=&quot;catalogNode&quot; class=&quot;container&quot;\\r\\n\\t\\tdata-dojo-props=&quot;accept: [ 'inStock', 'outOfStock' ]&quot; &gt;\\r\\n      &lt;li class=&quot;dojoDndItem inStock&quot; dndType=&quot;inStock&quot;&gt;Wrist watch&lt;/li&gt;\\r\\n      &lt;li class=&quot;dojoDndItem inStock&quot; dndType=&quot;inStock&quot;&gt;Life jacket&lt;/li&gt;\\r\\n      &lt;li class=&quot;dojoDndItem inStock&quot; dndType=&quot;inStock&quot;&gt;Toy bulldozer&lt;/li&gt;\\r\\n      &lt;li class=&quot;dojoDndItem outOfStock&quot; dndType=&quot;outOfStock&quot;&gt;\\r\\n\\t\\tVintage microphone&lt;/li&gt;\\r\\n      &lt;li class=&quot;dojoDndItem outOfStock&quot; dndType=&quot;outOfStock&quot;&gt;\\r\\n\\t\\tTIE fighter&lt;/li&gt;\\r\\n      &lt;li class=&quot;dojoDndItem inStock&quot; dndType=&quot;inStock&quot;&gt;Apples&lt;/li&gt;\\r\\n      &lt;li class=&quot;dojoDndItem inStock&quot; dndType=&quot;inStock&quot;&gt;Bananas&lt;/li&gt;\\r\\n      &lt;li class=&quot;dojoDndItem outOfStock&quot; dndType=&quot;outOfStock&quot;&gt;\\r\\n\\t\\tTomatoes&lt;/li&gt;\\r\\n      &lt;li class=&quot;dojoDndItem inStock&quot; dndType=&quot;inStock&quot;&gt;Bread&lt;/li&gt;\\r\\n    &lt;/ul&gt;\\r\\n&lt;/div&gt;\\r\\n\\r\\n&lt;div class=&quot;cartContainer&quot;&gt;\\r\\n    &lt;h2&gt;Cart&lt;/h2&gt;\\r\\n    &lt;ol data-dojo-type=&quot;dojo.dnd.Source&quot; id=&quot;cartNode&quot; class=&quot;container&quot;\\r\\n\\t\\tdata-dojo-props=&quot;accept: [ 'inStock' ]&quot; &gt;\\r\\n    &lt;/ol&gt;\\r\\n&lt;/div&gt;\\r\\n&lt;div class=&quot;wishlistContainer&quot;&gt;\\r\\n    &lt;h2&gt;Wishlist&lt;/h2&gt;\\r\\n    &lt;ol data-dojo-type=&quot;dojo.dnd.Source&quot; id=&quot;wishlistNode&quot;\\r\\n\\t\\tdata-dojo-props=&quot;accept: [ 'inStock', 'outOfStock' ]&quot;\\r\\n\\t\\tclass=&quot;container&quot;&gt;\\r\\n    &lt;/ol&gt;\\r\\n&lt;/div&gt;</pre>\\n<p>Each DnD item can be given one or more types. In JavaScript, this is done by setting the <code>type</code> property of any object you pass to <code>insertNodes</code>. In markup, a comma-separated list of strings in the non-standard <code>dndType</code> attribute is used. Correspondingly, each DnD container can be given a list of item types to accept in the <code>accept</code> property. If left unspecified, the default type for all items and containers is &#8220;text&#8221;.</p>\\n<p>Here, we’re using the DnD type to denote whether an item is in stock or not, which then determines which items can be dropped where. The Cart only accepts items that are in stock, while the Wishlist accepts anything. If you drag around multiple items at once, you’ll notice that you can only drop a set of items on a container that accepts every type of item in the set—no partial drops allowed!</p>\\n<p>This is a good start, but there are still a few issues with this demo that need to be addressed:</p>\\n<ul>\\n<li>Unless you explicitly invoke copy semantics by pressing the appropriate key, dragging items removes them from the catalog, which doesn’t make much sense for this application.</li>\\n<li>You can do a copy/drag, but then it becomes easy to duplicate items, which shouldn’t be possible.</li>\\n<li>Using simple lists like this doesn’t really give a great user experience for an establishment as dignified as <em>Dylan’s Original Junk Outlet / Dylan’s Nutritious Dietarium</em> (DOJO/DND, get it? I kill me (groan)).</li>\\n</ul>\\n<p>Let’s start with improving the appearance.</p>\\n<h2>Customizing Item Creation</h2>\\n<p>As was discussed above, the default drag and drop implementation is intelligent enough to create nodes according to the context in the DOM. However, if you want to display more than a string of text, the default can be lacking, since all it does is set the child node’s <code>innerHTML</code> property to whatever is assigned to <code>data</code>. Fortunately, dojo/dnd gives us a way to customize this: the <code>creator</code> function.</p>\\n<p>Since Dylan wants the product catalog to be both prettier and more informative, let’s give each item an image, short description, and quantity indicator. Our data structures will look like this:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">{\\r\\n    name: &quot;Wrist watch&quot;,\\r\\n    image: &quot;watch.jpg&quot;,\\r\\n    description: &quot;Tell time with Swiss precision&quot;,\\r\\n    quantity: 3\\r\\n}</pre>\\n<p>Instead of a string, we’ll pass these objects in the <code>data</code> property of the object passed to <code>insertNodes</code>. To create visual representations of this object, we’ll need a function we can pass to the dojo/dnd/Source’s constructor to transform it into a DOM node:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">define([ &quot;dojo/string&quot;, &quot;dojo/dom-construct&quot;, &quot;dojo/dom-class&quot;, \\r\\n\\t\\t&quot;dojo/dnd/Source&quot;, &quot;dojo/text!./itemTemplate.html&quot;, \\r\\n\\t\\t&quot;dojo/text!./avatarTemplate.html&quot; ], \\r\\n\\t\\tfunction(stringUtil, domConstruct, domClass, Source, \\r\\n\\t\\t\\ttemplate, avatarTemplate){\\r\\n\\t// create the DOM representation for the given item\\r\\n\\tfunction catalogNodeCreator(item, hint){\\r\\n\\t\\tvar node = domConstruct.toDom(stringUtil.substitute(\\r\\n\\t\\t\\thint === &quot;avatar&quot; ? avatarTemplate : template, {\\r\\n\\t\\t\\t\\tname: item.name || &quot;Product&quot;,\\r\\n\\t\\t\\t\\timageUrl: &quot;images/&quot; + (item.image || &quot;_blank.gif&quot;),\\r\\n\\t\\t\\t\\tquantity: item.quantity || 0,\\r\\n\\t\\t\\t\\tdescription: item.description ? &quot;&lt;br&gt;&lt;span&gt;&quot; \\r\\n\\t\\t\\t\\t\\t+ item.description + &quot;&lt;/span&gt;&quot; : &quot;&quot;\\r\\n\\t\\t\\t})),\\r\\n\\t\\t\\t\\r\\n\\t\\t\\ttype = item.quantity ? [ &quot;inStock&quot; ] : [ &quot;outOfStock&quot; ];\\r\\n\\r\\n\\t\\treturn { node: node, data: item, type: type };\\r\\n\\t}\\r\\n});</pre>\\n<p>Our item template looks like this:</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">&lt;tr&gt;\\r\\n\\t&lt;td class=&quot;itemImg dojoDndHandle&quot;&gt;&lt;img src=&quot;${imageUrl}&quot;&gt;&lt;/td&gt;\\r\\n\\t&lt;td class=&quot;itemText&quot;&gt;${name} ${description}&lt;/td&gt;\\r\\n\\t&lt;td class=&quot;itemQty&quot;&gt;${quantity}&lt;/td&gt;\\r\\n&lt;/tr&gt;</pre>\\n<p>Our avatar template looks like this:</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">&lt;table&gt;\\r\\n\\t&lt;tr&gt;\\r\\n\\t\\t&lt;td class=&quot;itemImg&quot;&gt;&lt;img src=&quot;${imageUrl}&quot;&gt;&lt;/td&gt;\\r\\n\\t\\t&lt;td class=&quot;itemText&quot;&gt;${name}&lt;/td&gt;\\r\\n\\t&lt;/tr&gt;\\r\\n&lt;/table&gt;</pre>\\n<p>Items of note from this code:</p>\\n<ul>\\n<li>We’re going to be using tables for our DnD sources now to help improve the presentation.</li>\\n<li>We’re dynamically choosing the DnD item type based on the quantity provided.</li>\\n<li>The creator function also accepts a second optional parameter, <code>hint</code>. When this is set to &#8220;avatar&#8221;, we’re being asked to create a DOM representation of the avatar, so our function takes that into account. For us, this means that we skip displaying the description and quantity when we make an avatar, and we put the entire avatar into its own table, since the default node that contains the avatar(s) is itself a table (and we don’t want to ruin our DOM).</li>\\n</ul>\\n<p><img style=\\\"display: block; margin-left: auto; margin-right: auto; padding: 10px; border: 1px solid #ccc;\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2011/12/catalog-3.jpg\\\" alt=\\\"An online store product catalog\\\" /></p>\\n<p>At this point, we can introduce <a href=\\\"http://sitepen.github.com/sp-dnd-demo/3-dnd.html\\\">version 3 of the demo</a> (we’re doing it all programmatically from here on out, so there’s no declarative version). There’s a substantial overhaul in the appearance now thanks to our table-based DnD sources. We’ve also put the wishlist and shopping cart into a couple of <code>dijit/TitlePane</code>s so we can easily toggle their visibility. This change demonstrates a couple of concepts:</p>\\n<h3>Creating Pure Targets</h3>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">var cart = new Target(&quot;cartPaneNode&quot;, { accept: [ &quot;inStock&quot; ] });</pre>\\n<p>We have a new class here: dojo/dnd/Target. This is just a thin wrapper around dojo/dnd/Source that sets <code>this.isSource</code> to false, making it a pure target. You can drop items on it, but can’t drag them back out again! Incidentally, you can freely manipulate this field at runtime on a regular Source object; we’ll do that later on.</p>\\n<h3>Changing the “Drop Parent”</h3>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">cart.parent = dom.byId(&quot;cartNode&quot;);</pre>\\n<p>Here, we’re using the dojo/dnd/Source’s <code>parent</code> property to change which element dragged items are actually inserted into. In this case, we’re changing so that when users drop items on the TitlePane, they’ll actually be inserted to the enclosed <code>&lt;table id=\\\"cartNode\\\"></code>.</p>\\n<p>Our store is starting to look pretty good, but there are still some other things we can do to demonstrate a few more concepts.</p>\\n<h2>Handling Events</h2>\\n<p>The drag and drop framework uses Dojo’s pub/sub system to handle event communication. We can polish up a few things if we take advantage of this. For example, it would be nice if we could show the number of items in the wishlist and cart when they’re closed so users don’t need to open them to check. It would also clean things up visually if we cleared the selection states of our containers when we drop an item. By listening for topics, we can do both.</p>\\n<h3>Building a Drop Handler</h3>\\n<p>Let’s hook into the drop notification. We can either listen for the DnD pub/sub topics directly or we can connect to event handlers on DnD objects depending upon what sort of action we are performing.</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">// sets the count of items in a TitlePane\\r\\nfunction setListCount(){\\r\\n\\tquery(&quot;.count&quot;, this.node)[0].innerHTML = this.getAllNodes().length;\\r\\n}\\r\\n\\r\\n// update the cart’s displayed item count when dropped on\\r\\naspect.after(cart, &quot;onDrop&quot;, setListCount);\\r\\n\\r\\n// update the wishlist’s displayed item count when dropped on\\r\\naspect.after(wishlist, &quot;onDrop&quot;, setListCount);</pre>\\n<p>Here, we connect to the cart’s and wishlist’s <code>onDrop</code> event to update the number of items in the respective list when an item is dropped. Unlike <code>onDndDrop</code>, which fires for all DnD elements on the page regardless of whether or not they were dropped on, the <code>onDrop</code> event only fires for the target of the drop, so is suitable when you only want to perform an action on a single target.</p>\\n<h3>Listening Directly to the Topics</h3>\\n<p>Since I mentioned that you can subscribe to the topics yourself when it makes sense, let’s cook up an example. When you start dragging items around, it’s not completely intuitive where you’re allowed to drop them; you have to keep dragging until the avatar turns green. On top of that, there’s no immediate feedback that your drop was successful. We can create a better experience than that. First, we create some functions to highlight valid targets:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">// highlights available drop targets\\r\\nfunction highlightTargets(show, source, nodes){\\r\\n\\tdomClass.toggle(&quot;wishlistPaneNode&quot;, &quot;highlight&quot;, show);\\r\\n\\tdomClass.toggle(&quot;cartPaneNode&quot;, &quot;highlight&quot;, \\r\\n\\t\\t\\tshow &amp;&amp; arrayUtil.every(nodes, function(node){\\r\\n\\t\\treturn domClass.contains(node, &quot;inStock&quot;);\\r\\n\\t}));\\r\\n}\\r\\n\\r\\n// glows the target of a drop\\r\\nfunction glowTarget(source, nodes, copy, target){\\r\\n\\tdomClass.add(target.node, &quot;glow&quot;);\\r\\n\\tsetTimeout(lang.hitch(domClass, &quot;remove&quot;, \\r\\n\\t\\ttarget.node, &quot;glow&quot;), 1000);\\r\\n}</pre>\\n<p>Then, in our initialization function, we hook them up to the DnD system:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">// highlight valid drop targets when a drag operation is started\\r\\n// (/dnd/start)\\r\\ntopic.subscribe(&quot;/dnd/start&quot;, lang.partial(highlightTargets, true));\\r\\n\\r\\n// remove the highlight when a drag operation is finished \\r\\n// (/dnd/cancel or /dnd/drop)\\r\\ntopic.subscribe(&quot;/dnd/cancel, /dnd/drop&quot;, \\r\\n\\tlang.partial(highlightTargets, false));\\r\\n\\r\\n// give the target of a drop an extended glow\\r\\ntopic.subscribe(&quot;/dnd/drop&quot;, glowTarget);</pre>\\n<p>Since we’re listening to the topic broadcast itself, we know these functions will only run once per event. Manipulating a bit of CSS with dojo/dom-class helps make the drag and drop system a bit friendlier for users, and that’s always a good thing.</p>\\n<p>Armed with knowledge of how to run code at various times during the drag and drop lifecycle, we can see that it wouldn’t be difficult to extend this further. For example, our item quantities currently only determine whether or not you can drop something on the shopping cart; they could easily be updated when they are dropped on the Cart (but not the Wishlist!). And of course, this little storefront doesn’t have any prices! In a real store you’d want to add that, and probably upgrade <code>setupCartTitle</code> to calculate and display a subtotal.</p>\\n<h3>Avoiding Duplicate Items</h3>\\n<p>One thing I hadn’t pointed out before was that in version 3 of our demo, in addition to specifying the node creator function when instantiating our Source objects, we also passed a parameter <code>copyOnly: true</code>. This overrides the default drag semantics and performs a copy operation by default instead of a move. This is nice because it means we can avoid removing items from the catalog(s) when we drag them around. The downside is that if you copy an item on the container where it already lives, it duplicates the item.</p>\\n<p>Logically, this shouldn’t happen because we’re not specifying the <code>accept</code> type on the catalogs, so they should default to <code>\\\"text\\\"</code> and keep us from dropping the products on them (we’re explicitly giving them different types, remember). If you dig into the Dojo source, however, you’ll see that the function that checks for matches between item types and container accept values automatically accepts “self drops”, short circuiting the item type check. Often, that’s the correct behavior, but for our <code>copyOnly</code>–style DnD here, this is backwards. Fortunately again, overriding this is easy: just set the <code>selfAccept</code> property to <code>false</code>.</p>\\n<p>Take a look at <a href=\\\"http://sitepen.github.com/sp-dnd-demo/4-dnd.html\\\">version 4 of our demo</a> to see it all working together. Some of the code has been reorganized and/or moved to an external file to reduce clutter, but the new stuff is all there if you view the page source.</p>\\n<p><a href=\\\"http://sitepen.github.com/sp-dnd-demo/4-dnd.html\\\"><img style=\\\"display:block;margin-left:auto;margin-right:auto\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2011/12/dylans-original-4.jpg\\\" alt=\\\"An online storefront\\\" /></a></p>\\n<h3>Tweaking DnD Behavior</h3>\\n<p>The final thing left to talk about for this demo is the set of buttons we introduce in version 4. We have buttons to clear the wishlist and shopping cart now, but notice the buttons at the bottom of the page: these demonstrate different ways to change the way DnD behaves. You can read the code to see how they work, but here’s what they do:</p>\\n<ul>\\n<li><strong>Enable DnD (sets <code>isSource</code>)</strong> – If you’ve ever wondered how to turn DnD on and off completely, here’s one way. This toggles the <code>isSource</code> member of each of our sources. I mentioned this earlier, but recall that when this is false, the manager won’t initiate any drag operations. Objects will still accept drops, but if there’s nothing acting as a source, we’ve effectively disabled the DnD system.</li>\\n<li><strong>Drag via handles only (sets <code>withHandles</code>)</strong> – If you give a DOM node the <code>dojoDndHandle</code> class, dojo/dnd will consider it a handle. Each Source has a member variable <code>withHandles</code> that determines whether you can drag <em>any</em> part of an item, or just the handle. This demo sets up the product images as the handles, so if you toggle the button, you’ll see the drag behavior change accordingly.</li>\\n</ul>\\n<h2>Finishing Up</h2>\\n<p>For reference, here are the steps we’ve taken so far:</p>\\n<ul>\\n<li><a href=\\\"http://sitepen.github.com/sp-dnd-demo/0-dnd.html\\\">Step 0: skeleton page</a></li>\\n<li><a href=\\\"http://sitepen.github.com/sp-dnd-demo/1-dnd.html\\\">Step 1: a single list</a></li>\\n<li><a href=\\\"http://sitepen.github.com/sp-dnd-demo/2-dnd.html\\\">Step 2: multiple lists</a></li>\\n<li><a href=\\\"http://sitepen.github.com/sp-dnd-demo/3-dnd.html\\\">Step 3: customizing item creation</a></li>\\n<li><a href=\\\"http://sitepen.github.com/sp-dnd-demo/4-dnd.html\\\">Step 4: listening to events</a></li>\\n</ul>\\n<p>There’s quite a lot left to discuss in dojo/dnd that we haven’t touched on. For example, there’s been little discussion about the CSS classes that are used by DnD (you can see what this demo uses in <a href=\\\"http://sitepen.github.com/sp-dnd-demo/dnd.css\\\">dnd.css</a>). We also didn’t discuss how to cleanly set up your own custom DnD sources by extending dojo/dnd/Source using <code>dojo/_base/declare</code>. A lot of dojo/dnd’s internals are specifically set up to be easy to override with your own code so you can customize just about any part necessary. These are all areas that you should explore on your own to get a feel for how DnD can be useful in your own projects. You can download an <a href=\\\"https://github.com/sitepen/sp-dnd-demo/zipball/gh-pages\\\">archive of the entire demo</a> so you can play with it yourself locally.</p>\\n<p>Happy dragging and dropping!</p>\\n\",\"protected\":false},\"excerpt\":{\"rendered\":\"<p>dojo/dnd is one of Dojo’s core APIs and is designed to manage the process of dragging and dropping items between two or more containers. It offers advanced features like multiple selections, item acceptance filtering on drop targets, and other behavioral tweaks. Let’s learn how to use it! This is an updated version of the original [&hellip;]</p>\\n\",\"protected\":false},\"author\":41,\"featured_media\":22075,\"comment_status\":\"closed\",\"ping_status\":\"closed\",\"sticky\":false,\"template\":\"\",\"format\":\"standard\",\"meta\":{\"spay_email\":\"\"},\"categories\":[45],\"tags\":[118,194],\"series\":[],\"jetpack_featured_media_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\",\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Dojo Drag’n’Drop Redux | SitePen</title>\\n<meta name=\\\"description\\\" content=\\\"dojo/dnd is one of Dojo’s core APIs and is designed to manage the process of dragging and dropping items between two or more containers. It offers advanced features like multiple selections, item acceptance filtering on drop targets, and other behavioral tweaks. Let’s learn how to use it!  This is an updated version o\\\" />\\n<meta name=\\\"robots\\\" content=\\\"index, follow\\\" />\\n<meta name=\\\"googlebot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<meta name=\\\"bingbot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<link rel=\\\"canonical\\\" href=\\\"https://www.sitepen.com/blog/dojo-drag-n-drop-redux/\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Dojo Drag’n’Drop Redux | SitePen\\\" />\\n<meta property=\\\"og:description\\\" content=\\\"dojo/dnd is one of Dojo’s core APIs and is designed to manage the process of dragging and dropping items between two or more containers. It offers advanced features like multiple selections, item acceptance filtering on drop targets, and other behavioral tweaks. Let’s learn how to use it!  This is an updated version o\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/dojo-drag-n-drop-redux/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:published_time\\\" content=\\\"2011-12-05T20:33:14+00:00\\\" />\\n<meta property=\\\"article:modified_time\\\" content=\\\"2019-12-11T13:39:06+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1600\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"900\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/dojo-drag-n-drop-redux/#primaryimage\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\",\\\"width\\\":1600,\\\"height\\\":900},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/dojo-drag-n-drop-redux/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/dojo-drag-n-drop-redux/\\\",\\\"name\\\":\\\"Dojo Drag\\\\u2019n\\\\u2019Drop Redux | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"primaryImageOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/dojo-drag-n-drop-redux/#primaryimage\\\"},\\\"datePublished\\\":\\\"2011-12-05T20:33:14+00:00\\\",\\\"dateModified\\\":\\\"2019-12-11T13:39:06+00:00\\\",\\\"author\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/7cc9a4368c266b3ad7e0c1ff2d2b8b5a\\\"},\\\"description\\\":\\\"dojo/dnd is one of Dojo\\\\u2019s core APIs and is designed to manage the process of dragging and dropping items between two or more containers. It offers advanced features like multiple selections, item acceptance filtering on drop targets, and other behavioral tweaks. Let\\\\u2019s learn how to use it! This is an updated version o\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://www.sitepen.com/blog/dojo-drag-n-drop-redux/\\\"]}]},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/7cc9a4368c266b3ad7e0c1ff2d2b8b5a\\\",\\\"name\\\":\\\"Colin Snover\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/8efa8507d7b9ebc52aa5fb183e11c356?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Colin Snover\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/3198\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/post\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/41\"}],\"replies\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/comments?post=3198\"}],\"version-history\":[{\"count\":1,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/3198/revisions\"}],\"predecessor-version\":[{\"id\":19730,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/3198/revisions/19730\"}],\"wp:featuredmedia\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/22075\"}],\"wp:attachment\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media?parent=3198\"}],\"wp:term\":[{\"taxonomy\":\"category\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/categories?post=3198\"},{\"taxonomy\":\"post_tag\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/tags?post=3198\"},{\"taxonomy\":\"series\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/series?post=3198\"}],\"curies\":[{\"name\":\"wp\",\"href\":\"https://api.w.org/{rel}\",\"templated\":true}]},\"_embedded\":{\"author\":[{\"id\":41,\"name\":\"Colin Snover\",\"url\":\"\",\"description\":\"\",\"link\":\"https://wp.sitepen.com/blog/author/csnover/\",\"slug\":\"csnover\",\"avatar_urls\":{\"24\":\"https://secure.gravatar.com/avatar/8efa8507d7b9ebc52aa5fb183e11c356?s=24&d=mm&r=g\",\"48\":\"https://secure.gravatar.com/avatar/8efa8507d7b9ebc52aa5fb183e11c356?s=48&d=mm&r=g\",\"96\":\"https://secure.gravatar.com/avatar/8efa8507d7b9ebc52aa5fb183e11c356?s=96&d=mm&r=g\"},\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Colin Snover, Author at SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"profile\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Colin Snover, Author at SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/author/csnover/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://secure.gravatar.com/avatar/8efa8507d7b9ebc52aa5fb183e11c356?s=500&#038;d=mm&#038;r=g\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ProfilePage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/csnover/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/author/csnover/\\\",\\\"name\\\":\\\"Colin Snover, Author at SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/7cc9a4368c266b3ad7e0c1ff2d2b8b5a\\\",\\\"name\\\":\\\"Colin Snover\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/8efa8507d7b9ebc52aa5fb183e11c356?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Colin Snover\\\"},\\\"mainEntityOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/csnover/#webpage\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/41\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users\"}]}}],\"wp:featuredmedia\":[{\"id\":22075,\"date\":\"2020-01-22T13:53:07\",\"slug\":\"og_imagev1\",\"type\":\"attachment\",\"link\":\"https://wp.sitepen.com/og_imagev1/\",\"title\":{\"rendered\":\"og_imageV1\"},\"author\":9,\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>og_imageV1 | SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"og_imageV1 | SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1600\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"900\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg#webpage\\\",\\\"url\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\",\\\"name\\\":\\\"og_imageV1 | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"datePublished\\\":\\\"2020-01-22T21:53:07+00:00\\\",\\\"dateModified\\\":\\\"2020-01-22T21:53:07+00:00\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\"]}]}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"caption\":{\"rendered\":\"\"},\"alt_text\":\"\",\"media_type\":\"image\",\"mime_type\":\"image/jpeg\",\"media_details\":{\"width\":1600,\"height\":900,\"file\":\"2020/01/og_imageV1.jpg\",\"sizes\":{\"medium\":{\"file\":\"og_imageV1-300x169.jpg\",\"width\":300,\"height\":169,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-300x169.jpg\"},\"large\":{\"file\":\"og_imageV1-1024x576.jpg\",\"width\":1024,\"height\":576,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-1024x576.jpg\"},\"thumbnail\":{\"file\":\"og_imageV1-150x150.jpg\",\"width\":150,\"height\":150,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-150x150.jpg\"},\"medium_large\":{\"file\":\"og_imageV1-768x432.jpg\",\"width\":768,\"height\":432,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-768x432.jpg\"},\"1536x1536\":{\"file\":\"og_imageV1-1536x864.jpg\",\"width\":1536,\"height\":864,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-1536x864.jpg\"},\"full\":{\"file\":\"og_imageV1.jpg\",\"width\":1600,\"height\":900,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\"}},\"image_meta\":{\"aperture\":\"0\",\"credit\":\"\",\"camera\":\"\",\"caption\":\"\",\"created_timestamp\":\"0\",\"copyright\":\"\",\"focal_length\":\"0\",\"iso\":\"0\",\"shutter_speed\":\"0\",\"title\":\"\",\"orientation\":\"0\",\"keywords\":[]}},\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/22075\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/attachment\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/9\"}]}}]}}]","headers":[["access-control-allow-headers","Authorization, Content-Type"],["access-control-expose-headers","X-WP-Total, X-WP-TotalPages"],["allow","GET"],["cache-control","max-age=2592000"],["connection","close"],["content-type","application/json; charset=UTF-8"],["date","Mon, 10 Aug 2020 15:32:54 GMT"],["expires","Wed, 09 Sep 2020 15:32:54 GMT"],["link","<https://wp.sitepen.com/wp-json/>; rel=\"https://api.w.org/\""],["server","Apache"],["transfer-encoding","chunked"],["vary","Origin"],["x-content-type-options","nosniff"],["x-powered-by","PHP/7.3.21-1+0~20200807.66+debian9~1.gbp18a1c2"],["x-robots-tag","noindex"],["x-wp-total","1"],["x-wp-totalpages","1"]]},"type":"Object"}