{"value":{"body":"[{\"id\":5215,\"date\":\"2012-10-31T15:37:26\",\"date_gmt\":\"2012-10-31T22:37:26\",\"guid\":{\"rendered\":\"https://www.sitepen.com/blog/?p=5215\"},\"modified\":\"2019-12-11T05:56:35\",\"modified_gmt\":\"2019-12-11T13:56:35\",\"slug\":\"debugging-dojo-common-error-messages\",\"status\":\"publish\",\"type\":\"post\",\"link\":\"https://wp.sitepen.com/blog/debugging-dojo-common-error-messages/\",\"title\":{\"rendered\":\"Debugging Dojo: Common Error Messages\"},\"content\":{\"rendered\":\"<p class=\\\"introduction\\\">Debugging JavaScript can be a tedious and frustrating chore.  To compound the already difficult task of debugging, browser vendors each have their own style of error messaging, some of which are confusing, cryptic, or downright misleading to the untrained eye.  Through the delivery of our <a href=\\\"https://www.sitepen.com/workshops/\\\">Dojo workshops</a>, we&#8217;ve observed a number of common mistakes that are easy to fix once you decipher the error message. Take some time to familiarize yourself with the following common errors that appear when working with Dojo, their symptoms, and their solutions.  With this knowledge, writing manageable code is not only possible, but a lot less cryptic.</p>\\n<p><!--more--></p>\\n<h2 class=\\\"errorHeader\\\">\\n\\t<a id=\\\"missing-parameter\\\" class=\\\"errorLink\\\" style=\\\"color:#F4376D;\\\"  href=\\\"#missing-parameter\\\">Issue: Missing Parameter</a><br />\\n</h2>\\n<div class=\\\"issueSection\\\">\\n<h3 class=\\\"seeHeader\\\">What you&#8217;re likely to see in your debugging environment</h3>\\n<ul class=\\\"browserList\\\">\\n<li class=\\\"browserTitle\\\">Firefox + Firebug</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">ReferenceError: on is not defined</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5239 errorImage\\\" title=\\\"Missing Module Firefox\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/missing-module-firefox2.png\\\" /></p>\\n<li class=\\\"browserTitle\\\">Chrome</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">Uncaught ReferenceError: on is not defined</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5238 errorImage\\\" title=\\\"Missing Module Chrome\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/missing-module-chrome.png\\\" alt=\\\"\\\" /></p>\\n<li class=\\\"browserTitle\\\">Internet Explorer 9</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">The value of the property &#8216;on&#8217; is null or undefined, not a Function object</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5240 errorImage\\\" title=\\\"Missing Module IE9\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/missing-module-ie91.png\\\" /></p>\\n</ul>\\n<h3 class=\\\"possibleCauseHeader\\\">Possible Cause</h3>\\n<p class=\\\"possibleCause\\\">\\n\\t\\tYou are missing a module parameter in the callback function of <code>require</code>.  As you can see in the example, we list <code>dojo/on</code> as a dependency, but forget to specify it as a parameter to our callback function. As such, whenever we attempt to reference it, it fails because it is <code>undefined</code>.\\n\\t</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\n\\trequire([&quot;dojo/dom&quot;, &quot;dojo/on&quot;], function (dom) {\\r\\n\\t\\ton(dom.byId(&quot;button&quot;), &quot;click&quot;, function (e) {\\r\\n\\t\\t\\tconsole.log(&quot;My button was clicked!&quot;);\\r\\n\\t\\t});\\r\\n\\t});\\r\\n\\t</pre>\\n<h3 class=\\\"solutionHeader\\\">Solution</h3>\\n<p class=\\\"solution\\\">\\n\\t\\tEnsure you specify a callback parameter for each module that you&#8217;re including to which you will need locally scoped access.  If you&#8217;re getting a <code>ReferenceError</code> or &#8220;not a Function&#8221;, chances are, you missed a parameter.\\n\\t</p>\\n</div>\\n<h2 class=\\\"errorHeader\\\">\\n\\t<a id=\\\"callback-parameter-mismatch\\\" class=\\\"errorLink\\\" style=\\\"color:#F4376D;\\\"  href=\\\"#callback-parameter-mismatch\\\">Issue: Callback Parameter Mismatch</a><br />\\n</h2>\\n<div class=\\\"issueSection\\\">\\n<h3 class=\\\"seeHeader\\\">What you&#8217;re likely to see in your debugging environment</h3>\\n<ul class=\\\"browserList\\\">\\n<li class=\\\"browserTitle\\\">Firefox + Firebug</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">TypeError: dom.byId is not a function</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5219 errorImage\\\" title=\\\"Bad Module Order Firefox\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/bad-module-firefox.png\\\" alt=\\\"\\\" /></p>\\n<li class=\\\"browserTitle\\\">Chrome</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">Uncaught TypeError: Object function has no method &#8216;byId&#8217;</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5218 errorImage\\\" title=\\\"Bad Module Order Chrome\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/Bad-Module-Order-Chrome.png\\\" alt=\\\"\\\" width=\\\"599\\\" height=\\\"497\\\" /></p>\\n<li class=\\\"browserTitle\\\">Internet Explorer 9</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">Object doesn&#8217;t support property or method &#8216;byId&#8217;</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5220 errorImage\\\" title=\\\"Bad Module Order IE9\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/bad-module-ie.png\\\" alt=\\\"\\\" />\\n\\t</ul>\\n<h3 class=\\\"possibleCauseHeader\\\">Possible Cause</h3>\\n<p class=\\\"possibleCause\\\">\\n\\t\\tThe callback parameter order does not match the dependency order.  As you can see in the code, we <code>require</code> our dependencies in the order of <a href=\\\"http://dojotoolkit.org/reference-guide/1.8/dojo/dom.html\\\">dojo/dom</a> and then <a href=\\\"http://dojotoolkit.org/reference-guide/1.8/dojo/on.html\\\">dojo/on</a>; however, in our callback, we have them in the order of <code>dojo/on</code> and then <code>dojo/dom</code>. Dojo does not magically know that <code>dojo/on</code> is mapped to the local variable on; it simply maps the returned factory function from <code>dojo/on</code> to the local variable specified in the given order. As written, the example makes our <code>on</code> variable actually reference the <code>dojo/dom</code> module and vice versa.\\n\\t</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\n\\trequire([&quot;dojo/dom&quot;, &quot;dojo/on&quot;], function (on, dom) {\\r\\n\\t\\ton(dom.byId(&quot;button&quot;), &quot;click&quot;, function (e) {\\r\\n\\t\\t\\tconsole.log(&quot;My button was clicked!&quot;);\\r\\n\\t\\t});\\r\\n\\t});\\r\\n\\t</pre>\\n<h3 class=\\\"solutionHeader\\\">Solution</h3>\\n<p class=\\\"solution\\\">\\n\\t\\tMake sure your callback parameters match up to the order of your dependency list in <code>require</code> or <code>define</code>.\\n\\t</p>\\n</div>\\n<h2 class=\\\"errorHeader\\\">\\n\\t<a id=\\\"wrong-dojo-path\\\" class=\\\"errorLink\\\" style=\\\"color:#F4376D;\\\"  href=\\\"#wrong-dojo-path\\\">Issue: Wrong dojo path</a><br />\\n</h2>\\n<div class=\\\"issueSection\\\">\\n<h3 class=\\\"seeHeader\\\">What you&#8217;re likely to see in your debugging environment</h3>\\n<ul class=\\\"browserList\\\">\\n<li class=\\\"browserTitle\\\">Firefox + Firebug</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">ReferenceError: require is not defined</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5248 errorImage\\\" title=\\\"Wrong Dojo Path Firefox\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/wrong-path-firefox.png\\\" alt=\\\"\\\" /></p>\\n<li class=\\\"browserTitle\\\">Chrome</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">Uncaught ReferenceError: require is not defined</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5247 errorImage\\\" title=\\\"Wrong Dojo Path Chrome\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/wrong-path-chrome.png\\\" alt=\\\"\\\" /></p>\\n<li class=\\\"browserTitle\\\">Internet Explorer 9</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">&#8216;require&#8217; is undefined</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5249 errorImage\\\" title=\\\"Wrong Dojo Path IE9\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/wrong-path-ie.png\\\" alt=\\\"\\\" />\\n\\t</ul>\\n<h3 class=\\\"possibleCauseHeader\\\">Possible Cause</h3>\\n<p class=\\\"possibleCause\\\">\\n\\t\\tThe path to your <code>dojo.js</code> file is incorrect.\\n\\t</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\r\\n\\t\\t&lt;script src=&quot;incorrect/path/to/dojo.js&quot;&gt;&lt;/script&gt;\\r\\n\\t</pre>\\n<h3 class=\\\"solutionHeader\\\">Solution</h3>\\n<p class=\\\"solution\\\">\\n\\t\\tEnsure the URL in the <code>src</code> of your <code>script</code> is the correct path to <code>dojo.js</code>\\n\\t</p>\\n</div>\\n<h2 class=\\\"errorHeader\\\">\\n\\t<a id=\\\"incorrect-package-path\\\" class=\\\"errorLink\\\" style=\\\"color:#F4376D;\\\"  href=\\\"#incorrect-package-path\\\">Issue: Incorrect package path</a><br />\\n</h2>\\n<div class=\\\"issueSection\\\">\\n<h3 class=\\\"seeHeader\\\">What you&#8217;re likely to see in your debugging environment</h3>\\n<ul class=\\\"browserList\\\">\\n<li class=\\\"browserTitle\\\">Firefox + Firebug</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">Error: xhrFailed</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5252 errorImage\\\" title=\\\"Wrong Package Path Firefox\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/Wrong-Package-Path-FireFox.png\\\" alt=\\\"\\\" width=\\\"596\\\" height=\\\"492\\\" /></p>\\n<li class=\\\"browserTitle\\\">Chrome</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">GET incorrectPackage/myModule.js 404 (Not Found)</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5251 errorImage\\\" title=\\\"Wrong Package Path Chrome\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/wrong-package-chrome.png\\\" alt=\\\"\\\" /></p>\\n<li class=\\\"browserTitle hasNote\\\">Internet Explorer 9*</li>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5253 errorImage\\\" title=\\\"Wrong Package Path IE9\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/wrong-package-ie.png\\\" alt=\\\"\\\" /></p>\\n<p>\\t\\t<em class=\\\"note\\\">* IE9 will not show an error in the JavaScript console, your code will simply just fail.  In order to see the 404, you have to go to the &#8220;Network&#8221; tab and click &#8220;Start Capturing&#8221;.</em></p>\\n<p>\\t\\t<em class=\\\"note\\\">* The Dojo Loader will also pass the number 3 to the callback in place of the module.  3 is the Dojo AMD loader code for attempting to load a non-module.</em>\\n\\t</ul>\\n<h3 class=\\\"possibleCauseHeader\\\">Possible Cause</h3>\\n<p class=\\\"possibleCause\\\">\\n\\t\\tThe package you are referencing has an incorrect path.  This can happen when using an incorrect MID (module identifier) as a dependency or when a package is configured incorrectly in your <code>dojoConfig</code>.\\n\\t</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\n\\trequire([&quot;incorrectPackagePath/myModule&quot;], function (myModule) {\\r\\n\\t\\tmyModule.doSomething();\\r\\n\\t});\\r\\n\\t</pre>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\n\\tvar dojoConfig = {\\r\\n\\t    packages: [{\\r\\n\\t        name: &quot;myPackage&quot;,\\r\\n\\t        location: &quot;incorrect/path/to/myPackage&quot;\\r\\n\\t    }]\\r\\n\\t};\\r\\n\\t</pre>\\n<h3 class=\\\"solutionHeader\\\">Solution</h3>\\n<p class=\\\"solution\\\">\\n\\t\\tEnsure you are using the correct paths to your packages.  If you are getting a non-module error, this is the most common reason why.\\n\\t</p>\\n</div>\\n<h2 class=\\\"errorHeader\\\">\\n\\t<a id=\\\"forgot-dojo-query\\\" class=\\\"errorLink\\\" style=\\\"color:#F4376D;\\\" href=\\\"#forgot-dojo-query\\\">Issue: Forgot dojo/query with Event Delegation</a><br />\\n</h2>\\n<div class=\\\"issueSection\\\">\\n<h3 class=\\\"seeHeader\\\">What you&#8217;re likely to see in your debugging environment</h3>\\n<ul class=\\\"browserList\\\">\\n<li class=\\\"browserTitle\\\">Firefox + Firebug</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">TypeError: matchesTarget is undefined</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5257 errorImage\\\" title=\\\"Delegation without Query Firefox\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/forgot-firefox.png\\\" alt=\\\"\\\" /></p>\\n<li class=\\\"browserTitle\\\">Chrome</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">Uncaught TypeError: Cannot call method &#8216;matches&#8217; of undefined</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5256 errorImage\\\" title=\\\"Delegation without Query Chrome\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/forgot-chrome.png\\\" alt=\\\"\\\" /></p>\\n<li class=\\\"browserTitle\\\">Internet Explorer 9</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">Unable to get value of the property &#8216;matches&#8217;: object is null or undefined</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5258 errorImage\\\" title=\\\"Delegation without Query IE9\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/forgot-ie.png\\\" alt=\\\"\\\" />\\n\\t</ul>\\n<h3 class=\\\"possibleCauseHeader\\\">Possible Cause</h3>\\n<p class=\\\"possibleCause\\\">\\n\\t\\tUsing event delegation with <a href=\\\"http://dojotoolkit.org/reference-guide/1.8/dojo/on.html\\\">dojo/on</a> and forgetting to pull in <a href=\\\"http://dojotoolkit.org/reference-guide/1.8/dojo/query.html\\\">dojo/query</a>.  To keep <code>dojo/on</code> as lightweight as possible, it does not automatically pull in <code>dojo/query</code>.  Because of this, it does not have the capability to perform <a href=\\\"http://davidwalsh.name/event-delegate\\\">event delegation</a> by default.\\n\\t</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\n\\trequire([&quot;dojo/on&quot;], function (on) {\\r\\n\\t\\ton(document.getElementById(&quot;myContainer&quot;), &quot;button:click&quot;, function (e) {\\r\\n\\t\\t\\tconsole.log(&quot;A button was clicked!&quot;);\\r\\n\\t\\t});\\r\\n\\t});\\r\\n\\t</pre>\\n<h3 class=\\\"solutionHeader\\\">Solution</h3>\\n<p class=\\\"solution\\\">\\n\\t\\tEnsure that you pull in <a href=\\\"http://dojotoolkit.org/reference-guide/1.8/dojo/query.html\\\">dojo/query</a> when you need to use event delegation with <code>dojo/on</code>.\\n\\t</p>\\n</div>\\n<h2 class=\\\"errorHeader\\\">\\n\\t<a id=\\\"forgot-handle-as\\\" class=\\\"errorLink\\\" style=\\\"color:#F4376D;\\\"  href=\\\"#forgot-handle-as\\\">Issue: Forgot handleAs for dojo/request</a><br />\\n</h2>\\n<div class=\\\"issueSection\\\">\\n<h3 class=\\\"seeHeader\\\">What you&#8217;re likely to see in your debugging environment</h3>\\n<ul class=\\\"browserList\\\">\\n<li class=\\\"browserTitle\\\">Firefox + Firebug</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">data.getElementsByTagName is not a function</span></p>\\n<p>\\t\\t<span class=\\\"langType\\\">XML<span><br />\\n\\t\\t<img class=\\\"alignnone size-full wp-image-5263 errorImage\\\" title=\\\"Forget Handle As Firefox\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/Forget-Handle-As-FireFox.png\\\" alt=\\\"\\\" width=\\\"596\\\" height=\\\"492\\\" /></p>\\n<p>\\t\\t<span class=\\\"hasNote\\\">JSON*</span><br />\\n\\t\\t<img src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/json-firefox.png\\\" alt=\\\"\\\" title=\\\"Forgot handleAs JSON Firefox\\\" class=\\\"alignnone size-full wp-image-5322 errorImage\\\" /></p>\\n<li class=\\\"browserTitle\\\">Chrome</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">TypeError: undefined method</span></p>\\n<p>\\t\\t<span class=\\\"langType\\\">XML</span><br />\\n\\t\\t<img class=\\\"alignnone size-full wp-image-5262 errorImage\\\" title=\\\"Forget Handle As Chrome\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/Forget-Handle-As-Chrome.png\\\" alt=\\\"\\\" width=\\\"593\\\" height=\\\"490\\\" /></p>\\n<p>\\t\\t<span class=\\\"hasNote\\\">JSON*</span><br />\\n\\t\\t<img src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/json-chrome.png\\\" alt=\\\"\\\" title=\\\"Forgot handleAs JSON Chrome\\\" class=\\\"alignnone size-full wp-image-5321 errorImage\\\" /></p>\\n<li class=\\\"browserTitle\\\">Internet Explorer 9</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">TypeError: Object doesn&#8217;t support property or method &#8216;getElementsByTagName&#8217;</span></p>\\n<p>\\t\\t<span class=\\\"langType\\\">XML</span><br />\\n\\t\\t<img class=\\\"alignnone size-full wp-image-5264 errorImage\\\" title=\\\"Forget Handle As IE9\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/xml-ie.png\\\" alt=\\\"\\\" /></p>\\n<p>\\t\\t<span class=\\\"hasNote\\\">JSON</span><br />\\n\\t\\t<img src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/json-ie.png\\\" alt=\\\"\\\" title=\\\"Forgot handleAs JSON IE9\\\" class=\\\"alignnone size-full wp-image-5323 errorImage\\\" /></p>\\n<p>\\t\\t<em class=\\\"note\\\">* Notice how the data is parsed as a <code>string</code>, which makes the <code>data[0]</code> return as the first letter in that string, instead of the first element in what would be an <code>array</code></em>\\n\\t</ul>\\n<h3 class=\\\"possibleCauseHeader\\\">Possible Cause</h3>\\n<p class=\\\"possibleCause\\\">\\n\\t\\tYou have forgotten to set the <code>handleAs</code> property for <a href=\\\"http://dojotoolkit.org/reference-guide/1.8/dojo/request.html\\\">dojo/request</a>.  When you do this, whatever value is returned is passed to the <a href=\\\"http://dojotoolkit.org/reference-guide/1.8/dojo/Deferred.html\\\">Deferred.resolve</a> as plain text.  This can cause issues if you&#8217;re expecting the data to be a JSON object or an XML document.\\n\\t</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\n\\trequire([&quot;dojo/request&quot;], function (request) {\\r\\n\\t\\trequest(&quot;test.xml&quot;).then(function (data) {\\r\\n\\t\\t\\tconsole.log(data.getElementsByTagName(&quot;name&quot;));\\r\\n\\t\\t});\\r\\n\\t});\\r\\n\\t</pre>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\n\\trequire([&quot;dojo/request&quot;], function (request) {\\r\\n\\t\\trequest(&quot;states.json&quot;).then(function (states) {\\r\\n\\t\\t\\tconsole.log(&quot;The first state object is&quot;, states[0]);\\r\\n\\t\\t});\\r\\n\\t});\\r\\n\\t</pre>\\n<h3 class=\\\"solutionHeader\\\">Solution</h3>\\n<p class=\\\"solution\\\">\\n\\t\\tEnsure you use the <code>handleAs</code> property of the options object when using <a href=\\\"http://dojotoolkit.org/reference-guide/1.8/dojo/request.html\\\">dojo/request</a>.\\n\\t</p>\\n</div>\\n<h2 class=\\\"errorHeader\\\">\\n\\t<a id=\\\"loop-bound-events\\\" class=\\\"errorLink\\\" style=\\\"color:#F4376D;\\\"  href=\\\"#loop-bound-events\\\">Issue: Loop Bound Events</a><br />\\n</h2>\\n<div class=\\\"issueSection\\\">\\n<h3 class=\\\"seeHeader\\\">What you are experiencing</h3>\\n<p>\\n\\t\\tEvents that fire all have the same value, or point to the same event handler.\\n\\t</p>\\n<h3 class=\\\"possibleCauseHeader\\\">Possible Cause</h3>\\n<p class=\\\"possibleCause\\\">\\n\\t\\tYou used a loop to bind event handlers, and the final value in the loop is being referenced by the event handlers due to JavaScript&#8217;s <a href=\\\"https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Closures\\\">closures</a>.  This will cause the same value to be referenced by all event handlers that were bound in the loop.\\n\\t</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\n\\trequire([&quot;dojo/on&quot;], function (on) {\\r\\n\\t\\tfor (var i = 0, list = document.getElementById(&quot;list&quot;), item; i &lt; 5; i++) {\\r\\n\\t\\t\\titem = document.createElement(&quot;li&quot;);\\r\\n\\t\\t\\titem.innerHTML = &quot;List item #&quot; + i;\\r\\n\\t\\t\\ton(item, &quot;click&quot;, function () {\\r\\n\\t\\t\\t\\talert(i);\\r\\n\\t\\t\\t});\\r\\n\\t\\t\\tlist.appendChild(item);\\r\\n\\t\\t}\\r\\n\\t});\\r\\n\\t</pre>\\n<h3>How to fix it</h3>\\n<p class=\\\"solution\\\">\\n\\t\\tYou can create an event handler factory, or iterate over the items to add handlers using a forEach.\\n\\t</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\n\\tfunction createHandler(value) {\\r\\n\\t\\treturn function () {\\r\\n\\t\\t\\talert(value);\\r\\n\\t\\t};\\r\\n\\t}\\r\\n\\trequire([&quot;dojo/on&quot;], function (on) {\\r\\n\\t\\tfor (var i = 0, list = document.getElementById(&quot;list&quot;), item; i &lt; 5; i++) {\\r\\n\\t\\t\\titem = document.createElement(&quot;li&quot;);\\r\\n\\t\\t\\titem.innerHTML = &quot;List item #&quot; + i;\\r\\n\\t\\t\\ton(item, &quot;click&quot;, createHandler);\\r\\n\\t\\t\\titem.onclick = createHandler(i);\\r\\n\\t\\t\\tlist.appendChild(item);\\r\\n\\t\\t}\\r\\n\\t});\\r\\n\\t</pre>\\n<p class=\\\"solution\\\">\\n\\t\\tIf you&#8217;re iterating over items, you can use <a href=\\\"http://dojotoolkit.org/reference-guide/1.8/dojo/_base/array.html#foreach\\\">dojo/_base/array.forEach</a>\\n\\t</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\n\\trequire([&quot;dojo/_base/array&quot;, &quot;dojo/on&quot;], function (arrayUtil, on) {\\r\\n\\t\\tvar list = document.getElementById(&quot;list&quot;),\\r\\n\\t\\t\\tmyArray = [0, 1, 2, 3, 4],\\r\\n\\t\\t\\titem;\\r\\n\\r\\n\\t\\tarrayUtil.forEach(myArray, function (value) {\\r\\n\\t\\t\\titem = document.createElement(&quot;li&quot;);\\r\\n\\t\\t\\titem.innerHTML = &quot;List item #&quot; + value;\\r\\n\\t\\t\\ton(item, &quot;click&quot;, function () {\\r\\n\\t\\t\\t\\talert(value);\\r\\n\\t\\t\\t});\\r\\n\\t\\t\\tlist.appendChild(item);\\r\\n\\t\\t});\\r\\n\\t});\\r\\n\\r\\n\\t</pre>\\n<p class=\\\"solution\\\">\\n\\t\\tYou can use <a href=\\\"http://davidwalsh.name/event-delegate\\\">event delegation</a>.\\n\\t</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\n\\trequire([&quot;dojo/on&quot;, &quot;dojo/query&quot;], function (on) {\\r\\n\\t\\ton(document.getElementById(&quot;myContainer&quot;), &quot;button:click&quot;, function (e) {\\r\\n\\t\\t\\tconsole.log(&quot;I was clicked!&quot;, e.target);\\r\\n\\t\\t});\\r\\n\\t});\\r\\n\\t</pre>\\n</div>\\n<h2 class=\\\"errorHeader\\\">\\n\\t<a id=\\\"forgot-startup\\\" class=\\\"errorLink\\\" style=\\\"color:#F4376D;\\\"  href=\\\"#forgot-startup\\\">Issue: Forgot to Call startup</a><br />\\n</h2>\\n<div class=\\\"issueSection\\\">\\n<h3 class=\\\"seeHeader\\\">What you are experiencing</h3>\\n<p>\\n\\t\\tA Dijit does not appear to initialize fully.\\n\\t</p>\\n<h3 class=\\\"possibleCauseHeader\\\">Possible Cause</h3>\\n<p class=\\\"possibleCause\\\">\\n\\t\\tYou forgot to call <code>startup</code> on the Dijit.\\n\\t</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\r\\n\\t\\t&lt;div id=&quot;container&quot;&gt;&lt;/div&gt;\\r\\n\\t</pre>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\n\\trequire([&quot;dijit/layout/BorderContainer&quot;, &quot;dijit/layout/ContentPane&quot;], function (BorderContainer, ContentPane) {\\r\\n\\t\\tvar container = new BorderContainer({\\r\\n\\t\\t\\tdesign: &quot;sidebar&quot;,\\r\\n\\t\\t\\tgutters: true,\\r\\n\\t\\t\\tliveSplitters: true\\r\\n\\t\\t}, &quot;container&quot;),\\r\\n\\t\\tleftPane = new ContentPane({\\r\\n\\t\\t\\tsplitter: true,\\r\\n\\t\\t\\tregion: &quot;left&quot;,\\r\\n\\t\\t\\tinnerHTML: &quot;Left Pane&quot;\\r\\n\\t\\t}),\\r\\n\\t\\tcenterPane = new ContentPane({\\r\\n\\t\\t\\tsplitter: true,\\r\\n\\t\\t\\tregion: &quot;center&quot;,\\r\\n\\t\\t\\tinnerHTML: &quot;Center Pane&quot;\\r\\n\\t\\t});\\r\\n\\t\\t\\r\\n\\t\\tcontainer.addChild(leftPane);\\r\\n\\t\\tcontainer.addChild(centerPane);\\r\\n\\t});\\r\\n\\t</pre>\\n<h3 class=\\\"seeHeader\\\">What it looks like</h3>\\n<p>\\tWithout startup<br />\\n\\t<img class=\\\"alignnone size-full wp-image-5278 errorImage\\\" title=\\\"Forget Startup\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/Forget-Startup.png\\\" alt=\\\"\\\" width=\\\"347\\\" height=\\\"300\\\" /></p>\\n<p>\\tWith startup<br />\\n\\t<img src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/Forget-Startup-Correct.png\\\" alt=\\\"\\\" title=\\\"Calling Startup Correctly\\\" width=\\\"404\\\" height=\\\"399\\\" class=\\\"alignnone size-full wp-image-5643 errorImage\\\" /></p>\\n<h3 class=\\\"solutionHeader\\\">Solution</h3>\\n<p class=\\\"solution\\\">\\n\\t\\tEnsure you&#8217;re calling <code>startup</code> on widgets that are created programmatically.  This is especially true for layout widgets.\\n\\t</p>\\n</div>\\n<h2 class=\\\"errorHeader\\\">\\n\\t<a id=\\\"forgot-dom-ready\\\" class=\\\"errorLink\\\" style=\\\"color:#F4376D;\\\"  href=\\\"#forgot-dom-ready\\\">Issue: Forgot dojo/domReady!</a><br />\\n</h2>\\n<div class=\\\"issueSection\\\">\\n<h3 class=\\\"seeHeader\\\">What you&#8217;re likely to see in your debugging environment</h3>\\n<ul class=\\\"browserList\\\">\\n<li class=\\\"browserTitle\\\">Firefox + Firebug</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">TypeError: document.musicPrefs is undefined</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5283 errorImage\\\" title=\\\"Forgot domReady Firefox\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/domready-firefox.png\\\" alt=\\\"\\\" /></p>\\n<li class=\\\"browserTitle\\\">Chrome</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">Uncaught TypeError: Cannot read property &#8216;other&#8217; of undefined</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5282 errorImage\\\" title=\\\"Forgot domReady Chrome\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/domready-chrome.png\\\" alt=\\\"\\\" /></p>\\n<li class=\\\"browserTitle\\\">Internet Explorer 9</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">Unable to get value of the property &#8216;other&#8217;: object is null or undefined</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5284 errorImage\\\" title=\\\"Forgot domReady IE9\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/domready-ie.png\\\" alt=\\\"\\\" />\\n\\t</ul>\\n<h3 class=\\\"possibleCauseHeader\\\">Possible Cause</h3>\\n<p class=\\\"possibleCause\\\">\\n\\t\\tYou have forgotten to use <a href=\\\"http://dojotoolkit.org/reference-guide/1.8/dojo/domReady.html\\\">dojo/domReady!</a>.  <code>dojo/domReady!</code> waits until the DOM is ready to be manipulated before the <code>require</code> callback is executed.\\n\\t</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\r\\n\\t&lt;script&gt;\\r\\n\\t\\tdocument.musicPrefs.other.value = &quot;Afrobeat&quot;;\\r\\n\\t&lt;/script&gt;\\r\\n\\t&lt;form name=&quot;musicPrefs&quot;&gt;\\r\\n\\t\\t&lt;input type=&quot;text&quot; name=&quot;other&quot; /&gt;\\r\\n\\t&lt;/form&gt;\\r\\n\\t</pre>\\n<h3 class=\\\"solutionHeader\\\">Solution</h3>\\n<p class=\\\"solution\\\">\\n\\t\\tIf you need to interact with the DOM, use <a href=\\\"http://dojotoolkit.org/reference-guide/1.8/dojo/domReady.html\\\">dojo/domReady!</a> to ensure it&#8217;s completely loaded before your code executes on it.\\n\\t</p>\\n</div>\\n<h2 class=\\\"errorHeader\\\">\\n\\t<a id=\\\"forgot-theme-class-name\\\" class=\\\"errorLink\\\" style=\\\"color:#F4376D;\\\"  href=\\\"#forgot-theme-class-name\\\">Issue: Forgot Theme CSS Class Name</a><br />\\n</h2>\\n<div class=\\\"issueSection\\\">\\n<h3 class=\\\"seeHeader\\\">What you are experiencing</h3>\\n<p>\\n\\t\\tYour widgets look unstyled.\\n\\t</p>\\n<h3>What it looks like without class name</h3>\\n<p>\\t<img class=\\\"alignnone size-full wp-image-5290 errorImage\\\" title=\\\"Forgot Theme Incorrect\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/Forgot-Theme-Incorrect.png\\\" alt=\\\"\\\" width=\\\"65\\\" height=\\\"24\\\" /></p>\\n<h3>What it looks like with class name</h3>\\n<p>\\t<img class=\\\"alignnone size-full wp-image-5289 errorImage\\\" title=\\\"Forgot Theme Correct\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/Forgot-Theme-Correct.png\\\" alt=\\\"\\\" width=\\\"83\\\" height=\\\"30\\\" /></p>\\n<h3 class=\\\"possibleCauseHeader\\\">Possible Cause</h3>\\n<p class=\\\"possibleCause\\\">\\n\\t\\tYou have forgotten to put a theme class name on body tag.  This class is necessary on the body tag because of the way that the CSS rules are set up.\\n\\t</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\r\\n\\t&lt;body&gt;\\r\\n\\t\\t&lt;button&gt;Click me!&lt;/button&gt;\\r\\n\\t&lt;/body&gt;\\r\\n\\t</pre>\\n<h3 class=\\\"solutionHeader\\\">Solution</h3>\\n<p class=\\\"solution\\\">\\n\\t\\tEnsure you add the class name (<code>\\\"claro\\\"</code>, <code>\\\"tundra\\\"</code>, etc) of the theme to the body tag.  This class is necessary on the body tag because of the way that Dijit&#8217;s CSS rules are written.\\n\\t</p>\\n</div>\\n<h2 class=\\\"errorHeader\\\">\\n\\t<a id=\\\"failed-resource-load\\\" class=\\\"errorLink\\\" style=\\\"color:#F4376D;\\\"  href=\\\"#failed-resource-load\\\">Issue: Failed Resource Loading</a><br />\\n</h2>\\n<div class=\\\"issueSection\\\">\\n<h3 class=\\\"seeHeader\\\">What you&#8217;re likely to see in your debugging environment</h3>\\n<ul class=\\\"browserList\\\">\\n<li class=\\\"browserTitle\\\">Firefox + Firebug</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">GET http://localhost/dojo/invalid/path 404 Not Found</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5295 errorImage\\\" title=\\\"Failed XHR Firefox\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/failed-xhr-firefox.png\\\" alt=\\\"\\\" /></p>\\n<li class=\\\"browserTitle\\\">Chrome</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">Failed to load resource: the server responded with a status of 404 (Not Found)</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5294 errorImage\\\" title=\\\"Failed XHR Chrome\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/failed-xhr-chrome.png\\\" alt=\\\"\\\" /></p>\\n<li class=\\\"browserTitle hasNote\\\">Internet Explorer 9*</li>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5296 errorImage\\\" title=\\\"Failed XHR IE9\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/failed-xhr-ie.png\\\" alt=\\\"\\\" /></p>\\n<p>\\t\\t<em class=\\\"note\\\">* IE9 will not show an error in the JavaScript console, your code will simply just fail.  In order to see the 404, you have to go to the &#8220;Network&#8221; tab and click &#8220;Start Capturing&#8221;.</em>\\n\\t</ul>\\n<h3 class=\\\"possibleCauseHeader\\\">Possible Cause</h3>\\n<p class=\\\"possibleCause\\\">\\n\\t\\tFailed to load a resource via <a href=\\\"http://dojotoolkit.org/reference-guide/1.8/dojo/request.html\\\">request</a>.  This can happen if the file is missing or if the URL is wrong.  If you&#8217;re using <a href=\\\"http://dojotoolkit.org/reference-guide/1.8/dojo/request/registry.html\\\">dojo/request/registry</a>, you may have a provider set up incorrectly.\\n\\t</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\n\\trequire([&quot;dojo/request&quot;], function (request) {\\r\\n\\t\\trequest(&quot;invalid/path&quot;);\\r\\n\\t});\\r\\n\\t</pre>\\n<h3 class=\\\"solutionHeader\\\">Solution</h3>\\n<p class=\\\"solution\\\">\\n\\t\\tEnsure your requests are pointing to the right URL.  If you&#8217;re using <code>dojo/request/registry</code>, ensure that your provider is set up properly.\\n\\t</p>\\n</div>\\n<h2 class=\\\"errorHeader\\\">\\n\\t<a id=\\\"load-from-filesystem\\\" class=\\\"errorLink\\\" style=\\\"color:#F4376D;\\\"  href=\\\"#load-from-filesystem\\\">Issue: Load from the local File System</a><br />\\n</h2>\\n<div class=\\\"issueSection\\\">\\n<h3 class=\\\"seeHeader\\\">What you&#8217;re likely to see in your debugging environment</h3>\\n<ul class=\\\"browserList\\\">\\n<li class=\\\"browserTitle\\\">Chrome</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">XMLHttpRequest cannot load file:///D:/xampp/htdocs/dojo/test.xml. Origin null is not allowed by Access-Control-Allow-Origin.</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5300 errorImage\\\" title=\\\"Load from FileSystem\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/file-system-chrome.png\\\" alt=\\\"\\\" />\\n\\t</ul>\\n<h3 class=\\\"possibleCauseHeader\\\">Possible Cause</h3>\\n<p class=\\\"possibleCause\\\">\\n\\t\\tLoaded file from file system and not web server.\\n\\t</p>\\n<h3 class=\\\"solutionHeader\\\">Solution</h3>\\n<p class=\\\"solution\\\">\\n\\t\\tEnsure you are loading a page using the web server (http:// or https://) and not the file system (file:///)\\n\\t</p>\\n</div>\\n<h2 class=\\\"errorHeader\\\">\\n\\t<a id=\\\"trailing-comma\\\" class=\\\"errorLink\\\" style=\\\"color:#F4376D;\\\"  href=\\\"#trailing-comma\\\">Issue: Trailing comma</a><br />\\n</h2>\\n<div class=\\\"issueSection\\\">\\n<h3 class=\\\"seeHeader\\\">What you&#8217;re likely to see in your debugging environment</h3>\\n<ul class=\\\"browserList\\\">\\n<li class=\\\"browserTitle\\\">IE7 and before</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">Expected identifier, string or number</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5298 errorImage\\\" title=\\\"trailing comma\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/trailing-comma-ie.png\\\" alt=\\\"\\\" />\\n\\t</ul>\\n<h3 class=\\\"possibleCauseHeader\\\">Possible Cause</h3>\\n<p class=\\\"possibleCause\\\">\\n\\t\\tTrailing comma in object literal.  This is typically only an issue with IE7 and before, but is not valid, and should be avoided.\\n\\t</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\n\\tvar user = {\\r\\n\\t\\tname: &quot;matt&quot;,\\r\\n\\t\\temail: &quot;matt@email.com&quot;,\\r\\n\\t};\\r\\n\\t</pre>\\n<h3 class=\\\"solutionHeader\\\">Solution</h3>\\n<p class=\\\"solution\\\">\\n\\t\\tEnsure you do not have trailing commas in your object literals.\\n\\t</p>\\n</div>\\n<h2 class=\\\"errorHeader\\\">\\n\\t<a id=\\\"semicolon-object-literal\\\" class=\\\"errorLink\\\" style=\\\"color:#F4376D;\\\"  href=\\\"#semicolon-object-literal\\\">Issue: Semicolon in Object Literal</a><br />\\n</h2>\\n<div class=\\\"issueSection\\\">\\n<h3 class=\\\"seeHeader\\\">What you&#8217;re likely to see in your debugging environment</h3>\\n<ul class=\\\"browserList\\\">\\n<li class=\\\"browserTitle\\\">Firefox + Firebug</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">SyntaxError: missing } after property list</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5303 errorImage\\\" title=\\\"Using semicolon instead of comma Firefox\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/semicolon-firefox.png\\\" alt=\\\"\\\" /></p>\\n<li class=\\\"browserTitle\\\">Chrome</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">Uncaught SyntaxError: Unexpected token ;</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5302 errorImage\\\" title=\\\"Using semicolon instead of comma Chrome\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/semicolon-chrome.png\\\" alt=\\\"\\\" /></p>\\n<li class=\\\"browserTitle\\\">Internet Explorer 9</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">Expected &#8216;}&#8217;</span></p>\\n<p>\\t\\t<img class=\\\"alignnone size-full wp-image-5304 errorImage\\\" title=\\\"Using semicolon instead of comma IE9\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/semicolon-firefox.png\\\" alt=\\\"\\\" />\\n\\t</ul>\\n<h3 class=\\\"possibleCauseHeader\\\">Possible Cause</h3>\\n<p class=\\\"possibleCause\\\">\\n\\t\\tUsed &#8216;;&#8217; instead of &#8216;,&#8217; in object literal.\\n\\t</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\n\\tvar user = {\\r\\n\\t\\tname: &quot;matt&quot;;\\r\\n\\t\\temail: &quot;matt@email.com&quot;\\r\\n\\t};\\r\\n\\t</pre>\\n<h3 class=\\\"solutionHeader\\\">Solution</h3>\\n<p class=\\\"solution\\\">\\n\\t\\tEnsure that you use a comma between properties in object literals.\\n\\t</p>\\n</div>\\n<h2 class=\\\"errorHeader\\\">\\n\\t<a id=\\\"define-already-defined\\\" class=\\\"errorLink\\\" style=\\\"color:#F4376D;\\\"  href=\\\"#define-already-defined\\\">Issue: define Already Defined</a><br />\\n</h2>\\n<div class=\\\"issueSection\\\">\\n<h3 class=\\\"seeHeader\\\">What you&#8217;re likely to see in your debugging environment</h3>\\n<ul class=\\\"browserList\\\">\\n<li class=\\\"browserTitle\\\">Firefox + Firebug</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">defineAlreadyDefined</span></p>\\n<p>\\t\\t<img src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/Loading-Dojo-Twice-FireFox.png\\\" alt=\\\"\\\" title=\\\"Loading Dojo Twice Firefox\\\" width=\\\"596\\\" height=\\\"492\\\" class=\\\"alignnone size-full wp-image-5330 errorImage\\\" /></p>\\n<li class=\\\"browserTitle\\\">Chrome</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">defineAlreadyDefined</span></p>\\n<p>\\t\\t<img src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/dojo-twice-chrome.png\\\" alt=\\\"\\\" title=\\\"Loading Dojo Twice Chrome\\\" class=\\\"alignnone size-full wp-image-5329 errorImage\\\" /></p>\\n<li class=\\\"browserTitle\\\">Internet Explorer 9</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">defineAlreadyDefined</span></p>\\n<p>\\t\\t<img src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/dojo-twice-ie.png\\\" alt=\\\"\\\" title=\\\"Loading Dojo Twice IE9\\\" class=\\\"alignnone size-full wp-image-5331 errorImage\\\" />\\n\\t</ul>\\n<h3 class=\\\"possibleCauseHeader\\\">Possible Cause</h3>\\n<p class=\\\"possibleCause\\\">\\n\\t\\tIncluding Dojo twice.\\n\\t</p>\\n<pre class=\\\"brush: xml; title: ; notranslate\\\" title=\\\"\\\">\\r\\n\\t    &lt;script src=&quot;dojo.js&quot;&gt;&lt;/script&gt;\\r\\n\\t    &lt;script src=&quot;dojo.js&quot;&gt;&lt;/script&gt;\\r\\n\\t</pre>\\n<h3 class=\\\"solutionHeader\\\">Solution</h3>\\n<p class=\\\"solution\\\">\\n\\t\\tEnsure you are including Dojo only once.\\n\\t</p>\\n</div>\\n<h2 class=\\\"errorHeader\\\">\\n\\t<a id=\\\"non-module\\\" class=\\\"errorLink\\\" style=\\\"color:#F4376D;\\\"  href=\\\"#non-module\\\">Issue: Non-module module</a><br />\\n</h2>\\n<div class=\\\"issueSection\\\">\\n<h3 class=\\\"seeHeader\\\">What you&#8217;re likely to see in your debugging environment</h3>\\n<ul class=\\\"browserList\\\">\\n<li class=\\\"browserTitle\\\">Firefox + Firebug</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">TypeError: myModule.init is not a function</span></p>\\n<p>\\t\\t<img src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/require-firefox.png\\\" alt=\\\"\\\" title=\\\"require instead of define firefox\\\"  class=\\\"alignnone size-full wp-image-5357 errorImage\\\" /></p>\\n<li class=\\\"browserTitle\\\">Chrome</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">Uncaught TypeError: Object 3 has no method &#8216;init&#8217;</span></p>\\n<p>\\t\\t<img src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/require-chrome.png\\\" alt=\\\"\\\" title=\\\"require instead of define chrome\\\" class=\\\"alignnone size-full wp-image-5356 errorImage\\\" /></p>\\n<li class=\\\"browserTitle\\\">Internet Explorer 9</li>\\n<p>\\t\\t<span class=\\\"errorMessage\\\">Object doesn&#8217;t support property or method &#8216;init&#8217;</span></p>\\n<p>\\t\\t<img src=\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/require-ie.png\\\" alt=\\\"\\\" title=\\\"require instead of define ie9\\\" class=\\\"alignnone size-full wp-image-5358 errorImage\\\" />\\n\\t</ul>\\n<h3 class=\\\"possibleCauseHeader\\\">Possible Cause</h3>\\n<p class=\\\"possibleCause\\\">\\n\\t\\tYou used <a href=\\\"http://dojotoolkit.org/reference-guide/1.8/dojo/require.html\\\">require</a> instead of <a href=\\\"http://dojotoolkit.org/reference-guide/1.8/loader/amd.html#the-amd-api\\\">define</a> in your module definition.  This will cause the module to be returned to your callback as &#8220;3&#8221;, which is the Dojo loader error code for non-module.\\n\\t</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\n\\t// Inside of your module\\r\\n\\trequire([&quot;dojo/on&quot;], function (on) {\\r\\n\\t    return {\\r\\n\\t        init: function () {\\r\\n\\t\\t\\t\\ton(this.buttonNode, &quot;click&quot;, function () {\\r\\n\\t\\t\\t\\t\\tthis.submitForm();\\r\\n\\t\\t\\t\\t});\\r\\n\\t\\t\\t}\\r\\n\\t    };\\r\\n\\t});\\r\\n\\t</pre>\\n<h3 class=\\\"solutionHeader\\\">Solution</h3>\\n<p class=\\\"solution\\\">\\n\\t\\tEnsure you are using <code>define</code> in your module definitions.\\n\\t</p>\\n</div>\\n<h3>Conclusion</h3>\\n<p class=\\\"conclusion\\\">Troubleshooting some JavaScript and dojo errors can be tedious and frustrating, but knowing these common errors will help alleviate some of that stress.  There are also tools, such as <a href=\\\"http://www.jshint.com/\\\">JSHint </a> that can help you lint your code and provide a quick set of eyes to catch some of the errors that were outlined here.  Also, learning how to use Firebug or the Developer Console can also help shave time off of your development and debugging process.</p>\\n<p class=\\\"conclusion\\\">\\nOur team thinks this list should become a living document of common error messages so, please submit suggestions in the comments and we&#8217;ll incorporate them into this project in the future!</p>\\n<h3>Getting Help</h3>\\n<p class=\\\"conclusion\\\">\\nIf you need assistance, <a href=\\\"https://www.sitepen.com/\\\">SitePen</a> delivers <a href=\\\"https://www.sitepen.com/workshops/\\\">Dojo workshops</a>, which range from an introduction to Dojo&#8217;s core APIs, to more advanced workshop covering approaches to building desktop and mobile web user interfaces, and proper client-side application architecture. We also offer excellent <a href=\\\"https://www.sitepen.com/services/\\\">JavaScript and Dojo support</a> to help you work through any issues you may find. <a href=\\\"https://www.sitepen.com/contact/\\\">Contact us</a> to discuss your project and how we can help.\\n</p>\\n<style type=\\\"text/css\\\">\\n\\t.blog article h2.errorHeader {\\n\\t\\tbackground:url(\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/issue.png\\\") no-repeat 0 25px;\\n\\t\\tpadding-left:55px;\\n\\t\\tpadding-top:20px;\\n\\t\\tline-height:55px;\\n\\t\\tfont-size:1.2em;\\n\\t\\tmargin-top:1em;\\n\\t\\tborder-top:1px dotted #bbb;\\n\\t\\tmargin-bottom:0;\\n\\t}body h3.solutionHeader {\\n\\t\\tbackground:url(\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/solution.png\\\") no-repeat 0 center;\\n\\t\\tpadding-left:35px;\\n\\t\\tpadding-top:2px;\\n\\t\\tline-height:35px;\\n\\t\\tmargin-top:1.5em;\\n\\t\\tfont-size:1.1em;\\n\\t}body h3.possibleCauseHeader {\\n\\t\\tbackground:url(\\\"https://wp.sitepen.com/wp-content/uploads/2012/10/code.png\\\") no-repeat 0 center;\\n\\t\\tpadding-left:35px;\\n\\t\\tpadding-top:2px;\\n\\t\\tline-height:35px;\\n\\t\\tmargin-top:1.5em;\\n\\t\\tfont-size:1.1em;\\n\\t}body h3.seeHeader {\\n\\t\\tmargin-top:0;\\n\\t\\tcolor:#000;\\n\\t}body article .browserTitle {\\n\\t\\tmargin-top:1.45em;\\n\\t\\tfont-weight:bold;\\n\\t\\tfont-size:0.95em;\\n\\t\\tcolor:#444;\\n\\t\\tlist-style-type:none;\\n\\t} body article .browserList {\\n\\t\\tmargin-left:0;\\n\\t\\tpadding-left:0.2em;\\n\\t}body article .browserList p {\\n\\t\\tmargin-top:0.4em;\\n\\t}.issueSection {\\n\\t\\tpadding-left:55px;\\n\\t}.langType, .hasNote {\\n\\t\\t\\tfont-size:0.95em;\\n\\t\\t\\tcolor:#444;\\n\\t}\\n</style>\\n\",\"protected\":false},\"excerpt\":{\"rendered\":\"<p>Debugging JavaScript can be a tedious and frustrating chore. To compound the already difficult task of debugging, browser vendors each have their own style of error messaging, some of which are confusing, cryptic, or downright misleading to the untrained eye. Through the delivery of our Dojo workshops, we&#8217;ve observed a number of common mistakes that [&hellip;]</p>\\n\",\"protected\":false},\"author\":44,\"featured_media\":5239,\"comment_status\":\"closed\",\"ping_status\":\"closed\",\"sticky\":false,\"template\":\"\",\"format\":\"standard\",\"meta\":{\"spay_email\":\"\"},\"categories\":[45,3,43],\"tags\":[56],\"jetpack_featured_media_url\":\"\",\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.3 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Debugging Dojo: Common Error Messages | SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"index, follow\\\" />\\n<meta name=\\\"googlebot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<meta name=\\\"bingbot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<link rel=\\\"canonical\\\" href=\\\"https://www.sitepen.com/blog/debugging-dojo-common-error-messages/\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Debugging Dojo: Common Error Messages | SitePen\\\" />\\n<meta property=\\\"og:description\\\" content=\\\"Debugging JavaScript can be a tedious and frustrating chore. To compound the already difficult task of debugging, browser vendors each have their own style of error messaging, some of which are confusing, cryptic, or downright misleading to the untrained eye. Through the delivery of our Dojo workshops, we&#8217;ve observed a number of common mistakes that [&hellip;]\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/debugging-dojo-common-error-messages/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:published_time\\\" content=\\\"2012-10-31T22:37:26+00:00\\\" />\\n<meta property=\\\"article:modified_time\\\" content=\\\"2019-12-11T13:56:35+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1600\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"900\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/debugging-dojo-common-error-messages/#primaryimage\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/debugging-dojo-common-error-messages/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/debugging-dojo-common-error-messages/\\\",\\\"name\\\":\\\"Debugging Dojo: Common Error Messages | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"primaryImageOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/debugging-dojo-common-error-messages/#primaryimage\\\"},\\\"datePublished\\\":\\\"2012-10-31T22:37:26+00:00\\\",\\\"dateModified\\\":\\\"2019-12-11T13:56:35+00:00\\\",\\\"author\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/992c0aa008d4d018a09c13f115ad6d6f\\\"},\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://www.sitepen.com/blog/debugging-dojo-common-error-messages/\\\"]}]},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/992c0aa008d4d018a09c13f115ad6d6f\\\",\\\"name\\\":\\\"Matthew Maxwell\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/fc2db160de23548391e986c0133c8005?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Matthew Maxwell\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/5215\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/post\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/44\"}],\"replies\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/comments?post=5215\"}],\"version-history\":[{\"count\":1,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/5215/revisions\"}],\"predecessor-version\":[{\"id\":19745,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/5215/revisions/19745\"}],\"wp:featuredmedia\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/5239\"}],\"wp:attachment\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media?parent=5215\"}],\"wp:term\":[{\"taxonomy\":\"category\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/categories?post=5215\"},{\"taxonomy\":\"post_tag\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/tags?post=5215\"}],\"curies\":[{\"name\":\"wp\",\"href\":\"https://api.w.org/{rel}\",\"templated\":true}]},\"_embedded\":{\"author\":[{\"id\":44,\"name\":\"Matthew Maxwell\",\"url\":\"https://www.sitepen.com\",\"description\":\"\",\"link\":\"https://wp.sitepen.com/blog/author/mmaxwell/\",\"slug\":\"mmaxwell\",\"avatar_urls\":{\"24\":\"https://secure.gravatar.com/avatar/fc2db160de23548391e986c0133c8005?s=24&d=mm&r=g\",\"48\":\"https://secure.gravatar.com/avatar/fc2db160de23548391e986c0133c8005?s=48&d=mm&r=g\",\"96\":\"https://secure.gravatar.com/avatar/fc2db160de23548391e986c0133c8005?s=96&d=mm&r=g\"},\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.3 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Matthew Maxwell, Author at SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"profile\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Matthew Maxwell, Author at SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/author/mmaxwell/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://secure.gravatar.com/avatar/fc2db160de23548391e986c0133c8005?s=500&#038;d=mm&#038;r=g\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ProfilePage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/mmaxwell/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/author/mmaxwell/\\\",\\\"name\\\":\\\"Matthew Maxwell, Author at SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/992c0aa008d4d018a09c13f115ad6d6f\\\",\\\"name\\\":\\\"Matthew Maxwell\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/fc2db160de23548391e986c0133c8005?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Matthew Maxwell\\\"},\\\"mainEntityOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/mmaxwell/#webpage\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/44\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users\"}]}}],\"wp:featuredmedia\":[{\"code\":\"rest_post_invalid_id\",\"message\":\"Invalid post ID.\",\"data\":{\"status\":404}}]}}]","headers":[["access-control-allow-headers","Authorization, Content-Type"],["access-control-expose-headers","X-WP-Total, X-WP-TotalPages"],["allow","GET"],["cf-cache-status","DYNAMIC"],["cf-ray","5a777da2dd6a0686-LHR"],["cf-request-id","037e8cd9c9000006866b255200000001"],["connection","close"],["content-encoding","gzip"],["content-type","application/json; charset=UTF-8"],["date","Mon, 22 Jun 2020 16:54:22 GMT"],["expect-ct","max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""],["link","<https://wp.sitepen.com/wp-json/>; rel=\"https://api.w.org/\""],["server","cloudflare"],["set-cookie","__cfduid=d0d75b00458d02928c455b24ffc8b629c1592844861; expires=Wed, 22-Jul-20 16:54:21 GMT; path=/; domain=.sitepen.com; HttpOnly; SameSite=Lax"],["transfer-encoding","chunked"],["vary","Origin"],["x-content-type-options","nosniff"],["x-robots-tag","noindex"],["x-wp-total","1"],["x-wp-totalpages","1"]]},"type":"Object"}