{"value":{"body":"[{\"id\":685,\"date\":\"2009-03-30T00:07:08\",\"date_gmt\":\"2009-03-30T07:07:08\",\"guid\":{\"rendered\":\"https://www.sitepen.com/blog/2009/03/30/architecting-queued/\"},\"modified\":\"2009-03-30T00:07:08\",\"modified_gmt\":\"2009-03-30T07:07:08\",\"slug\":\"architecting-queued\",\"status\":\"publish\",\"type\":\"post\",\"link\":\"https://wp.sitepen.com/blog/architecting-queued/\",\"title\":{\"rendered\":\"Queued: Architectural Decisions\"},\"content\":{\"rendered\":\"<p>Dojo is a very flexible toolkit; it doesn&#8217;t dictate how you organize your code or create your widgets. It simply provides tools, and it&#8217;s up to you to decide how you want to fit them together. Developing with AIR puts you squarely in the browser-based application model, but aside from that it mostly stays out of your way as well. As part of our series on the Queued development process, I&#8217;m going to take a look at the decisions we made and the philosophies we adopted for the project. It should provide some insight into our process.</p>\\n<p><!--more--></p>\\n<h2>Deciding on Functionality</h2>\\n<p>Certain requirements were set in stone from the beginning. We had to use AIR&#8217;s database. We had to do an offline mode. We had to support a mode where Queued could run in the background. We had to demonstrate a tight Dojo build. We had to support drag and drop for queue re-ordering&mdash;stuff like that. Other things were optional; for example, we <em>could</em> demonstrate the Encrypted Local Store (ELS), but it wasn&#8217;t a blocker. After that, though, it was pretty wide open, so we had to decide how much to bite off and still be able to meet our deadlines.</p>\\n<h3>To Be, or Not to Be (Multi-User)?</h3>\\n<p>We did a lot of work around the user model. Should we support multiple accounts? That seems like an obvious feature to include, and as web application developers, we work with user authentication all the time. So, we prototyped a model where the application would store separate user credentials in the ELS and use those to authenticate with Netflix. Here are a few screenshots of the designs we went through:</p>\\n<p style=\\\"text-align:center;\\\">\\n<img src='https://wp.sitepen.com/wp-content/uploads/2009/03/login-dialog.jpg' alt='Queued alpha login dialog'/><br />\\n<img src='https://wp.sitepen.com/wp-content/uploads/2009/03/login-integrated.jpg' alt='Queued alpha login redux' />\\n</p>\\n<p>And after the <em>Less Red</em> Redesign that Torrey talked about in a previous post:</p>\\n<p style=\\\"text-align:center;\\\">\\n<img src='https://wp.sitepen.com/wp-content/uploads/2009/03/login-blue.jpg' alt='Queued alpha login, attempt 3' /><br />\\n<img src='https://wp.sitepen.com/wp-content/uploads/2009/03/login-blue-password.jpg' alt='Queued alpha login, attempt 3 (password entry)' />\\n</p>\\n<h3>Integrating the Pieces</h3>\\n<p>Quite a few of Queued&#8217;s internals were still in the prototype stage at this point, and right about here was where the OAuth code started getting put in place. This presented us with a challenge. As a team, we&#8217;re so used to the web application authentication model&mdash;where authentication happens on some remote server&mdash;that we were automatically falling into that paradigm almost out of habit. It&#8217;s just the way our projects tend to work. However, Queued is essentially a desktop application, so that model doesn&#8217;t necessarily fit.</p>\\n<p>We had originally assumed we&#8217;d be able to store sets of login credentials in the ELS and use those at application startup to authenticate with the Netflix API and get rolling. However, Netflix uses the <a href=\\\"http://oauth.net/\\\">OAuth protocol</a>, and OAuth fundamentally doesn&#8217;t work that way.</p>\\n<p>Traditional username/password-based authentication is like showing your ID to get into, say, a bar. You come and go as you please, but if you leave for long enough, be prepared to flash your ID again to get back in. OAuth, on the other hand, is like having your hand stamped when you enter an amusement park: if you leave, the stamp gets you back in. In this case, the stamp is a token you use to sign your API calls, and Queued gets this token after redirecting you to netflix.com so you can authorize the application to access your account. So, <strong><em>Queued never knows your Netflix login credentials at any time.</em></strong>. This is how OAuth is designed, and it has its benefits, but it didn&#8217;t really work with our defined interaction/login model.</p>\\n<h3>Decision Time</h3>\\n<p>We had to make a difficult decision: cut multi-user capability for the 1.0 release. We feel this decision made sense, not only because of the deadline constraints, but because by default, AIR provides different databases and ELS for each operating system user, and we <em>were</em> building a desktop application, after all. We decided to follow that model, and since that&#8217;s what AIR expects, the entire toolchain would inherently support that mode of operation.</p>\\n<p>In the final 1.0 release, therefore, you won&#8217;t find any login screens, but you <em>will</em> find a button that kicks off the OAuth handshake:</p>\\n<p style=\\\"text-align:center;\\\">\\n<img src='https://wp.sitepen.com/wp-content/uploads/2009/03/login-oauth.jpg' alt='Queued OAuth-based authentication' />\\n</p>\\n<p>It was tough to say goodbye to multi-user capability, but in the end, it let us focus on our core requirements, so in retrospect, it was probably the right decision to make under the circumstances. <a href=\\\"http://code.google.com/p/queued/\\\">Queued is Open Source</a>, of course, so don&#8217;t feel like you have to wait on us if you want that implemented; aside from the necessary UI work, Queued&#8217;s internals are mostly set up so they don&#8217;t care whether the app is single-user or multi-user. Have at it ðŸ™‚</p>\\n<p>That&#8217;s one example of the kind of iterative process we use. Let&#8217;s talk architecture.</p>\\n<h2>Deciding on Architecture</h2>\\n<p>Getting a new Dojo-based project started can sometimes be daunting, precisely <em>because</em> it doesn&#8217;t force a particular structure on you. The field is wide open. Our first task was to start putting <a href=\\\"/labs/dair/\\\">dAIR</a>-based tests together to figure out how we should handle things like window initialization and database access. While that was happening, we had to figure out how to organize our assets and divide up responsibility within the team. We landed on a few key things&mdash;nothing really new, but certainly, choices that we could have easily taken in a different direction.</p>\\n<h3>Do as much as possible in CSS.</h3>\\n<p>Dojo&#8217;s widget toolkit, Dijit, is robust. You get i18n &amp; a11y out of the box, for example. However, those were outside the scope of this project, which was to be a small fast technology demo. One specific requirement was to keep the built .air package as small as possible, so we made the choice to cut everything that didn&#8217;t directly contribute to our project requirements. Since we were dealing with a single WebKit-based engine and didn&#8217;t need all of the great cross-engine compatibility stuff in Dijit, and since CSS is generally faster than JavaScript for just about anything that CSS can do, our simple rule was that if you can do something in CSS, you do it in CSS. Even if it took JavaScript code to trigger a change, we pushed as much of the change as possible into the stylesheet. This means, for example, that we created a lot of CSS classes to define state (stuff like &#8220;.movie.inQueue&#8221;) rather than changing node styles individually.</p>\\n<p>If you read through the code in the <a href=\\\"http://code.google.com/p/queued/source/browse/\\\">repository</a>, you&#8217;ll certainly find some Dijit, but it&#8217;s mostly restricted to the <a href=\\\"http://code.google.com/p/queued/source/browse/trunk/src/js/dev/qd/init.js\\\">initial interface layout</a> (BorderContainer and friends).</p>\\n<h3>Stick with Unobtrusive JavaScript.</h3>\\n<p>Most people advocate the concept of Unobtrusive JavaScript, for a variety of reasons. For Queued, we didn&#8217;t have to worry about SEO, making sure our tags were semantic, or any of the big philosophical ideas of Correctness. In an app like this, HTML simply acts as a UI spec. What it came down to for us was separation of design and behavior. It allowed our CSS pros to work their magic on as sparse a DOM as we could provide, without distraction by things like inline event handlers. There was probably a tiny performance benefit to not including the Dojo parser and working through the DOM looking for dojoType attributes and instantiating widgets in markup, but that&#8217;s just a nice side effect.</p>\\n<p>Initializing widgets in this style usually means running some code with <code>dojo.addOnLoad</code>, selecting nodes with <code>dojo.query</code> or <code>dojo.byId</code>, and attaching event handlers to them with <code>dojo.connect</code>. The <code>dojo.behavior</code> module is a great way to do this <em>en masse</em>. We ended up structuring our application code where most modules followed a pattern like this:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\ndojo.provide(&quot;qd.app.someModule&quot;);\\n\\ndojo.require(&quot;dojo.behavior&quot;);\\ndojo.require(&quot;qd.app&quot;);\\n\\nqd.app.someModule = new (function(){\\n\\t// private variables\\n\\tvar foo = null,\\n\\t    bar = null,\\n\\t    thinger = null;\\n\\n\\tfunction privateMethod(){\\n\\t\\t// code here\\n\\t}\\n\\n\\tthis.publicMethod = function(){\\n\\t\\t// code here\\n\\t};\\n\\n\\t// this module's behaviors\\n\\tdojo.behavior.add({\\n\\t\\t&quot;.someSelector .someOtherOne&quot;:{\\n\\t\\t\\tonmouseover:function(e){\\n\\t\\t\\t\\t// code here\\n\\t\\t\\t},\\n\\t\\t\\tonclick:function(e){\\n\\t\\t\\t\\t// code here\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t&quot;#oneParticularNode .childNode img.thinger&quot;:{\\n\\t\\t\\tonclick:function(e){\\n\\t\\t\\t\\t// code here\\n\\t\\t\\t}\\n\\t\\t}\\n\\t});\\n})();\\n</pre>\\n<p>To use this code in the application, we simply do <code>dojo.require(\\\"qd.app.someModule\\\")</code> in the initialization code; the closure gets put together immediately, and the module gets itself all set up.</p>\\n<p>Being closure-bound like this, each module now had &#8220;private&#8221; and &#8220;public&#8221; members, and we could use <code>dojo.behavior</code> in each module to provide that module&#8217;s behaviors. Used this way, <code>dojo.behavior</code> will do a bunch of <code>dojo.query</code>/<code>dojo.connect</code> sequences for us; the syntax is more direct than doing them all manually, so it makes for more readable code.</p>\\n<p>JSLint doesn&#8217;t particularly like the <code>someModule = new (function(){ ... })()</code> idiom, however. It always complains, &#8220;weird construction. Delete &#8216;new'&#8221;, but it&#8217;s a perfectly valid way to create singleton modules, so we stuck with it.</p>\\n<p>As an example, you may want to look at <a href=\\\"http://code.google.com/p/queued/source/browse/trunk/src/js/dev/qd/app/tooltip.js\\\">tooltip.js</a>, which is the module that creates the movie hover info toolip. It&#8217;s fully self-contained, without a single public member. Also, try <a href=\\\"http://code.google.com/p/queued/source/browse/trunk/src/js/dev/qd/app/ratings.js\\\">ratings.js</a>, which builds the star rating widgets. Those are good examples of the code structure I&#8217;m talking about.</p>\\n<h3>Abstract functionality into internal services.</h3>\\n<p>Finally, even though there isn&#8217;t necessarily the concept of a server-side and a client-side in this kind of application, we decided to organize certain things as though there was, by creating various &#8220;services&#8221; to act as data sources to the application. They&#8217;re the middle layer between the application and AIR system-level stuff like the database or ELS or external data like the Netflix API. For example, we created a service to parse Netflix&#8217;s XML, a service to handle authentication, and a few others. To the rest of the application, those act as an internal API that abstracts the lower-level details away and keeps the app code focused on the interaction of our objects.</p>\\n<p>The biggest place where this structure helped was in creating the offline mode. One of our modules continually monitors network availability and stores the status in <code>qd.services.network.available</code>. The rest of the application will automatically toggle between online and offline modes because of this simple bit of code:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\nqd.__defineGetter__(&quot;service&quot;, function(){\\n\\t//\\tsummary:\\n\\t//\\t\\tReturn the proper service (qd.services.online, qd.services.offline)\\n\\t//\\t\\tbased on the current network status.\\n\\tvar b = qd.services.network.available;\\n\\treturn b ? qd.services.online : qd.services.offline;\\t//\\tObject\\n});\\n</pre>\\n<p>That&#8217;s it! This getter transparently (to the caller) switches between the Netflix API and the local database cache as network availability varies, so calling <code>qd.service.titles.find(...)</code>, for example, will search for titles using the best available source automatically. The calling code doesn&#8217;t need to figure that out for itself.</p>\\n<h2>Check it Out</h2>\\n<p><a href=\\\"https://www.sitepen.com/services/?view=queued\\\">Queued</a> lives in <a href=\\\"https://www.sitepen.com/services/?view=queued\\\">SitePen Labs</a>, so check that out if you haven&#8217;t already. The latest code is hosted at <a href=\\\"http://code.google.com/p/queued/\\\">Google Code</a>. Check back soon for more in our Queued series.</p>\\n\",\"protected\":false},\"excerpt\":{\"rendered\":\"<p>Dojo is a very flexible toolkit; it doesn&#8217;t dictate how you organize your code or create your widgets. It simply provides tools, and it&#8217;s up to you to decide how you want to fit them together. Developing with AIR puts you squarely in the browser-based application model, but aside from that it mostly stays out [&hellip;]</p>\\n\",\"protected\":false},\"author\":19,\"featured_media\":22075,\"comment_status\":\"closed\",\"ping_status\":\"closed\",\"sticky\":false,\"template\":\"\",\"format\":\"standard\",\"meta\":{\"spay_email\":\"\"},\"categories\":[288,46,31,45,3,54,16,307],\"tags\":[],\"series\":[],\"jetpack_featured_media_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\",\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.5 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Queued: Architectural Decisions | SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"index, follow\\\" />\\n<meta name=\\\"googlebot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<meta name=\\\"bingbot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<link rel=\\\"canonical\\\" href=\\\"https://www.sitepen.com/blog/architecting-queued/\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Queued: Architectural Decisions | SitePen\\\" />\\n<meta property=\\\"og:description\\\" content=\\\"Dojo is a very flexible toolkit; it doesn&#8217;t dictate how you organize your code or create your widgets. It simply provides tools, and it&#8217;s up to you to decide how you want to fit them together. Developing with AIR puts you squarely in the browser-based application model, but aside from that it mostly stays out [&hellip;]\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/architecting-queued/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:published_time\\\" content=\\\"2009-03-30T07:07:08+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1600\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"900\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/architecting-queued/#primaryimage\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\",\\\"width\\\":1600,\\\"height\\\":900},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/architecting-queued/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/architecting-queued/\\\",\\\"name\\\":\\\"Queued: Architectural Decisions | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"primaryImageOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/architecting-queued/#primaryimage\\\"},\\\"datePublished\\\":\\\"2009-03-30T07:07:08+00:00\\\",\\\"dateModified\\\":\\\"2009-03-30T07:07:08+00:00\\\",\\\"author\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/92f3b5395bb56e1652aae279b81c8623\\\"},\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://www.sitepen.com/blog/architecting-queued/\\\"]}]},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/92f3b5395bb56e1652aae279b81c8623\\\",\\\"name\\\":\\\"Revin Guillen\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/90368795910d217696d3456dbfb2f628?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Revin Guillen\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/685\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/post\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/19\"}],\"replies\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/comments?post=685\"}],\"version-history\":[{\"count\":0,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/685/revisions\"}],\"wp:featuredmedia\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/22075\"}],\"wp:attachment\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media?parent=685\"}],\"wp:term\":[{\"taxonomy\":\"category\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/categories?post=685\"},{\"taxonomy\":\"post_tag\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/tags?post=685\"},{\"taxonomy\":\"series\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/series?post=685\"}],\"curies\":[{\"name\":\"wp\",\"href\":\"https://api.w.org/{rel}\",\"templated\":true}]},\"_embedded\":{\"author\":[{\"id\":19,\"name\":\"Revin Guillen\",\"url\":\"https://www.sitepen.com\",\"description\":\"\",\"link\":\"https://wp.sitepen.com/blog/author/rguillen/\",\"slug\":\"rguillen\",\"avatar_urls\":{\"24\":\"https://secure.gravatar.com/avatar/90368795910d217696d3456dbfb2f628?s=24&d=mm&r=g\",\"48\":\"https://secure.gravatar.com/avatar/90368795910d217696d3456dbfb2f628?s=48&d=mm&r=g\",\"96\":\"https://secure.gravatar.com/avatar/90368795910d217696d3456dbfb2f628?s=96&d=mm&r=g\"},\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.5 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Revin Guillen, Author at SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"profile\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Revin Guillen, Author at SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/author/rguillen/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://secure.gravatar.com/avatar/90368795910d217696d3456dbfb2f628?s=500&#038;d=mm&#038;r=g\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ProfilePage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/rguillen/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/author/rguillen/\\\",\\\"name\\\":\\\"Revin Guillen, Author at SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/92f3b5395bb56e1652aae279b81c8623\\\",\\\"name\\\":\\\"Revin Guillen\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/90368795910d217696d3456dbfb2f628?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Revin Guillen\\\"},\\\"mainEntityOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/rguillen/#webpage\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/19\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users\"}]}}],\"wp:featuredmedia\":[{\"id\":22075,\"date\":\"2020-01-22T13:53:07\",\"slug\":\"og_imagev1\",\"type\":\"attachment\",\"link\":\"https://wp.sitepen.com/og_imagev1/\",\"title\":{\"rendered\":\"og_imageV1\"},\"author\":9,\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.5 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>og_imageV1 | SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"og_imageV1 | SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1600\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"900\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg#webpage\\\",\\\"url\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\",\\\"name\\\":\\\"og_imageV1 | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"datePublished\\\":\\\"2020-01-22T21:53:07+00:00\\\",\\\"dateModified\\\":\\\"2020-01-22T21:53:07+00:00\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\"]}]}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"caption\":{\"rendered\":\"\"},\"alt_text\":\"\",\"media_type\":\"image\",\"mime_type\":\"image/jpeg\",\"media_details\":{\"width\":1600,\"height\":900,\"file\":\"2020/01/og_imageV1.jpg\",\"sizes\":{\"medium\":{\"file\":\"og_imageV1-300x169.jpg\",\"width\":300,\"height\":169,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-300x169.jpg\"},\"large\":{\"file\":\"og_imageV1-1024x576.jpg\",\"width\":1024,\"height\":576,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-1024x576.jpg\"},\"thumbnail\":{\"file\":\"og_imageV1-150x150.jpg\",\"width\":150,\"height\":150,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-150x150.jpg\"},\"medium_large\":{\"file\":\"og_imageV1-768x432.jpg\",\"width\":768,\"height\":432,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-768x432.jpg\"},\"1536x1536\":{\"file\":\"og_imageV1-1536x864.jpg\",\"width\":1536,\"height\":864,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1-1536x864.jpg\"},\"full\":{\"file\":\"og_imageV1.jpg\",\"width\":1600,\"height\":900,\"mime_type\":\"image/jpeg\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\"}},\"image_meta\":{\"aperture\":\"0\",\"credit\":\"\",\"camera\":\"\",\"caption\":\"\",\"created_timestamp\":\"0\",\"copyright\":\"\",\"focal_length\":\"0\",\"iso\":\"0\",\"shutter_speed\":\"0\",\"title\":\"\",\"orientation\":\"0\",\"keywords\":[]}},\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/22075\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/attachment\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/9\"}]}}]}}]","headers":[["access-control-allow-headers","Authorization, Content-Type"],["access-control-expose-headers","X-WP-Total, X-WP-TotalPages"],["allow","GET"],["cf-cache-status","DYNAMIC"],["cf-ray","5b01a3449def070a-LHR"],["cf-request-id","03d4e45ede0000070ae8854200000001"],["connection","close"],["content-encoding","gzip"],["content-type","application/json; charset=UTF-8"],["date","Thu, 09 Jul 2020 11:17:18 GMT"],["expect-ct","max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""],["link","<https://wp.sitepen.com/wp-json/>; rel=\"https://api.w.org/\""],["server","cloudflare"],["set-cookie","__cfduid=d7b033961f389fe0018c90f0cdf275db51594293438; expires=Sat, 08-Aug-20 11:17:18 GMT; path=/; domain=.sitepen.com; HttpOnly; SameSite=Lax"],["transfer-encoding","chunked"],["vary","Origin"],["x-content-type-options","nosniff"],["x-powered-by","PHP/7.3.16-1+0~20200320.56+debian9~1.gbp370a75"],["x-robots-tag","noindex"],["x-wp-total","1"],["x-wp-totalpages","1"]]},"type":"Object"}