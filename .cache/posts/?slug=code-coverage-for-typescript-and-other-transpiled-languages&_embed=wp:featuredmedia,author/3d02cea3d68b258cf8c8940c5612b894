{"value":{"body":"[{\"id\":11008,\"date\":\"2015-09-29T11:01:26\",\"date_gmt\":\"2015-09-29T18:01:26\",\"guid\":{\"rendered\":\"https://www.sitepen.com/blog/?p=11008\"},\"modified\":\"2015-09-29T11:01:26\",\"modified_gmt\":\"2015-09-29T18:01:26\",\"slug\":\"code-coverage-for-typescript-and-other-transpiled-languages\",\"status\":\"publish\",\"type\":\"post\",\"link\":\"https://wp.sitepen.com/blog/code-coverage-for-typescript-and-other-transpiled-languages/\",\"title\":{\"rendered\":\"Code Coverage for TypeScript and Other Transpiled Languages\"},\"content\":{\"rendered\":\"<p>Transpiling or compiling code has become a necessity today for JavaScript-based web development. Whether you are using <a href=\\\"https://www.sitepen.com/blog/2015/06/01/multi-platform-distribution-with-typescript/\\\">TypeScript</a>, <a href=\\\"https://github.com/babel/babel\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Babel</a>, <a href=\\\"https://www.dartlang.org/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Dart</a>, <a href=\\\"https://github.com/google/traceur-compiler\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Traceur</a>, or <a href=\\\"http://coffeescript.org/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">CoffeeScript</a> to provide additional language features, or trying to optimise your code with the likes of <a href=\\\"https://github.com/mishoo/UglifyJS2\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">UglifyJS</a>, <a href=\\\"http://requirejs.org/docs/optimization.html\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">r.js</a>, or <a href=\\\"https://developers.google.com/closure/compiler/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Closure Compiler</a>, once you have modified your source code, you start to run into challenges.</p>\\n<p><!--more--></p>\\n<p>The major browser vendors have adopted <a href=\\\"https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.djovrt4kdvga\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Source Maps</a> over the past few years as the <i>de facto</i> standard for finding source code origin. While this has made in-environment debugging easier, it still left some challenges for fully testing your code. While <a href=\\\"http://theintern.io/\\\">Intern</a> has been able to use source maps for a while to map back the stack traces of errors that get thrown, it has been more challenging when trying to understand how well your code is covered by your tests.</p>\\n<p>Intern as well as other JavaScript testing frameworks utilise <a href=\\\"https://github.com/gotwarlost/istanbul\\\">Istanbul</a> for their code coverage analysis. As we started to adopt more and more TypeScript for our own projects, we continued to struggle with getting a clear picture of our code coverage as all the reports only included the coverage of our emitted code. We had to try to use the compilers in our minds to try to figure out where we were missing test coverage. We also like to set metrics around our coverage to let us track if we are headed the right direction.</p>\\n<p>A couple of us started exploring how we might be able to accomplish mapping the coverage report back to its origins and after a bit of work, we created <a href=\\\"https://github.com/SitePen/remap-istanbul\\\"><code>remap-istanbul</code></a>, a package that allows Istanbul coverage information to be mapped back to its source when there are Source Maps available. While we have been focused on <em>TypeScript</em>, it can be used wherever the coverage is being produced on emitted code, including the tools mentioned above!</p>\\n<h2>Using <code>remap-istanbul</code></h2>\\n<p>So how can you use <code>remap-istanbul</code>? Well let&#8217;s take an example, where we are using the Intern 3 as our testing framework and Grunt as our build tool on a library of TypeScript code. From the root of our project (where your <code>package.json</code> sits), lets install Intern and <code>remap-istanbul</code> as development dependencies:</p>\\n<pre class=\\\"brush: bash; title: ; notranslate\\\" title=\\\"\\\">$ npm install intern remap-istanbul --save-dev\\n</pre>\\n<p>There are many different ways to use both Intern and <code>remap-istanbul</code> in our development chain. With both, you can use Grunt, Gulp or other tools for your task orchestration. We are going to focus on using the command line for this blog post.</p>\\n<p>At a high level, our workflow is that we need to generate or transpile our code and write Intern tests cases to test our transpiled code. That workflow contains too many options to cover here, but you need to ensure that your transpiled files are emitted with source maps. Once we have done that, we will want to run Intern to run our tests and generate the coverage information for those tests, then we will use <code>remap-istanbul</code> to remap the coverage information and then output an HTML report which will show the coverage for the original source files.</p>\\n<p>We need to add the Intern reporter that will write the JSON coverage information <code>remap-istanbul</code> needs to map back to the original source. From the command line, running our tests remotely, from the root of our project, it would look something like this:</p>\\n<pre class=\\\"brush: bash; title: ; notranslate\\\" title=\\\"\\\">$ node_modules/.bin/intern-runner config=tests/intern reporters=Console reporters=node_modules/remap-istanbul/lib/intern-reporters/JsonCoverage\\n</pre>\\n<p>This will instruct Intern to use the configuration to run the tests and report on the tests via the console and output a JSON coverage file which defaults to <code>./coverage-final.json</code>. Once our tests complete, we will then want to take that file and remap it against our source file using <code>remap-istanbul</code>:</p>\\n<pre class=\\\"brush: bash; title: ; notranslate\\\" title=\\\"\\\">$ node_modules/.bin/remap-istanbul -i coverage-final.json -t html -o html-report\\n</pre>\\n<p>This will read in the <code>coverage-final.json</code>, remap all the locations by inspecting our emitted files and their source maps, and then outputting an HTML report into the path <code>./html-report</code>. You can then browse to the <code>html-report</code> directory and see how well your code is covered based on its original source files!</p>\\n<h2>The Output</h2>\\n<p>Once you have everything strung together, you can start reaping the benefits. <code>remap-istanbul</code> is now integrated into Dojo 2&#8217;s <a href=\\\"https://github.com/dojo/core\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">dojo/core</a>. When you look at the output of coverage information, you get all your information mapped back to it&#8217;s original sources. For example:</p>\\n<p><a href=\\\"https://wp.sitepen.com/wp-content/uploads/2015/09/core_—_-bash_—_99×601.png\\\"><img class=\\\"size-full wp-image-11101 aligncenter\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2015/09/core_—_-bash_—_99×601.png\\\" alt=\\\"Code Coverage output for dojo/core\\\" width=\\\"522\\\" height=\\\"661\\\" /></a></p>\\n<p>And if you view the HTML report that is generated, you can see actual line and branch coverage mapped back to its original source as well:</p>\\n<p><a href=\\\"https://wp.sitepen.com/wp-content/uploads/2015/09/Code_coverage_report_for_src_request_ts2.png\\\"><img class=\\\"size-full wp-image-11099 aligncenter\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2015/09/Code_coverage_report_for_src_request_ts2.png\\\" alt=\\\"Code Coverage Report for src/request.ts\\\" width=\\\"645\\\" height=\\\"370\\\" /></a></p>\\n<h2>Further Reading</h2>\\n<p>Your workflow might not exactly fit the pattern we described above. There are many other ways to ways integrate and use <code>remap-istanbul</code>. So here are some locations for some further reading:</p>\\n<ul>\\n<li><a href=\\\"https://github.com/SitePen/remap-istanbul/wiki\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\"><code>remap-istanbul</code> Wiki</a></li>\\n<li><a href=\\\"https://github.com/SitePen/remap-istanbul\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\"><code>remap-istanbul</code> README</a></li>\\n<li><a href=\\\"https://theintern.github.io/intern/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Intern&#8217;s Documentation</a></li>\\n<li><a href=\\\"https://gotwarlost.github.io/istanbul/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Istanbul Code Coverage</a></li>\\n</ul>\\n<p>Note that while we think that Intern is the best option for automated JavaScript testing, you can use <a href=\\\"https://github.com/SitePen/remap-istanbul/wiki/Karma-How-To\\\">remap-istanbul with any tool that leverages Istanbul such as Karma</a>.</p>\\n<h2>Learning more</h2>\\n<p>If you&#8217;re interested in learning more about automated testing, we offer a <a href=\\\"https://www.sitepen.com/workshops/\\\">one-day online Intern workshop</a>, and we also help organizations with their approach to testing under our <a href=\\\"https://www.sitepen.com/services/\\\">expert JavaScript support plans</a>. If you’re not sure where to start with automated JavaScript testing, or you need some help making your source code more testable, or want assistance in defining a testing strategy and workflow for your organization, SitePen can help! <a href=\\\"https://www.sitepen.com/contact/\\\">Contact us</a> for a free 30-minute consultation.</p>\\n\",\"protected\":false},\"excerpt\":{\"rendered\":\"<p>Transpiling or compiling code has become a necessity today for JavaScript-based web development. Whether you are using TypeScript, Babel, Dart, Traceur, or CoffeeScript to provide additional language features, or trying to optimise your code with the likes of UglifyJS, r.js, or Closure Compiler, once you have modified your source code, you start to run into [&hellip;]</p>\\n\",\"protected\":false},\"author\":67,\"featured_media\":11101,\"comment_status\":\"closed\",\"ping_status\":\"closed\",\"sticky\":false,\"template\":\"\",\"format\":\"standard\",\"meta\":{\"spay_email\":\"\"},\"categories\":[375,3,43,16,11],\"tags\":[405,140],\"series\":[],\"jetpack_featured_media_url\":\"\",\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Code Coverage for TypeScript and Other Transpiled Languages | SitePen</title>\\n<meta name=\\\"description\\\" content=\\\"Transpiling or compiling code has become a necessity today for JavaScript-based web development. Whether you are using TypeScript, Babel, Dart, Traceur, or CoffeeScript to provide additional language features, or trying to optimise your code with the likes of UglifyJS, r.js, or Closure Compiler, once you have modified your\\\" />\\n<meta name=\\\"robots\\\" content=\\\"index, follow\\\" />\\n<meta name=\\\"googlebot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<meta name=\\\"bingbot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<link rel=\\\"canonical\\\" href=\\\"https://www.sitepen.com/blog/code-coverage-for-typescript-and-other-transpiled-languages/\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Code Coverage for TypeScript and Other Transpiled Languages | SitePen\\\" />\\n<meta property=\\\"og:description\\\" content=\\\"Transpiling or compiling code has become a necessity today for JavaScript-based web development. Whether you are using TypeScript, Babel, Dart, Traceur, or CoffeeScript to provide additional language features, or trying to optimise your code with the likes of UglifyJS, r.js, or Closure Compiler, once you have modified your\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/code-coverage-for-typescript-and-other-transpiled-languages/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:published_time\\\" content=\\\"2015-09-29T18:01:26+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1600\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"900\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/code-coverage-for-typescript-and-other-transpiled-languages/#primaryimage\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/code-coverage-for-typescript-and-other-transpiled-languages/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/code-coverage-for-typescript-and-other-transpiled-languages/\\\",\\\"name\\\":\\\"Code Coverage for TypeScript and Other Transpiled Languages | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"primaryImageOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/code-coverage-for-typescript-and-other-transpiled-languages/#primaryimage\\\"},\\\"datePublished\\\":\\\"2015-09-29T18:01:26+00:00\\\",\\\"dateModified\\\":\\\"2015-09-29T18:01:26+00:00\\\",\\\"author\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/13093841ff1b780913b10a245cc737ee\\\"},\\\"description\\\":\\\"Transpiling or compiling code has become a necessity today for JavaScript-based web development. Whether you are using TypeScript, Babel, Dart, Traceur, or CoffeeScript to provide additional language features, or trying to optimise your code with the likes of UglifyJS, r.js, or Closure Compiler, once you have modified your\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://www.sitepen.com/blog/code-coverage-for-typescript-and-other-transpiled-languages/\\\"]}]},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/13093841ff1b780913b10a245cc737ee\\\",\\\"name\\\":\\\"Kit Kelly\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Kit Kelly\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/11008\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/post\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/67\"}],\"replies\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/comments?post=11008\"}],\"version-history\":[{\"count\":0,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/11008/revisions\"}],\"wp:featuredmedia\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/11101\"}],\"wp:attachment\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media?parent=11008\"}],\"wp:term\":[{\"taxonomy\":\"category\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/categories?post=11008\"},{\"taxonomy\":\"post_tag\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/tags?post=11008\"},{\"taxonomy\":\"series\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/series?post=11008\"}],\"curies\":[{\"name\":\"wp\",\"href\":\"https://api.w.org/{rel}\",\"templated\":true}]},\"_embedded\":{\"author\":[{\"id\":67,\"name\":\"Kit Kelly\",\"url\":\"\",\"description\":\"\",\"link\":\"https://wp.sitepen.com/blog/author/kkelly/\",\"slug\":\"kkelly\",\"avatar_urls\":{\"24\":\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=24&d=mm&r=g\",\"48\":\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=48&d=mm&r=g\",\"96\":\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=96&d=mm&r=g\"},\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Kit Kelly, Author at SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"profile\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Kit Kelly, Author at SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/author/kkelly/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=500&#038;d=mm&#038;r=g\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ProfilePage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/kkelly/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/author/kkelly/\\\",\\\"name\\\":\\\"Kit Kelly, Author at SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/13093841ff1b780913b10a245cc737ee\\\",\\\"name\\\":\\\"Kit Kelly\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/ea4e125243ac392bb3bbf6bbfb242d86?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Kit Kelly\\\"},\\\"mainEntityOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/kkelly/#webpage\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/67\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users\"}]}}],\"wp:featuredmedia\":[{\"code\":\"rest_post_invalid_id\",\"message\":\"Invalid post ID.\",\"data\":{\"status\":404}}]}}]","headers":[["access-control-allow-headers","Authorization, Content-Type"],["access-control-expose-headers","X-WP-Total, X-WP-TotalPages"],["allow","GET"],["cache-control","max-age=2592000"],["connection","close"],["content-type","application/json; charset=UTF-8"],["date","Mon, 10 Aug 2020 15:38:16 GMT"],["expires","Wed, 09 Sep 2020 15:38:16 GMT"],["link","<https://wp.sitepen.com/wp-json/>; rel=\"https://api.w.org/\""],["server","Apache"],["transfer-encoding","chunked"],["vary","Origin"],["x-content-type-options","nosniff"],["x-powered-by","PHP/7.3.21-1+0~20200807.66+debian9~1.gbp18a1c2"],["x-robots-tag","noindex"],["x-wp-total","1"],["x-wp-totalpages","1"]]},"type":"Object"}