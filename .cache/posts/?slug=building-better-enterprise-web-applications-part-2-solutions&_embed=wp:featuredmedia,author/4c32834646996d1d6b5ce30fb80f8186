{"value":{"body":"[{\"id\":12339,\"date\":\"2016-06-29T06:36:31\",\"date_gmt\":\"2016-06-29T13:36:31\",\"guid\":{\"rendered\":\"https://www.sitepen.com/blog/?p=12339\"},\"modified\":\"2016-06-29T06:36:31\",\"modified_gmt\":\"2016-06-29T13:36:31\",\"slug\":\"building-better-enterprise-web-applications-part-2-solutions\",\"status\":\"publish\",\"type\":\"post\",\"link\":\"https://wp.sitepen.com/blog/building-better-enterprise-web-applications-part-2-solutions/\",\"title\":{\"rendered\":\"Building Better Enterprise Web Applications Part 2: Solutions\"},\"content\":{\"rendered\":\"<p>While there areÂ <a href=\\\"https://www.sitepen.com/blog/2016/06/28/building-better-enterprise-web-applications-challenges/\\\">many challenges today with building web applications</a>, there are also many options to address the issues we face with technology, process, and people, allowing us to reap the benefits of the web as an application platform.</p>\\n<h2>Technology solutions</h2>\\n<p>While many of the challenges with today&#8217;s web applications come from the vast array of technologies that are available, there are clear strategies that can be employed to turn those same issues into advantages that can make building applications easier. The key is to use a technology portfolio that allows applications to be modular, simple, and isolated from any instability in the underlying platform. Another critical aspect of each member of this portfolio is that it must be able to maintain those abilities at the scale at which the application will be built.</p>\\n<p><!--more--></p>\\n<h3>Modularity</h3>\\n<p>Modularity is the ability of a library or framework to spread its functionality across multiple components that are highly <a href=\\\"https://en.wikipedia.org/wiki/Cohesion_(computer_science)\\\">cohesive</a>, but <a href=\\\"https://en.wikipedia.org/wiki/Loose_coupling\\\">loosely coupled</a>. It is especially important for JavaScript applications because of its extreme reliance on the network for performance, and relatively underpowered web browser environments. It also strongly encourages efficient and flexible code reuse.</p>\\n<p>Modularity has evolved over the years starting with custom built solutions such as CommonJS and AMD, to today, where it is now included in the JavaScript language. While there are still major features that still need to be finalized with regards to the loading of those modules, it is possible today to use excellent approaches to authoring native modular source code while still insulating against a platform that has not finalized how to load them.</p>\\n<p><img class=\\\"img\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2016/06/solutions_tech.jpg\\\" /></p>\\n<h3>Reducing complexity</h3>\\n<p>In order to reduce complexity, we need to understand that just because something is possible does not mean it is necessarily the right choice or the only choice. Many technologies allow high levels of abstraction to be introduced in order to keep code as isolated as possible, but sometimes we need to take a step back and think about how to make things simpler and easier to manage and maintain, rather than adding multiple layers of complexity to solve a fairly easy problem. By choosing technologies that allow abstractions to be introduced, but combining that with a disciplined approach to using those abstractions, complex problems can be solved with clean, maintainable code.</p>\\n<h3>Architectural insulation</h3>\\n<p>One of the most crucial decisions developers can make when dealing with instability and change is architectural insulation, a strategy for defining an approach that insulates your code from the portions of the platform that are in flux or changing.</p>\\n<p>In the early days, web developers focused on the very big challenge of working around very fragile, broken, or incomplete pieces of core browser functionality. Today, it can mean wrapping modern technology that is either changing or where best practices or performance may not be optimal with an API that works well and is flexible.</p>\\n<h3>Tool selection: Beyond the proof of concept</h3>\\n<p>When evaluating a technology, it is imperative that the investigation move beyond a basic proof of concept and give the technology under consideration a thorough analysis.</p>\\n<p>This requires having the patience to fully understand the right way of using a technology, giving it a solid evaluation. This also requires not being biased based on something being seemingly simple out of the box, or mistaking a nice looking website for something that will be a powerful tool for creating impressive web applications.</p>\\n<p>One of the most popular approaches used today to compare JavaScript frameworks is the <a href=\\\"http://todomvc.com/\\\">ToDoMVC project</a>. While it is a good first step in this direction, the ToDo app is far too simple to really exercise the power and understand the benefits and limits of a technology. If you do not know the limitations or weaknesses of a technology, then it can fail at a critical point in the development process. No solution is perfect, so knowing its limits and weaknesses is essential to providing a thorough and practical analysis of a technology.</p>\\n<h2>Organization and process solutions</h2>\\n<p>While technology is a primary source of the challenges and solutions related to modern software development, the processes that govern the use of those technologies can also serve to hinder or help development projects. Some of the primary processes that can benefit a project are code transpilation, effective source code management strategies, code quality metrics and automated processes for testing and continuously integrating changes to the application.<br />\\n<img class=\\\"rightimg\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2016/06/solutions_org.jpg\\\" /></p>\\n<h3>Transpilation</h3>\\n<p>Many efforts have been made over the years to improve JavaScript, ranging from improving the core language (ES5, ES6, ES7, etc.), extending the language (<a href=\\\"https://info.sitepen.com/typescript\\\">TypeScript</a>), or providing alternatives to the language (Elm, Clojure, CoffeeScript, Dart). In the words of Brendan Eich, &#8220;The web must evolve, or die. So too with JS&#8221;.</p>\\n<p>One of the best ways to future proof your code today is through transpilation, a form of compilation that takes one version of a language and converts it into another.</p>\\n<p>By integrating this into a development process, it is far easier for developers to embrace new additions or extensions to the JavaScript language, without waiting for all browsers to support every new feature or syntax.</p>\\n<p>In the past, developers would have to wait years to leverage significant improvements to the platform. Now, developers can author code following modern best practices, and then convert it to code that runs on all platforms today.</p>\\n<h3>Source code management and strategy</h3>\\n<p>Previously, most traditional source control systems made it rather difficult to efficiently maintain branches of code and easily review changes. While it is easy to believe that all of these systems are the same, modern tools, such as Git support processes that reduce the risk in breaking the master code line.</p>\\n<p>With the ability to efficiently merge and branch, it is easier to review changes before they are merged with the main code line.</p>\\n<p>The most popular tool to solve these problems today is <a href=\\\"https://en.wikipedia.org/wiki/Git_(software)\\\">Git</a>, which has brought many benefits of distributed source control to the mainstream, but it is not the only solution.</p>\\n<p>Organizations should create, maintain, and follow internal code standards and have a regular review process to make sure that source code meets a certain standard and works as expected. And this should happen before it lands in the source control master.</p>\\n<p>There are many tools and approaches to facilitate review, but it requires a team of people that demand excellence, accept criticism, and understand that the goal is to create the highest quality, most consistent source code to deliver a robust and maintainable web application.</p>\\n<h3>Automated testing</h3>\\n<p>In a world with many different browsers and platforms, automated testing is more important than ever. This usually begins with an approach to writing code that is testable at all times (<a href=\\\"https://en.wikipedia.org/wiki/Test-driven_development\\\">TDD</a>, <a href=\\\"https://en.wikipedia.org/wiki/Behavior-driven_development\\\">BDD</a>, or some similar methodology). By integrating the creation of tests into the development process, the quality of the code base can be measured more clearly and the maintainability will also increase, due to the ability to quickly assess if a change causes failures in existing features. Automated tests are normally grouped into two types: unit tests and functional tests.</p>\\n<p>Developers should typically begin with unit testing, which allows a team to test each portion of a codebase, in isolation, with minimal dependencies. Complex interactions may then be mocked or stubbed with a simple interface.</p>\\n<p>Functional testing is then leveraged to test the approach of an end user. Functional tests are inherently much more difficult to author, so the more that a development team can test with unit tests, the easier an application is to test and maintain.</p>\\n<h3>Continuous integration and code coverage</h3>\\n<p><img class=\\\"img\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2016/06/solutions_ci.jpg\\\" /><br />\\nThere are many platforms and services to automate testing. Continuous integration (CI) notifies a team if any automated tests failed with each additional commit made to the application source tree, or with any potential commit that is being considered for acceptance into the codebase.</p>\\n<p>Code coverage analysis tells a team that, not only did their tests pass, but verifies that they were careful enough to thoroughly test all of their source code. CI also includes information about code coverage, and other relevant details. There are many CI tools on the market, and flexible testing tools can be used within any of these environments.</p>\\n<p>Testing tools and continuous integration may also be used to test other metrics, including performance regressions, user interface changes, and accessibility.</p>\\n<p>An optimized CI environment helps organizations track changes in test compliance, code coverage, performance, and other metrics with each change to their source code.</p>\\n<h3>Code quality</h3>\\n<p>There are many ways to measure code quality, but consistency is the first step towards <em>creating</em> a codebase that is easy to follow and maintain. Beyond consistency, enforcing certain patterns and excluding anti-patterns is essential to preserving good software architecture. These same linting tools may be configured and customized to verify these patterns are followed.</p>\\n<p>Various code linting tools such as ESLint, TSLint, and JSHint exist to help teams verify that their code is structured to their own internal standards.</p>\\n<p>While tools can catch many things, peer reviews of source code will also help in areas that are not easy to capture with tooling.</p>\\n<p>Compared to just a few years ago, far better development tools are provided by web browsers and within Node.js for debugging and introspecting applications.</p>\\n<h2>People</h2>\\n<h3>Engaging and managing your team</h3>\\n<p>Robust architecture and a solid development process helps solve many challenges. This provides a solid foundation for then working with your team to make sure theyâre able to deliver solid solutions.</p>\\n<p>It is important to encourage teams to think enough up front to reduce the likelihood that they will need to constantly rewrite. Remember that agile does not mean that you no longer need to think or explain what you&#8217;re trying to achieve, just that it means that there is ongoing flexibility to adjust and iterate on ideas over time.<br />\\n<img class=\\\"img\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2016/06/solutions_people.jpg\\\" /><br />\\nAnother challenge an enterprise may have to manage is that engineers often think in terms of agile, but other elements of the business do not when it comes to contracts and deadlines.</p>\\n<p>The solution to this challenge is not always easy, and varies widely per organization. Fundamentally it requires organizations to find a balance between agility and predictability that is right for them.</p>\\n<h3>Reducing choices and complexity</h3>\\n<p>With so many powerful technologies being continuously released, it is tempting to forget that adopting too many technologies can work against the creation of a robust and scalable application. By reducing some of the options, the complexity of your application architecture can be greatly reduced. It may be helpful to think about how well the person that needs to maintain your application in two years will do with what you have created, even if that person may be you.</p>\\n<h3>Documenting decisions</h3>\\n<p>It is important to not only document your source code, but also major decisions that have been made and why. This reduces the likelihood of having the same debates over and over again, especially with each new hire.</p>\\n<p>It also makes it easier to actually revisit a decision should your assumptions change. For example, at one point the Dojo team ruled out a reliance on SASS as a CSS preprocessor because it was created with Ruby, and one goal for the Dojo team was to reduce the complexity by relying wherever possible on JavaScript-based solutions. Recently someone asked to revisit the solution on SASS. If the decision had not been documented, the team may have started the debate from scratch, or may have rejected it because the decision had already been made. However, it was noted that SASS had released a new version based on Node.js, which was in contrast to the original reason for rejecting the technology. The Dojo team looked at the decision, realized that the main reason for initially rejecting it was because of the reliance on Ruby, and then decided to revisit the decision.</p>\\n<h3>Giving people a reason to stay</h3>\\n<p>Software developers today have many opportunities to grow their careers. This can lead to high turnover rates in some organizations. This leads to difficulty in preserving quality and architecture over time as no one can remember why things are done the way they are (unless they are well documented!).</p>\\n<p><img class=\\\"img\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2016/06/solutions_stay.jpg\\\" /></p>\\n<p>Therefore, it&#8217;s important to give people a reason to stay. This can be done by creating a positive environment to create good software, compensating people fairly, removing obstacles that get in the way of being productive, reducing artificial pressure such as arbitrary deadlines, and encouraging people to do their best work.</p>\\n<h3>InnerSource and open source</h3>\\n<p>Organizations often find themselves in silos where teams do not share code across groups, and reinvent features and applications without consistency across the enterprise.</p>\\n<p>An emerging trend called InnerSource brings many of the lessons learned with large open source projects to internal enterprise efforts. In many cases these are social and quality issues, the same challenges that successful open source projects solve, to encourage reuse and collaboration among teams, while solving problems that would normally prevent this from occurring.</p>\\n<p>Organizations may also benefit from open sourcing some of their work. Each organization is different, but either opening up some software, or contributing fixes and improvements to key open source dependencies, helps keep the ecosystem that most organizations depend on improving all the time. Many organizations find that contributing to open source improves team morale, helps recruit talented engineers, and finds and solves issues more expediently.</p>\\n<h2>Conclusion</h2>\\n<p>We have covered many possible solutions to challenges with technology, process, and people when building web applications.</p>\\n<p>In the <a href=\\\"https://www.sitepen.com/blog/2016/06/30/building-better-enterprise-web-applications-part-3-sitepen-solutions/\\\">final installment of this series</a>, we will expand on some of SitePen&#8217;s approaches and choices to how we actually solve these problems today.</p>\\n\",\"protected\":false},\"excerpt\":{\"rendered\":\"<p>While there areÂ many challenges today with building web applications, there are also many options to address the issues we face with technology, process, and people, allowing us to reap the benefits of the web as an application platform. Technology solutions While many of the challenges with today&#8217;s web applications come from the vast array of [&hellip;]</p>\\n\",\"protected\":false},\"author\":3,\"featured_media\":12612,\"comment_status\":\"open\",\"ping_status\":\"open\",\"sticky\":false,\"template\":\"\",\"format\":\"standard\",\"meta\":{\"spay_email\":\"\"},\"categories\":[45,2,215,3,16,6,11],\"tags\":[],\"series\":[],\"jetpack_featured_media_url\":\"\",\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.4.1 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Building Better Enterprise Web Applications Part 2: Solutions | SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"index, follow\\\" />\\n<meta name=\\\"googlebot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<meta name=\\\"bingbot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<link rel=\\\"canonical\\\" href=\\\"https://www.sitepen.com/blog/building-better-enterprise-web-applications-part-2-solutions/\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Building Better Enterprise Web Applications Part 2: Solutions | SitePen\\\" />\\n<meta property=\\\"og:description\\\" content=\\\"While there areÂ many challenges today with building web applications, there are also many options to address the issues we face with technology, process, and people, allowing us to reap the benefits of the web as an application platform. Technology solutions While many of the challenges with today&#8217;s web applications come from the vast array of [&hellip;]\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/building-better-enterprise-web-applications-part-2-solutions/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:published_time\\\" content=\\\"2016-06-29T13:36:31+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1600\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"900\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/building-better-enterprise-web-applications-part-2-solutions/#primaryimage\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/building-better-enterprise-web-applications-part-2-solutions/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/building-better-enterprise-web-applications-part-2-solutions/\\\",\\\"name\\\":\\\"Building Better Enterprise Web Applications Part 2: Solutions | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"primaryImageOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/building-better-enterprise-web-applications-part-2-solutions/#primaryimage\\\"},\\\"datePublished\\\":\\\"2016-06-29T13:36:31+00:00\\\",\\\"dateModified\\\":\\\"2016-06-29T13:36:31+00:00\\\",\\\"author\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/fdc7f111693e7de4d6f9f92d17079bd4\\\"},\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://www.sitepen.com/blog/building-better-enterprise-web-applications-part-2-solutions/\\\"]}]},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/fdc7f111693e7de4d6f9f92d17079bd4\\\",\\\"name\\\":\\\"Dylan Schiemann\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/89916e31a2e6998f2aadde6f0bde6835?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Dylan Schiemann\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/12339\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/post\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/3\"}],\"replies\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/comments?post=12339\"}],\"version-history\":[{\"count\":0,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/12339/revisions\"}],\"wp:featuredmedia\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/12612\"}],\"wp:attachment\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media?parent=12339\"}],\"wp:term\":[{\"taxonomy\":\"category\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/categories?post=12339\"},{\"taxonomy\":\"post_tag\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/tags?post=12339\"},{\"taxonomy\":\"series\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/series?post=12339\"}],\"curies\":[{\"name\":\"wp\",\"href\":\"https://api.w.org/{rel}\",\"templated\":true}]},\"_embedded\":{\"author\":[{\"id\":3,\"name\":\"Dylan Schiemann\",\"url\":\"https://www.sitepen.com\",\"description\":\"\",\"link\":\"https://wp.sitepen.com/blog/author/dylan/\",\"slug\":\"dylan\",\"avatar_urls\":{\"24\":\"https://secure.gravatar.com/avatar/89916e31a2e6998f2aadde6f0bde6835?s=24&d=mm&r=g\",\"48\":\"https://secure.gravatar.com/avatar/89916e31a2e6998f2aadde6f0bde6835?s=48&d=mm&r=g\",\"96\":\"https://secure.gravatar.com/avatar/89916e31a2e6998f2aadde6f0bde6835?s=96&d=mm&r=g\"},\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.4.1 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Dylan Schiemann, Author at SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"profile\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Dylan Schiemann, Author at SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/author/dylan/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://secure.gravatar.com/avatar/89916e31a2e6998f2aadde6f0bde6835?s=500&#038;d=mm&#038;r=g\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ProfilePage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/dylan/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/author/dylan/\\\",\\\"name\\\":\\\"Dylan Schiemann, Author at SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/fdc7f111693e7de4d6f9f92d17079bd4\\\",\\\"name\\\":\\\"Dylan Schiemann\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/89916e31a2e6998f2aadde6f0bde6835?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Dylan Schiemann\\\"},\\\"mainEntityOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/dylan/#webpage\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/3\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users\"}]}}],\"wp:featuredmedia\":[{\"code\":\"rest_post_invalid_id\",\"message\":\"Invalid post ID.\",\"data\":{\"status\":404}}]}}]","headers":[["access-control-allow-headers","Authorization, Content-Type"],["access-control-expose-headers","X-WP-Total, X-WP-TotalPages"],["allow","GET"],["cf-cache-status","DYNAMIC"],["cf-ray","5a8080393e6b0782-LHR"],["cf-request-id","03842e77c000000782b1b07200000001"],["connection","close"],["content-encoding","gzip"],["content-type","application/json; charset=UTF-8"],["date","Tue, 23 Jun 2020 19:09:00 GMT"],["expect-ct","max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""],["link","<https://wp.sitepen.com/wp-json/>; rel=\"https://api.w.org/\""],["server","cloudflare"],["set-cookie","__cfduid=db96e48c83eb1821ea73c051ed99783e11592939339; expires=Thu, 23-Jul-20 19:08:59 GMT; path=/; domain=.sitepen.com; HttpOnly; SameSite=Lax"],["transfer-encoding","chunked"],["vary","Origin"],["x-content-type-options","nosniff"],["x-robots-tag","noindex"],["x-wp-total","1"],["x-wp-totalpages","1"]]},"type":"Object"}