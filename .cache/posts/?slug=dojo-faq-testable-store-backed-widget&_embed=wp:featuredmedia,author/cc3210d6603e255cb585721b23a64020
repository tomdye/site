{"value":{"body":"[{\"id\":8182,\"date\":\"2015-01-14T13:11:35\",\"date_gmt\":\"2015-01-14T20:11:35\",\"guid\":{\"rendered\":\"https://www.sitepen.com/blog/?p=8182\"},\"modified\":\"2015-01-14T13:11:35\",\"modified_gmt\":\"2015-01-14T20:11:35\",\"slug\":\"dojo-faq-testable-store-backed-widget\",\"status\":\"publish\",\"type\":\"post\",\"link\":\"https://wp.sitepen.com/blog/dojo-faq-testable-store-backed-widget/\",\"title\":{\"rendered\":\"Dojo FAQ: Testable store-backed widget\"},\"content\":{\"rendered\":\"<p><img style=\\\"margin: 20px 0 20px 20px; float: right;\\\" alt=\\\"DojoFAQ\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2013/09/DojoFAQ.png\\\" width=\\\"200\\\" height=\\\"200\\\" /></p>\\n<p>As object stores are frequently used in Dojo-based applications, developers often ask about a good way to utilize stores in their custom widgets. Here we present a common pattern for doing just that in a two-stage approach, starting simple.</p>\\n<p>A store-based widget needs two things at minimum: a way to set the store and a way to render items from the store. We start with a mixin that provides those elements. Note that standard documentation is omitted for brevity.</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\ndefine([\\n  'dojo/_base/declare',\\n  'dojo/dom-construct'\\n], function(declare, domConstruct) {\\n  return declare(null, {\\n    store: null,\\n\\n    _setStoreAttr: function (store) {\\n      this._set('store', store);\\n\\n      if (store) {\\n        this._renderItems(this.store.query({}));\\n      }\\n    },\\n\\n    _renderItems: function (queryResults) {\\n      queryResults.forEach(function (item) {\\n        var renderedItem = this._renderItem(item);\\n        domConstruct.place(\\n          renderedItem,\\n          this.containerNode || this.domNode\\n        );\\n      }, this);\\n    },\\n\\n    _renderItem: function (item) {\\n      // render the item and return its DOM node\\n    }\\n  });\\n});\\n</pre>\\n<p><!--more--></p>\\n<p>Simply incorporate this mixin and provide an implementation for the <code>_renderItem</code> method and you will have a store-based widget. This may work well for simple widgets, but the implementation has considerable shortcomings. It does not support setting a different store, configuring the store query, or returning widgets from <code>_renderItem</code>. Let&#8217;s address these one at a time.</p>\\n<p>We start by adding support for setting a new store. Setting a store works the same as before but removes existing rendered items before rendering items from a new store.</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\n_setStoreAttr: function (store) {\\n  this._set('store', store);\\n\\n  this._destroyItems();\\n  if (store) {\\n    this._renderItems(this.store.query({}));\\n  }\\n},\\n\\n_destroyItems: function () {\\n  domConstruct.empty(this.containerNode || this.domNode);\\n},\\n</pre>\\n<p>It&#8217;s not very useful to create a store-based widget without a configurable query. The following changes add support for setting a store query. Both the store and query setters need to destroy existing items and render new ones, so we encapsulate this in a <code>_render</code> method that is used by both.</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\n_setStoreAttr: function (store) {\\n  this._set('store', store);\\n  this._render();\\n},\\n\\nquery: {},\\n_setQueryAttr: function (query) {\\n  this._set('query', query);\\n  this._render();\\n},\\n\\n_render: function () {\\n  // destroy any existing items\\n  this._destroyItems();\\n  this.store &amp;&amp; this._renderItems(\\n    this.store.query(this.query);  \\n  );\\n},\\n</pre>\\n<p>Finally, we update <code>_renderItems</code> and <code>_destroyItems</code> with support for items rendered as widgets:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\n_renderItems: function (queryResults) {\\n  queryResults.forEach(function (item) {\\n    var renderedItem = this._renderItem(item);\\n    if ('placeAt' in renderedItem) {\\n      renderedItem.placeAt(this);\\n    }\\n    else {\\n      domConstruct.place(\\n        renderedItem,\\n        this.containerNode || this.domNode\\n      );\\n    }\\n  }, this);\\n},\\n\\n_destroyItems: function () {\\n  // preserve the item DOM while destroying widgets\\n  // so we can remove all item DOM nodes in one shot\\n  var preserveDom = true;\\n  this.destroyDescendants(preserveDom);\\n\\n  domConstruct.empty(this.containerNode || this.domNode);\\n}\\n</pre>\\n<h2>Maintainability and testability</h2>\\n<p>Designing widgets to be backed by the Dojo store API (as opposed to having widgets make direct XHR calls to data services) decouples data fetching logic from widget logic, enhancing maintainability and testability. Changes to the data service do not require updates to the widgets that consume the data, just updates to the custom stores that fetch the data from the server. The stores can be tested independently of the widgets, and the widgets can be tested with mock stores, enabling them to be tested in isolation from the data service.</p>\\n<p>The final result is:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\ndefine([\\n    'dojo/_base/declare',\\n    'dojo/dom-construct'\\n], function(declare, domConstruct) {\\n    return declare(null, {\\n        // summary:\\n        //        A mixin for creating a store-based widget\\n\\n        store: null,\\n        query: null,\\n\\n        _buildRendering: function () {\\n            this.inherited(arguments);\\n            this._render();\\n        },\\n\\n        _postCreate: function () {\\n            this.inherited(arguments);\\n\\n            this.own(\\n                this.watch('store', this._render),\\n                this.watch('query', this._render)\\n            );\\n        },\\n\\n        _render: function () {\\n            // summary:\\n            //        Render the widget contents\\n\\n            // destroy any existing items\\n            this._destroyItems();\\n            this.store &amp;&amp; this._renderItems(\\n                this.store.query(this.query || {})\\n            );\\n        },\\n\\n        _renderItems: function (/*Array*/queryResults) {\\n            // summary:\\n            //        Render query results\\n            // queryResults:\\n            //        The results to render\\n\\n            queryResults.forEach(function (item) {\\n                var renderedItem = this._renderItem(item);\\n\\n                // look for `placeAt` method to support items rendered as widgets\\n                if ('placeAt' in renderedItem) {\\n                    renderedItem.placeAt(this);\\n                }\\n                else {\\n                    domConstruct.place(\\n                        renderedItem,\\n                        this.containerNode || this.domNode\\n                    );\\n                }\\n            }, this);\\n        },\\n\\n        _renderItem: function (/*Object*/item) {\\n            // summary:\\n            //         Render an item\\n            // item:\\n            //        The item to render\\n            // returns: DomNode|dijit/_WidgetBase\\n        },\\n\\n        _destroyItems: function () {\\n            // summary:\\n            //        Destroy currently rendered items\\n\\n            // preserve the item DOM while destroying widgets\\n            // so we can remove all item DOM nodes in one shot\\n            var preserveDom = true;\\n            this.destroyDescendants(preserveDom);\\n\\n            domConstruct.empty(this.containerNode || this.domNode);\\n        }\\n    });\\n});\\n</pre>\\n<p>We now have a mixin for store-based widgets that supports dynamically changing the store, configurable queries, and rendering to either DOM nodes or widgets.</p>\\n<h2>Conclusion</h2>\\n<p>This mixin provides a common basis for data-driven widgets based on a consistent data API (the Dojo store API) to create an architecture that is easy for developers to work with, maintainable, and testable. In a follow-up post, we will develop a similar mixin based on <a href=\\\"http://dstorejs.io\\\">dstore</a>, the next-generation data store API from SitePen.</p>\\n<h2>Learning more</h2>\\n<p>SitePen covers widget architecture, advanced store usage and much more in our <a href=\\\"https://www.sitepen.com/services/\\\">Dojo workshops</a> offered throughout the US, Canada, and Europe, or at your location. We also provide expert <a href=\\\"https://www.sitepen.com/services/\\\">JavaScript and Dojo support</a> and <a href=\\\"https://www.sitepen.com/services/\\\">development</a> services. <a href=\\\"https://www.sitepen.com/contact/\\\">Contact us</a> for a free 30 minute consultation to discuss how we can help.</p>\\n\",\"protected\":false},\"excerpt\":{\"rendered\":\"<p>As object stores are frequently used in Dojo-based applications, developers often ask about a good way to utilize stores in their custom widgets. Here we present a common pattern for doing just that in a two-stage approach, starting simple. A store-based widget needs two things at minimum: a way to set the store and a [&hellip;]</p>\\n\",\"protected\":false},\"author\":47,\"featured_media\":8167,\"comment_status\":\"closed\",\"ping_status\":\"closed\",\"sticky\":false,\"template\":\"\",\"format\":\"standard\",\"meta\":{\"spay_email\":\"\"},\"categories\":[45,380,3],\"tags\":[],\"series\":[],\"jetpack_featured_media_url\":\"\",\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.5 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Dojo FAQ: Testable store-backed widget | SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"index, follow\\\" />\\n<meta name=\\\"googlebot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<meta name=\\\"bingbot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<link rel=\\\"canonical\\\" href=\\\"https://www.sitepen.com/blog/dojo-faq-testable-store-backed-widget/\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Dojo FAQ: Testable store-backed widget | SitePen\\\" />\\n<meta property=\\\"og:description\\\" content=\\\"As object stores are frequently used in Dojo-based applications, developers often ask about a good way to utilize stores in their custom widgets. Here we present a common pattern for doing just that in a two-stage approach, starting simple. A store-based widget needs two things at minimum: a way to set the store and a [&hellip;]\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/dojo-faq-testable-store-backed-widget/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:published_time\\\" content=\\\"2015-01-14T20:11:35+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1600\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"900\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/dojo-faq-testable-store-backed-widget/#primaryimage\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/dojo-faq-testable-store-backed-widget/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/dojo-faq-testable-store-backed-widget/\\\",\\\"name\\\":\\\"Dojo FAQ: Testable store-backed widget | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"primaryImageOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/dojo-faq-testable-store-backed-widget/#primaryimage\\\"},\\\"datePublished\\\":\\\"2015-01-14T20:11:35+00:00\\\",\\\"dateModified\\\":\\\"2015-01-14T20:11:35+00:00\\\",\\\"author\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/a1c42d84f51684043609c6c5aa06ec1a\\\"},\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://www.sitepen.com/blog/dojo-faq-testable-store-backed-widget/\\\"]}]},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/a1c42d84f51684043609c6c5aa06ec1a\\\",\\\"name\\\":\\\"Brandon Payton\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/1ddbb27268f2ca39b6cd83bc2ebc1dd6?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Brandon Payton\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/8182\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/post\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/47\"}],\"replies\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/comments?post=8182\"}],\"version-history\":[{\"count\":0,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/8182/revisions\"}],\"wp:featuredmedia\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/8167\"}],\"wp:attachment\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media?parent=8182\"}],\"wp:term\":[{\"taxonomy\":\"category\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/categories?post=8182\"},{\"taxonomy\":\"post_tag\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/tags?post=8182\"},{\"taxonomy\":\"series\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/series?post=8182\"}],\"curies\":[{\"name\":\"wp\",\"href\":\"https://api.w.org/{rel}\",\"templated\":true}]},\"_embedded\":{\"author\":[{\"id\":47,\"name\":\"Brandon Payton\",\"url\":\"\",\"description\":\"\",\"link\":\"https://wp.sitepen.com/blog/author/bpayton/\",\"slug\":\"bpayton\",\"avatar_urls\":{\"24\":\"https://secure.gravatar.com/avatar/1ddbb27268f2ca39b6cd83bc2ebc1dd6?s=24&d=mm&r=g\",\"48\":\"https://secure.gravatar.com/avatar/1ddbb27268f2ca39b6cd83bc2ebc1dd6?s=48&d=mm&r=g\",\"96\":\"https://secure.gravatar.com/avatar/1ddbb27268f2ca39b6cd83bc2ebc1dd6?s=96&d=mm&r=g\"},\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.5 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Brandon Payton, Author at SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"profile\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Brandon Payton, Author at SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/author/bpayton/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://secure.gravatar.com/avatar/1ddbb27268f2ca39b6cd83bc2ebc1dd6?s=500&#038;d=mm&#038;r=g\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ProfilePage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/bpayton/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/author/bpayton/\\\",\\\"name\\\":\\\"Brandon Payton, Author at SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/a1c42d84f51684043609c6c5aa06ec1a\\\",\\\"name\\\":\\\"Brandon Payton\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/1ddbb27268f2ca39b6cd83bc2ebc1dd6?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Brandon Payton\\\"},\\\"mainEntityOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/bpayton/#webpage\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/47\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users\"}]}}],\"wp:featuredmedia\":[{\"code\":\"rest_post_invalid_id\",\"message\":\"Invalid post ID.\",\"data\":{\"status\":404}}]}}]","headers":[["access-control-allow-headers","Authorization, Content-Type"],["access-control-expose-headers","X-WP-Total, X-WP-TotalPages"],["allow","GET"],["cache-control","max-age=2592000"],["connection","close"],["content-type","application/json; charset=UTF-8"],["date","Sat, 01 Aug 2020 15:28:56 GMT"],["expires","Mon, 31 Aug 2020 15:28:56 GMT"],["link","<https://wp.sitepen.com/wp-json/>; rel=\"https://api.w.org/\""],["server","Apache"],["transfer-encoding","chunked"],["vary","Origin"],["x-content-type-options","nosniff"],["x-powered-by","PHP/7.3.16-1+0~20200320.56+debian9~1.gbp370a75"],["x-robots-tag","noindex"],["x-wp-total","1"],["x-wp-totalpages","1"]]},"type":"Object"}