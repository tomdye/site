{"value":{"body":"[{\"id\":23708,\"date\":\"2020-04-30T07:00:43\",\"date_gmt\":\"2020-04-30T14:00:43\",\"guid\":{\"rendered\":\"https://wp.sitepen.com/?p=23708\"},\"modified\":\"2020-06-11T16:00:40\",\"modified_gmt\":\"2020-06-11T23:00:40\",\"slug\":\"progressively-adopting-typescript-in-an-application\",\"status\":\"publish\",\"type\":\"post\",\"link\":\"https://wp.sitepen.com/blog/progressively-adopting-typescript-in-an-application/\",\"title\":{\"rendered\":\"Progressively Adopting TypeScript in an Application\"},\"content\":{\"rendered\":\"<p>SitePen is a huge <a href=\\\"https://www.sitepen.com/blog/learn-typescript-best-practices-at-tsconf/\\\">advocate for TypeScript</a> and the <a href=\\\"https://www.sitepen.com/blog/fail-privately-onboarding-made-easy-with-typescript/\\\">benefits of having well typed code</a>. TypeScript is especially powerful when used by medium and large teams that want to find ways to increase their overall confidence in their code. One of the questions we get asked often is how can we migrate a codebase that is currently written in JavaScript to TypeScript. Many of our customers are happy to find out that type checking can be gradually added without a significant rewrite or large up-front cost.</p>\\n<p>This post will help guide you through progressively adding TypeScript to a JavaScript application. Like all projects, we highly recommend getting a feel from your team on what they expect and an understanding of where your project can benefit most from a type system for the least amount of effort. New to TypeScript coding? Read our <a href=\\\"https://www.sitepen.com/blog/update-the-definitive-typescript-guide/\\\">TypeScript guide</a> here, first.</p>\\n<h2>The First Step in Adding TypeScript to JavaScript Applications</h2>\\n<p>The first step in adding TypeScript to a project is adding a tsconfig file which configures the TypeScript compiler and the relevant resources in your project or application. TypeScript can automatically create this file for you by installing TypeScript in your project using <code>npm install typescript</code> and running <code>tsc --init</code>.</p>\\n<p>Now that we have a tsconfig, we need to instruct the TypeScript compiler to type check JavaScript files. We can do this by adding the allowJS, checkJS, and noEmit configuration flags.</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\r\\n\\r\\n{\\r\\n  &quot;compilerOptions&quot;: {\\r\\n    &quot;target&quot;: &quot;es5&quot;,\\r\\n    &quot;module&quot;: &quot;commonjs&quot;,\\r\\n    &quot;jsx&quot;: &quot;react&quot;,\\r\\n    &quot;noEmit&quot;: true,\\r\\n    &quot;allowJs&quot;: true,\\r\\n    &quot;checkJs&quot;: true,\\r\\n    &quot;strict&quot;: true\\r\\n  }\\r\\n}\\r\\n\\r\\n</pre>\\n<p><em>Sample tsconfig file</em></p>\\n<p>The <code>allowJS</code> and <code>checkJS</code> flags instruct the TypeScript compiler to compile and check JavaScript files for type errors. TypeScript does this by making a <a href=\\\"https://www.typescriptlang.org/docs/handbook/type-checking-javascript-files.html\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">number of assumptions</a> about the code based on value assignment and, if present, JSDoc comments. The noEmit option tells TypeScript that we only want to run type checking and do not want the compiler to output any transpiled code.</p>\\n<p>Once a tsconfig file is present, VSCode (or your favorite IDE) should detect that TypeScript is used and automatically type check your code. You may also run <code>tsc</code> from the command line and it will return a list of type warnings and a non-zero exit code if any issues exist.</p>\\n<h2>Resolving Type Warnings in JavaScript</h2>\\n<p>It’s not unusual for TypeScript to report hundreds of type warnings on its inaugural run. Don’t worry, most of these warnings will be easy to resolve! A majority of these warnings will go away after we update your tsconfig and provide any missing type information to the compiler. For this next section, we will be working with compiler options. The TypeScript Handbook has <a href=\\\"https://www.typescriptlang.org/docs/handbook/compiler-options.html\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">a list of all TypeScript compiler options</a>.</p>\\n<p>First, make sure that tsconfig’s target property matches the version of ECMAScript used by your project. Most Node.js projects, Babel projects, or projects targeting only modern browsers will need to change this value. You may also explicitly provide a list of libraries to be included using the lib option. TypeScript will tell you when it finds any code that doesn’t match the version of ECMAScript and libraries you have added.</p>\\n<p><img class=\\\"alignnone size-full wp-image-23714\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2020/03/image2-2.png\\\" alt=\\\"\\\" width=\\\"1177\\\" height=\\\"99\\\" srcset=\\\"https://wp.sitepen.com/wp-content/uploads/2020/03/image2-2.png 1177w, https://wp.sitepen.com/wp-content/uploads/2020/03/image2-2-300x25.png 300w, https://wp.sitepen.com/wp-content/uploads/2020/03/image2-2-1024x86.png 1024w, https://wp.sitepen.com/wp-content/uploads/2020/03/image2-2-768x65.png 768w\\\" sizes=\\\"(max-width: 1177px) 100vw, 1177px\\\" /><br />\\n<em>TypeScript warns that Set was added in ES2015 and this could be a potential error.</em></p>\\n<p>Next, types for your application&#8217;s external dependencies need to be added to your project. . Some projects will include their own set of type definitions that will automatically get used by TypeScript. Most other projects will have ambient types available on <a href=\\\"https://github.com/DefinitelyTyped/DefinitelyTyped\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Definitely Typed</a>. Ambient types include only type definitions for a project (i.e. only types, no code) and they are used by TypeScript to understand external libraries. Type definitions can be installed through npm from the @types group. For instance, to install React types run <code>npm install @types/react</code>.</p>\\n<p><img class=\\\"alignnone size-full wp-image-23713\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2020/03/image1-2.png\\\" alt=\\\"\\\" width=\\\"818\\\" height=\\\"74\\\" srcset=\\\"https://wp.sitepen.com/wp-content/uploads/2020/03/image1-2.png 818w, https://wp.sitepen.com/wp-content/uploads/2020/03/image1-2-300x27.png 300w, https://wp.sitepen.com/wp-content/uploads/2020/03/image1-2-768x69.png 768w\\\" sizes=\\\"(max-width: 818px) 100vw, 818px\\\" /><br />\\n<em>This error is due to missing React types. Installing @types/react will fix this.</em></p>\\n<p>React, or other projects using JSX, will need to include the jsx option in their tsconfig file (usually tsx: “react”). This will tell TypeScript to use its JSX parser to identify issues with JSX syntax and usage.</p>\\n<p><img class=\\\"alignnone size-full wp-image-23715\\\" src=\\\"https://wp.sitepen.com/wp-content/uploads/2020/03/image3-2.png\\\" alt=\\\"\\\" width=\\\"870\\\" height=\\\"88\\\" srcset=\\\"https://wp.sitepen.com/wp-content/uploads/2020/03/image3-2.png 870w, https://wp.sitepen.com/wp-content/uploads/2020/03/image3-2-300x30.png 300w, https://wp.sitepen.com/wp-content/uploads/2020/03/image3-2-768x78.png 768w\\\" sizes=\\\"(max-width: 870px) 100vw, 870px\\\" /><br />\\n<em>This error indicates that the jsx flag is missing.</em></p>\\n<p>By this point, any remaining type warnings should be directly related to your project’s source code. You will need to go through the remaining errors and determine if the warning represents an actual issue that needs to be resolved or if the warning is due to TypeScript incorrectly inferring types from the code. There are a number of ways to solve the latter by either providing more accurate type information or ignoring the problematic type, line, or file entirely.</p>\\n<p>One of the best ways to resolve a type warning is by providing the correct type information to TypeScript. The best way to do this in a JavaScript codebase is by using <a href=\\\"https://jsdoc.app/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">JSDoc</a>. TypeScript uses JSDoc comments to resolve types and the comments help to identify and enforce the typed values. More complex types can be defined in a .d.ts file. The file should have the same name as the file it is providing types for and TypeScript will use this file in the same way it uses types from Definitely Typed. While this is good for expressing more complex types using TypeScript’s type system, it does have the disadvantage of existing in a separate file which can lead to making updates to the codebase and forgetting to update the corresponding type definitions.</p>\\n<p>The other way to resolve type warnings is by ignoring them. TypeScript has several comments that may be provided to indicate how files should be checked.</p>\\n<ul>\\n<li><code>@ts-nocheck</code> will tell the compiler to skip checking the entire file</li>\\n<li><code>@ts-ignore</code> will skip checking the next line</li>\\n<li><code>@ts-expect-error</code> (TS 3.9+) works the same as <code>@ts-ignore</code> but if type error is not found it will produce an error</li>\\n</ul>\\n<p>Another option is typing module imports and exports as <em>any</em> in a .d.ts file. The TypeScript compiler will see this and allow the value to be used in any manner. Finally, if your tsconfig file has the <em>strict</em> option set, this enables a number of strict checking options for the compiler. Setting <em>strict</em> to false or disabling some of the strict checking options, like <em>noImplicitAny</em>, can eliminate a whole class of error.</p>\\n<p>It’s worth noting that ignoring type warnings through block exclusions, any type, or setting strict to false will make your codebase less type-safe. In the long term it’s worthwhile making sure that types are correct and as relevant as possible for the most used portions of your codebase.</p>\\n<h2>TypeScript and webpack</h2>\\n<p>Once you’ve resolved most of the type warnings caused by the TypeScript compiler you can look at integrating TypeScript into your build process. For webpack, this is as easy as adding the <em>ts-loader</em> module and including it as part of the webpack configuration. If your tsconfig file has <em>noEmit</em> set to false, then it should also be removed so webpack will receive output from TypeScript. Webpack has an <a href=\\\"https://webpack.js.org/guides/typescript/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">excellent guide for adding TypeScript to a webpack build</a>.</p>\\n<h2>TypeScript and Babel</h2>\\n<p>Babel has excellent support for using TypeScript as a type-checker. This is great for teams that want to add type safety without changing their transpiler to TypeScript. Simply add <code>@babel/preset-typescript</code> to the project’s babel configuration and ensure that <em>noEmit</em> is true in the tsconfig file.</p>\\n<h2>Conclusion</h2>\\n<p>The TypeScript team has gone to great lengths to make progressively adding type-checking to an existing project a quick and painless experience. The compiler is more intelligent than ever at inferring types automatically through their usage and catching common mistakes.</p>\\n<p>We highly recommend any team consider adding TypeScript to their existing projects. Type-safe code allows teams to write better code in less time with more confidence. When added to continuous integration, TypeScript will eliminate a whole class of common errors and assumptions that can often slip into production and ruin your day.</p>\\n<p>Need help converting your codebase to TypeScript? <a href=\\\"https://www.sitepen.com/contact/\\\">Contact us</a> to discuss how we can accelerate your timeline and improve your code quality!</p>\\n\",\"protected\":false},\"excerpt\":{\"rendered\":\"<p>SitePen is a huge advocate for TypeScript and the benefits of having well typed code. TypeScript is especially powerful when used by medium and large teams that want to find ways to increase their overall confidence in their code. One of the questions we get asked often is how can we migrate a codebase that [&hellip;]</p>\\n\",\"protected\":false},\"author\":56,\"featured_media\":23775,\"comment_status\":\"closed\",\"ping_status\":\"closed\",\"sticky\":false,\"template\":\"\",\"format\":\"standard\",\"meta\":{\"spay_email\":\"\"},\"categories\":[502,11,496,503],\"tags\":[],\"jetpack_featured_media_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/03/blog_TS-in-app.png\",\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.3 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>How to Migrate from JavaScript to TypeScript | SitePen</title>\\n<meta name=\\\"description\\\" content=\\\"Wondering how to progressively adopt TypeScript in a mature JavaScript project? It&#039;s easier than you may think. Read how to get started here.\\\" />\\n<meta name=\\\"robots\\\" content=\\\"index, follow\\\" />\\n<meta name=\\\"googlebot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<meta name=\\\"bingbot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<link rel=\\\"canonical\\\" href=\\\"https://www.sitepen.com/blog/progressively-adopting-typescript-in-an-application/\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"How to Migrate from JavaScript to TypeScript | SitePen\\\" />\\n<meta property=\\\"og:description\\\" content=\\\"Wondering how to progressively adopt TypeScript in a mature JavaScript project? It&#039;s easier than you may think. Read how to get started here.\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/progressively-adopting-typescript-in-an-application/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:published_time\\\" content=\\\"2020-04-30T14:00:43+00:00\\\" />\\n<meta property=\\\"article:modified_time\\\" content=\\\"2020-06-11T23:00:40+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/03/blog_TS-in-app.png\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1200\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"630\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/progressively-adopting-typescript-in-an-application/#primaryimage\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/03/blog_TS-in-app.png\\\",\\\"width\\\":1200,\\\"height\\\":630,\\\"caption\\\":\\\"Adopting TypeScript in an Application\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/progressively-adopting-typescript-in-an-application/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/progressively-adopting-typescript-in-an-application/\\\",\\\"name\\\":\\\"How to Migrate from JavaScript to TypeScript | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"primaryImageOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/progressively-adopting-typescript-in-an-application/#primaryimage\\\"},\\\"datePublished\\\":\\\"2020-04-30T14:00:43+00:00\\\",\\\"dateModified\\\":\\\"2020-06-11T23:00:40+00:00\\\",\\\"author\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/361d401f0e481f1513c141c48842fa30\\\"},\\\"description\\\":\\\"Wondering how to progressively adopt TypeScript in a mature JavaScript project? It's easier than you may think. Read how to get started here.\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://www.sitepen.com/blog/progressively-adopting-typescript-in-an-application/\\\"]}]},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/361d401f0e481f1513c141c48842fa30\\\",\\\"name\\\":\\\"Paul Shannon\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/76565296c9f544271ebb72aa3e69a1a5?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Paul Shannon\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/23708\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/post\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/56\"}],\"replies\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/comments?post=23708\"}],\"version-history\":[{\"count\":25,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/23708/revisions\"}],\"predecessor-version\":[{\"id\":24672,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/23708/revisions/24672\"}],\"wp:featuredmedia\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/23775\"}],\"wp:attachment\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media?parent=23708\"}],\"wp:term\":[{\"taxonomy\":\"category\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/categories?post=23708\"},{\"taxonomy\":\"post_tag\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/tags?post=23708\"}],\"curies\":[{\"name\":\"wp\",\"href\":\"https://api.w.org/{rel}\",\"templated\":true}]},\"_embedded\":{\"author\":[{\"id\":56,\"name\":\"Paul Shannon\",\"url\":\"https://www.sitepen.com\",\"description\":\"\",\"link\":\"https://wp.sitepen.com/blog/author/pshannon/\",\"slug\":\"pshannon\",\"avatar_urls\":{\"24\":\"https://secure.gravatar.com/avatar/76565296c9f544271ebb72aa3e69a1a5?s=24&d=mm&r=g\",\"48\":\"https://secure.gravatar.com/avatar/76565296c9f544271ebb72aa3e69a1a5?s=48&d=mm&r=g\",\"96\":\"https://secure.gravatar.com/avatar/76565296c9f544271ebb72aa3e69a1a5?s=96&d=mm&r=g\"},\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.3 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Paul Shannon, Author at SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"profile\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Paul Shannon, Author at SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/author/pshannon/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://secure.gravatar.com/avatar/76565296c9f544271ebb72aa3e69a1a5?s=500&#038;d=mm&#038;r=g\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ProfilePage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/pshannon/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/author/pshannon/\\\",\\\"name\\\":\\\"Paul Shannon, Author at SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/361d401f0e481f1513c141c48842fa30\\\",\\\"name\\\":\\\"Paul Shannon\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/76565296c9f544271ebb72aa3e69a1a5?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Paul Shannon\\\"},\\\"mainEntityOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/pshannon/#webpage\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/56\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users\"}]}}],\"wp:featuredmedia\":[{\"id\":23775,\"date\":\"2020-03-27T05:42:27\",\"slug\":\"blog_ts-in-app\",\"type\":\"attachment\",\"link\":\"https://wp.sitepen.com/blog/progressively-adopting-typescript-in-an-application/blog_ts-in-app/\",\"title\":{\"rendered\":\"Adopting TypeScript in an Application\"},\"author\":5,\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.3 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Adopting TypeScript in an Application | SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Adopting TypeScript in an Application | SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/03/blog_TS-in-app.png\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:modified_time\\\" content=\\\"2020-03-27T12:42:53+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/03/blog_TS-in-app.png\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1200\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"630\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/03/blog_TS-in-app.png#webpage\\\",\\\"url\\\":\\\"https://wp.sitepen.com/wp-content/uploads/2020/03/blog_TS-in-app.png\\\",\\\"name\\\":\\\"Adopting TypeScript in an Application | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"datePublished\\\":\\\"2020-03-27T12:42:27+00:00\\\",\\\"dateModified\\\":\\\"2020-03-27T12:42:53+00:00\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://wp.sitepen.com/wp-content/uploads/2020/03/blog_TS-in-app.png\\\"]}]}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"caption\":{\"rendered\":\"\"},\"alt_text\":\"Adopting TypeScript in an Application\",\"media_type\":\"image\",\"mime_type\":\"image/png\",\"media_details\":{\"width\":1200,\"height\":630,\"file\":\"2020/03/blog_TS-in-app.png\",\"sizes\":{\"medium\":{\"file\":\"blog_TS-in-app-300x158.png\",\"width\":300,\"height\":158,\"mime_type\":\"image/png\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/03/blog_TS-in-app-300x158.png\"},\"large\":{\"file\":\"blog_TS-in-app-1024x538.png\",\"width\":1024,\"height\":538,\"mime_type\":\"image/png\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/03/blog_TS-in-app-1024x538.png\"},\"thumbnail\":{\"file\":\"blog_TS-in-app-150x150.png\",\"width\":150,\"height\":150,\"mime_type\":\"image/png\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/03/blog_TS-in-app-150x150.png\"},\"medium_large\":{\"file\":\"blog_TS-in-app-768x403.png\",\"width\":768,\"height\":403,\"mime_type\":\"image/png\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/03/blog_TS-in-app-768x403.png\"},\"full\":{\"file\":\"blog_TS-in-app.png\",\"width\":1200,\"height\":630,\"mime_type\":\"image/png\",\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/03/blog_TS-in-app.png\"}},\"image_meta\":{\"aperture\":\"0\",\"credit\":\"\",\"camera\":\"\",\"caption\":\"\",\"created_timestamp\":\"0\",\"copyright\":\"\",\"focal_length\":\"0\",\"iso\":\"0\",\"shutter_speed\":\"0\",\"title\":\"\",\"orientation\":\"0\",\"keywords\":[]}},\"source_url\":\"https://wp.sitepen.com/wp-content/uploads/2020/03/blog_TS-in-app.png\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/23775\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/attachment\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/5\"}]}}]}}]","headers":[["access-control-allow-headers","Authorization, Content-Type"],["access-control-expose-headers","X-WP-Total, X-WP-TotalPages"],["allow","GET"],["cf-cache-status","DYNAMIC"],["cf-ray","5a554a7ac9c4079e-LHR"],["cf-request-id","03692ce0bd0000079ec7a05200000001"],["connection","close"],["content-encoding","gzip"],["content-type","application/json; charset=UTF-8"],["date","Thu, 18 Jun 2020 13:17:31 GMT"],["expect-ct","max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""],["link","<https://wp.sitepen.com/wp-json/>; rel=\"https://api.w.org/\""],["server","cloudflare"],["set-cookie","__cfduid=d1a5179376c56cc625d727a46a747602c1592486250; expires=Sat, 18-Jul-20 13:17:30 GMT; path=/; domain=.sitepen.com; HttpOnly; SameSite=Lax"],["transfer-encoding","chunked"],["vary","Origin"],["x-content-type-options","nosniff"],["x-robots-tag","noindex"],["x-wp-total","1"],["x-wp-totalpages","1"]]},"type":"Object"}