{"value":{"body":"[{\"id\":443,\"date\":\"2008-08-03T00:09:26\",\"date_gmt\":\"2008-08-03T07:09:26\",\"guid\":{\"rendered\":\"https://www.sitepen.com/blog/2008/08/03/the-dojo-toolkit-and-deft/\"},\"modified\":\"2008-08-03T00:09:26\",\"modified_gmt\":\"2008-08-03T07:09:26\",\"slug\":\"the-dojo-toolkit-and-deft\",\"status\":\"publish\",\"type\":\"post\",\"link\":\"https://wp.sitepen.com/blog/the-dojo-toolkit-and-deft/\",\"title\":{\"rendered\":\"The Dojo Toolkit and Deft\"},\"content\":{\"rendered\":\"<p>A new top-level package was recently added to the Dojo Toolkit called Deft &#8212; an acronym for Dojo Experimental Flex Technology. The <a href=\\\"http://bugs.dojotoolkit.org/browser/deft/trunk/deft\\\">Deft package</a> was created and is maintained by SitePen&#8217;s <a href=\\\"https://www.sitepen.com/blog/author/ttrenka/\\\">Tom Trenka</a>, taking advantage of Adobe&#8217;s <a href=\\\"http://www.adobe.com/openscreenproject/faq/\\\">new MPL licensing</a>, and the corresponding APIs of the Flash Player. Most articles focus on Adobe&#8217;s Flex Builder, which isn&#8217;t open source or free. The majority of articles about Flex and the Flex Builder also put an emphasis on components developed using a combination of ActionScript and XML-based description files, known as <a href=\\\"http://www.adobe.com/devnet/flex/quickstart/coding_with_mxml_and_actionscript/\\\">MXML</a>.</p>\\n<p>Instead of taking this approach, Deft focuses on ActionScript components created in support of the various projects within the Dojo Toolkit (mostly for DojoX).  Deft source files are well organized based in part on the organization of other Dojo Toolkit projects, as well as the package structure required by the Flex compiler. Most Flex applications are based on the Flex AS3 Application class, which forces you to write at least one &#8220;controlling&#8221; MXML file in order compile your code.  Instead of this, Deft components inherit primarily from the Sprite class &#8212; which allows you to write pure ActionScript code.</P></p>\\n<p><!--more--></p>\\n<h2>Compiling components within Deft</h2>\\n<p>To compile code within Deft, we use the command line Flex compiler called &#8220;mxmlc&#8221; &#8212; which is available with the Flex Open Source SDK.  You can use this command to compile both full Flex applications (i.e. with an MXML definition file) and Deft components.</p>\\n<p>First, grab the latest <a href=\\\"http://archive.dojotoolkit.org/nightly/\\\">Dojo nightly build</a> that contains Deft, or <a href=\\\"http://svn.dojotoolkit.org/src/deft/trunk/\\\">download it with Subversion</a>.</p>\\n<p>Then download the <a href=\\\"http://www.adobe.com/products/flex/flexdownloads/index.html\\\">Flex SDK</a>. I recommend placing it in an easily accessible location, as we&#8217;ll be using some absolute paths. It doesn&#8217;t require installation, so it&#8217;s ready to go after it&#8217;s unpackaged.</p>\\n<h2>Hello World</h2>\\n<p>Now let&#8217;s start with some very minimalist AS3 code that we can compile:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\npackage {\\n\\tpublic class HelloWorld {\\n\\t\\tpublic function HelloWorld():void {\\n\\t\\t\\n\\t\\t}\\n\\t}\\n}\\n</pre>\\n<p>This will be a top-level package (on the same level that our compiler will be) so we just use &#8220;package&#8221; without giving it a name (more about packages later). The next line is our class declaration, which is the same name as our file. And next is our constructor.</p>\\n<p>Of course, this will compile, but would be quite useless. Here&#8217;s a little bit of code that will add display capabilities, and add a text field to the stage:</p>\\n<pre class=\\\"brush: jscript; title: ; notranslate\\\" title=\\\"\\\">\\npackage {\\n\\timport flash.display.*;\\n\\timport flash.text.*;\\n\\tpublic class HelloWorld extends Sprite {\\n\\t\\tpublic function HelloWorld():void {\\n\\t\\t\\tdbgText();\\n\\t\\t}\\n\\t\\tprivate function dbgText():void{\\n\\t\\t\\tvar myText:TextField = new TextField();\\n\\t\\t\\tmyText.text = \\\"Hello World\\\";\\n\\t\\t\\tmyText.background = true;\\n\\t\\t\\tthis.addChild(myText);\\n\\t\\t}\\n\\t}\\n}\\n</pre>\\n<p>This will give you a basic text display object on the Stage. If you&#8217;re used to AS2, some of the new concepts can be tricky. In AS3, there&#8217;s no <code>_root</code> or <code>_level0</code>, and not a very obvious way to attach display items. Here we are importing the <code>flash.display</code> package, which includes the Sprite class that we&#8217;re extending. The Sprite class can be thought of as a stripped down version of MovieClip. Since a Sprite is a child of the Stage, it contains methods for adding display elements &#8211; in this case, our TextField, which gets added with <code>addChild()</code>.</p>\\n<p>Now let&#8217;s open Terminal and compile the code. I&#8217;m going to be using Unix conventions here, but for Windows users, it&#8217;s not much different. The basic parameters for our compiler are: <code>mxmlc, file-input, file-output</code>.</p>\\n<h2>Now it Gets Tricky</h2>\\n<p><strong>NOTE</strong>: The path to my dojotoolkit directory is <code>/Users/mike/Sites/Tests/</code>. I&#8217;m going to represent this path with a tilde (~) to help make things clear. But I recommend use all absolute paths initially.</p>\\n<p>Package names, the directory structure, and the current &#8220;location&#8221; of compiler must all be in sync, or you&#8217;ll get the inevitable error:</p>\\n<pre class=\\\"brush: bash; title: ; notranslate\\\" title=\\\"\\\">\\nError: A file found in a source-path must have the same package structure\\n  '(folder name)', as the definition's package, '(package name)'.\\n</pre>\\n<p>Our HelloWorld.as file is going here:</p>\\n<pre class=\\\"brush: bash; title: ; notranslate\\\" title=\\\"\\\">\\n~/deft/trunk/deft/HelloWorld.as\\n</pre>\\n<p>&#8230;and we will navigate our command line to the same location. Compiling from here <strong>should</strong> work. But in my case I got the dreaded error shown above. I fixed it by adding another parameter to the command:</p>\\n<pre class=\\\"brush: bash; title: ; notranslate\\\" title=\\\"\\\">\\n-source-path= ~ /deft/trunk/deft\\n</pre>\\n<p>This clearly defines the root of the package. Finally we define the output file, which will also be in the same location:</p>\\n<pre class=\\\"brush: bash; title: ; notranslate\\\" title=\\\"\\\">\\n-output= ~ /deft/trunk/deft/HelloWorld.swf\\n</pre>\\n<p>The following is my Terminal command for compiling. If you add the mxmlc to your system path, you can use mxmlc instead of the entire path. <strong>NOTE</strong>: This is formatted for readability. I used line breaks instead of <strong>spaces</strong> for clarity.</p>\\n<pre class=\\\"brush: bash; title: ; notranslate\\\" title=\\\"\\\">\\nmike$\\t/Users/mike/Documents/FlexDocs/flex_sdk_3/bin/mxmlc \\n-source-path= ~ /deft/trunk/\\nHelloWorld.as \\n-output= ~ /deft/trunk/HelloWorld.swf\\t\\n</pre>\\n<p>If successful, the last line will print <code>HelloWorld.swf</code>. If that&#8217;s not there, you&#8217;ll be shown an error. The most common error at this stage of setup is about the path conforming to the class name &#8211; but other common errors involve naming conventions and incorrect syntax.</p>\\n<h2>Shell Script</h2>\\n<p>That was a heck of a command to be typing. The simplest thing to do is put this in a shell script. This way, more complicated scripts can be written, but more importantly, this long command can be saved to disk. Here are the steps for anyone not familiar with shell scripts:</p>\\n<ol>\\n<li>Copy and paste the previous command into a text file.</li>\\n<li>Save the text file in the same path location as the HelloWorld.as file, and name it HelloWorld.sh (in Windows it would be .BAT). Make sure it was saved with that extension, and not something like &#8220;HelloWorld.sh.txt&#8221;.</li>\\n<li>You may have to change the permissions to make it executable. Go back to your Terminal (if it&#8217;s still open, we should still be in the right directory) and enter: chmod 777 HelloWorld.sh</li>\\n</ol>\\n<p>Shell scripts are protected from external attacks by requiring you to use a period slash before your script name. So to execute the script, type:</p>\\n<pre class=\\\"brush: bash; title: ; notranslate\\\" title=\\\"\\\">\\n./HelloWorld.sh\\n</pre>\\n<p>Now it&#8217;s easier to maintain that long command. You can of course add more options to it, or loop through and compile several files, or any other shell script wizardry you can dream up.</p>\\n<h2>Hello Real World Example</h2>\\n<p><img src='https://wp.sitepen.com/wp-content/uploads/2008/08/uploaderexample.png' alt='Deft Multi File Upload Shot' /></p>\\n<p>Now let&#8217;s look at one of the latest projects in Deft, the <a href=\\\"http://trac.dojotoolkit.org/browser/deft/trunk/deft/form\\\">Uploader</a>. The fully qualified class name is <code>deft.form.Uploader</code>. <code>Uploader</code>is the class name, and <code>deft.form</code> is the package to which it belongs. It&#8217;s very similar to Dojo&#8217;s package system &#8211; the compiler reads the import of a <code>deft.form</code> file, and expects to look in a <em>deft</em> folder, and then a <em>form</em> folder. In our HelloWorld example, there was no package name &#8211; so the compiler expected to find the file in the same folder where it resided.</p>\\n<p><code>deft.form.Uploader</code> is the main file and imports two other custom files, <code>deft.form.UploadList</code> and <code>deft.common.debugging.Tracer</code>. Tracer is a multi-output debugging tool, which can parse and log objects and messages to the Output panel in the Flash IDE, the Flash Player Debugger, and/or the Firebug console.</p>\\n<p>You&#8217;ll find that the shell script, &#8220;uploader.sh&#8221; is located in the trunk, the same level as the deft directory. You&#8217;ll see how the source-path option points to the location of the shell script, and the path to Uploader.as is continued from there. Finally, the output points to a location where the SWF will be used in dojox.form, in the resources folder.</p>\\n<p>You won&#8217;t have to go through this build process to use <code>dojox.form.FileInputFlash</code>. All you have to do is get the latest <a href=\\\"http://archive.dojotoolkit.org/nightly/\\\">Dojo nightly build</a> or wait for the 1.2 release, and the SWF will be in the <em>resources/</em> folder. The Deft files are there in the event that a developer needs to make custom modifications for a project, or permanent modifications, and optionally contribute them back to Dojo.</p>\\n<p>Those are the basics for SWF compilation. The Deft project is still in its infancy, but there are currently a few goodies in it including the multi-image uploader, pre-alpha quality support for dojox.gfx.  Future plans include support for audio and video. Hopefully Adobe will continue its current path towards being open source friendly, helping Deft flourish.</p>\\n\",\"protected\":false},\"excerpt\":{\"rendered\":\"<p>A new top-level package was recently added to the Dojo Toolkit called Deft &#8212; an acronym for Dojo Experimental Flex Technology. The Deft package was created and is maintained by SitePen&#8217;s Tom Trenka, taking advantage of Adobe&#8217;s new MPL licensing, and the corresponding APIs of the Flash Player. Most articles focus on Adobe&#8217;s Flex Builder, [&hellip;]</p>\\n\",\"protected\":false},\"author\":21,\"featured_media\":17563,\"comment_status\":\"closed\",\"ping_status\":\"closed\",\"sticky\":false,\"template\":\"\",\"format\":\"standard\",\"meta\":{\"spay_email\":\"\"},\"categories\":[45,16,51],\"tags\":[],\"series\":[],\"jetpack_featured_media_url\":\"\",\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.4.1 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>The Dojo Toolkit and Deft | SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"index, follow\\\" />\\n<meta name=\\\"googlebot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<meta name=\\\"bingbot\\\" content=\\\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\\\" />\\n<link rel=\\\"canonical\\\" href=\\\"https://www.sitepen.com/blog/the-dojo-toolkit-and-deft/\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"The Dojo Toolkit and Deft | SitePen\\\" />\\n<meta property=\\\"og:description\\\" content=\\\"A new top-level package was recently added to the Dojo Toolkit called Deft &#8212; an acronym for Dojo Experimental Flex Technology. The Deft package was created and is maintained by SitePen&#8217;s Tom Trenka, taking advantage of Adobe&#8217;s new MPL licensing, and the corresponding APIs of the Flash Player. Most articles focus on Adobe&#8217;s Flex Builder, [&hellip;]\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/the-dojo-toolkit-and-deft/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"article:publisher\\\" content=\\\"https://www.facebook.com/SitePen\\\" />\\n<meta property=\\\"article:published_time\\\" content=\\\"2008-08-03T07:09:26+00:00\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://wp.sitepen.com/wp-content/uploads/2020/01/og_imageV1.jpg\\\" />\\n\\t<meta property=\\\"og:image:width\\\" content=\\\"1600\\\" />\\n\\t<meta property=\\\"og:image:height\\\" content=\\\"900\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:creator\\\" content=\\\"@SitePen\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/the-dojo-toolkit-and-deft/#primaryimage\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"\\\"},{\\\"@type\\\":\\\"WebPage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/the-dojo-toolkit-and-deft/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/the-dojo-toolkit-and-deft/\\\",\\\"name\\\":\\\"The Dojo Toolkit and Deft | SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"primaryImageOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/the-dojo-toolkit-and-deft/#primaryimage\\\"},\\\"datePublished\\\":\\\"2008-08-03T07:09:26+00:00\\\",\\\"dateModified\\\":\\\"2008-08-03T07:09:26+00:00\\\",\\\"author\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/b17a4b78bc644814f33f687fe684bb19\\\"},\\\"inLanguage\\\":\\\"en-US\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"ReadAction\\\",\\\"target\\\":[\\\"https://www.sitepen.com/blog/the-dojo-toolkit-and-deft/\\\"]}]},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/b17a4b78bc644814f33f687fe684bb19\\\",\\\"name\\\":\\\"Mike Wilcox\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/a3d37a7b01b791e438645e5f7cd99d0e?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Mike Wilcox\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/443\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts\"}],\"about\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/types/post\"}],\"author\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/21\"}],\"replies\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/comments?post=443\"}],\"version-history\":[{\"count\":0,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/posts/443/revisions\"}],\"wp:featuredmedia\":[{\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media/17563\"}],\"wp:attachment\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/media?parent=443\"}],\"wp:term\":[{\"taxonomy\":\"category\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/categories?post=443\"},{\"taxonomy\":\"post_tag\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/tags?post=443\"},{\"taxonomy\":\"series\",\"embeddable\":true,\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/series?post=443\"}],\"curies\":[{\"name\":\"wp\",\"href\":\"https://api.w.org/{rel}\",\"templated\":true}]},\"_embedded\":{\"author\":[{\"id\":21,\"name\":\"Mike Wilcox\",\"url\":\"https://www.sitepen.com\",\"description\":\"\",\"link\":\"https://wp.sitepen.com/blog/author/mwilcox/\",\"slug\":\"mwilcox\",\"avatar_urls\":{\"24\":\"https://secure.gravatar.com/avatar/a3d37a7b01b791e438645e5f7cd99d0e?s=24&d=mm&r=g\",\"48\":\"https://secure.gravatar.com/avatar/a3d37a7b01b791e438645e5f7cd99d0e?s=48&d=mm&r=g\",\"96\":\"https://secure.gravatar.com/avatar/a3d37a7b01b791e438645e5f7cd99d0e?s=96&d=mm&r=g\"},\"yoast_head\":\"<!-- This site is optimized with the Yoast SEO plugin v14.4.1 - https://yoast.com/wordpress/plugins/seo/ -->\\n<title>Mike Wilcox, Author at SitePen</title>\\n<meta name=\\\"robots\\\" content=\\\"noindex, follow\\\" />\\n<meta property=\\\"og:locale\\\" content=\\\"en_US\\\" />\\n<meta property=\\\"og:type\\\" content=\\\"profile\\\" />\\n<meta property=\\\"og:title\\\" content=\\\"Mike Wilcox, Author at SitePen\\\" />\\n<meta property=\\\"og:url\\\" content=\\\"https://www.sitepen.com/blog/author/mwilcox/\\\" />\\n<meta property=\\\"og:site_name\\\" content=\\\"SitePen\\\" />\\n<meta property=\\\"og:image\\\" content=\\\"https://secure.gravatar.com/avatar/a3d37a7b01b791e438645e5f7cd99d0e?s=500&#038;d=mm&#038;r=g\\\" />\\n<meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n<meta name=\\\"twitter:site\\\" content=\\\"@SitePen\\\" />\\n<script type=\\\"application/ld+json\\\" class=\\\"yoast-schema-graph\\\">{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@graph\\\":[{\\\"@type\\\":\\\"WebSite\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\",\\\"url\\\":\\\"https://wp.sitepen.com/\\\",\\\"name\\\":\\\"SitePen\\\",\\\"description\\\":\\\"Enterprise Web Apps Done Right\\\",\\\"potentialAction\\\":[{\\\"@type\\\":\\\"SearchAction\\\",\\\"target\\\":\\\"https://wp.sitepen.com/?s={search_term_string}\\\",\\\"query-input\\\":\\\"required name=search_term_string\\\"}],\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":\\\"ProfilePage\\\",\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/mwilcox/#webpage\\\",\\\"url\\\":\\\"https://www.sitepen.com/blog/author/mwilcox/\\\",\\\"name\\\":\\\"Mike Wilcox, Author at SitePen\\\",\\\"isPartOf\\\":{\\\"@id\\\":\\\"https://wp.sitepen.com/#website\\\"},\\\"inLanguage\\\":\\\"en-US\\\"},{\\\"@type\\\":[\\\"Person\\\"],\\\"@id\\\":\\\"https://wp.sitepen.com/#/schema/person/b17a4b78bc644814f33f687fe684bb19\\\",\\\"name\\\":\\\"Mike Wilcox\\\",\\\"image\\\":{\\\"@type\\\":\\\"ImageObject\\\",\\\"@id\\\":\\\"https://wp.sitepen.com/#personlogo\\\",\\\"inLanguage\\\":\\\"en-US\\\",\\\"url\\\":\\\"https://secure.gravatar.com/avatar/a3d37a7b01b791e438645e5f7cd99d0e?s=96&d=mm&r=g\\\",\\\"caption\\\":\\\"Mike Wilcox\\\"},\\\"mainEntityOfPage\\\":{\\\"@id\\\":\\\"https://www.sitepen.com/blog/author/mwilcox/#webpage\\\"}}]}</script>\\n<!-- / Yoast SEO plugin. -->\",\"_links\":{\"self\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users/21\"}],\"collection\":[{\"href\":\"https://wp.sitepen.com/wp-json/wp/v2/users\"}]}}],\"wp:featuredmedia\":[{\"code\":\"rest_post_invalid_id\",\"message\":\"Invalid post ID.\",\"data\":{\"status\":404}}]}}]","headers":[["access-control-allow-headers","Authorization, Content-Type"],["access-control-expose-headers","X-WP-Total, X-WP-TotalPages"],["allow","GET"],["cf-cache-status","DYNAMIC"],["cf-ray","5a808a065bc406d1-LHR"],["cf-request-id","03843497fb000006d1d5835200000001"],["connection","close"],["content-encoding","gzip"],["content-type","application/json; charset=UTF-8"],["date","Tue, 23 Jun 2020 19:15:41 GMT"],["expect-ct","max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""],["link","<https://wp.sitepen.com/wp-json/>; rel=\"https://api.w.org/\""],["server","cloudflare"],["set-cookie","__cfduid=d9fbeb90073aa8734782fc67366e404291592939741; expires=Thu, 23-Jul-20 19:15:41 GMT; path=/; domain=.sitepen.com; HttpOnly; SameSite=Lax"],["transfer-encoding","chunked"],["vary","Origin"],["x-content-type-options","nosniff"],["x-robots-tag","noindex"],["x-wp-total","1"],["x-wp-totalpages","1"]]},"type":"Object"}